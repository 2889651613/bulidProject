(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-32cb5e5e"],{"3db9":function(e,t,r){"use strict";function i(e){var t=new XMLHttpRequest;t.open("get",e.url),t.responseType=e.responseType||"text",e.onprogress&&(t.onprogress=function(t){if(t.lengthComputable){var r=t.loaded/t.total;e.onprogress(r,t.loaded,t.total)}else e.onprogress(null)}),t.onload=function(r){t.status>=400?e.onerror&&e.onerror():e.onload&&e.onload(t.response)},e.onerror&&(t.onerror=e.onerror),t.send(null)}t["a"]={get:i}},"52a9":function(e,t,r){var i,n,a;r("7037");(function(o,s){n=[t,r("313e")],i=s,a="function"===typeof i?i.apply(t,n):i,void 0===a||(e.exports=a)})(0,(function(e,t){var r=function(e){"undefined"!==typeof console&&console&&console.error&&console.error(e)};t?t.registerMap?t.registerMap("world",{type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:OGC:1.3:CRS84"}},features:[{geometry:{type:"Polygon",coordinates:["@@࠿@ᠳ࡚с̶ʩт˷˔ƹͮɠͲ˖рԜ׷҄̕ҴNܾͰؼ÷۸ήԪҮƴ̮¿ঞɪֶϤϲŹƛе²֭ĝǱƊĠǔōϭñėށ؅ਓɁȥԯ঻ƻԓࣗඩअ৯۝ڻो֑য়ߝล໥ϓ؇UļāļƫȖɩ̌]ᶼ̈́͘ɮ͜ɪ͚®ĞĚ۪ƼɦːϪǰ;Ąߞᢌᣮ"],encodeOffsets:[[49130,8189]]},properties:{name:"Somalia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ƛ¬Ð@ĞÆÒªǱ"],encodeOffsets:[[9810,48188]]},properties:{name:"Liechtenstein",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@⌗øĒ୬ͪࣆيʊˆ҄ؔ^˶ȇɪÈצϲ֌ĐФ؜ְദ׼ҢڴήࡔլİtʍԾ΃ʤ՘ĲʢË΢ǒŎɽĠPĀmǶVǢgΤ̑ĮவňȵǑ¼ýĈå²yĞÇÞ³ëąÍĥʹ೵]É³Ɨ{ΡŉƑcăZÉSÍƫH˃ǨǓѭǇƣġǥÕȿÕǃñÿśıƇħěŽđұĿЍUƉÝåSĵ^čfʉdʇǍ·ণ֣oۋ@Ĺ"],encodeOffsets:[[-8891,28445]]},properties:{name:"Morocco",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@⌘@ķœ@@@Ŕ@@̷@̩@ǕBȍ@ȋ@ƍ@ĩ᫫@@ɋ@΃@ɭ@ŕ@қ@΃Oх̉űƽw½gΉɩķƯtįQJǳ՟TšRšPėRŏᇷCฝCċα`ý§¨Ƙ࢘Ӕ׎ŰшΞ׎ǇĹèƤ࠴݂Ģָ͌܌۴КͲޞŚƀ","@@i˷@@j˸"],encodeOffsets:[[-13351,28480],[-8984,28120]]},properties:{name:"W. Sahara",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@A@ƟwđĵȏÒʁč«Ǔƅ@ã̌Ο˘SǴʒÊÆ`Å_֡˰ϟʊkIDZʪĠɁ˔˶àϷˈȘѬ˻W²ɤ˲ÚͩǀºĬȋːÈĆѠŎǊĘȘoø`Ȓg¤_cº·¶ÙȈėÒ÷´fFfV\\T^Qhɿ՘ɳkĝƱƨ÷YißMµGuODƎĨãɰİÈßĜhŴĬŬ~Ũ±âZ]ãNÇk¹ėǌƽɣȭkěHãƺ˝Ǵč¬­¡İÃƩǝÿďȫẸ̀Qßço}ß]ĕUΥ@Ʌ±@@"],encodeOffsets:[[22080,43262]]},properties:{name:"Serbia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@хǑޟܯőࡡԧ¡á͘з¤̧սշŊƉˏͭąٝ°̺׿ٓɥɓӱз·ʫɫƚν@ӧʟƆƋʇğԻzЛϭĭ޿ॕʳכ]ʛŷѿĘࣻõЍĺٵȀ͋ĠШъȒȢȌȜxèFƆ·ǴăĆˁȡ|ɍZ{ƒZØaŤDĠƲDèĳ̎őͨaŦ̰̚˽êóļ@͒ƂǲȸZíĊ´ubSv\\vÀTÎ hňǞjΔö´ƌFgÈèTɶǓЀ«Ȁǫ͊î̲ǆzĺîĢƘ؜Ɣ˒Ř˞ǈ°òńƲъÖŖ¾ŚǶRɄJǮˊרȋ¦HʲpȮńċľsĺ¤ÚR|¼[þJ¬wNwNÌÛļûĢmǌÂpp^ªô¤ʂĸ®T¸SZ^b\\~VvL¤QȂƓî§R¦¼¶^ê}ĞlôÒÈŒǐ`ƐǢbÀèHĎ±ĸ^ǠŶˌ̆ѨīÞŗ­ɃaÎJĊtÄB~oűځĈʁŔů࠰˨ȦȨˈŢƠ®ĈRľsª_ÂW\\a÷ËvkĄOΘĈ²ʹkÒČÑ¼­§MÕryWJ·oğ}ƽáHiĸã|u^Q"],encodeOffsets:[[76331,37911]]},properties:{name:"Afghanistan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÂR̮cҮƠ͎Åǖ@ǔ|ɔDªĞƶHǊŖ̈ƄĺTǊ|ʖĞGR_¿ƽA½n½¦ʬGɼEҾi°oČ଩ýٵ͔ӑĠճēśnʕ¬ÓIàþÖÚ~ɈqɘM͚Ĳ̴ŐŢdܓ×މoěG±ðƁIĵY൑@ȗ@@ڟ@ˑ@ˑBౝǶ֡া࡙ࢳǑ೟Ƶҧƀ਩¼ҹͺሹTᅍeғ̴ʟÌՋȭǃNOėFǗģµƇo͆ƖËܼɠˌ҆ლζ֌θɌƴȞǀЊ¢ݐс޴˫ߚ̢̤hˊүஒґۤݴɦƌOՎNዲQĮĘÇƈǕϡÐŻĚƉÆ˕Ԃۻ"],["@@̆Ƅ_øęÞËr___ğıͅ˭DeÌ·ӏɫθƅːОΖ"]],encodeOffsets:[[[18002,-8293]],[[12802,-4697]]]},properties:{name:"Angola",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Π˗ä̋ÝԍȄ́ɊßQÙÚŷűŻȉ̍ǝ©¡aquwW@yÐğBƧůÙPÑXkAűˬѽ̨ŚAĹɐȨࠐDŮȡæ½ʮ̾ϦŒŷɴÒ"],encodeOffsets:[[20546,43569]]},properties:{name:"Albania",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ł^ĊĤ³"],["@@ɨ÷ϫƯħƾƊ¡sƜƖ"]],encodeOffsets:[[[20135,61632]],[[20470,61800]]]},properties:{name:"Aland",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Ɵ½íIir[ò\\¢Ö ÈOŢ~y@esQm"],encodeOffsets:[[1747,43524]]},properties:{name:"Andorra",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʙOǘøĂç"],["@@šȆĶãŷ"],["@@ø֟˗ȫÁǸǣïԿƖw´ŷѡĹÂĹ˧څ[˥ççᒣʾ߳४oǪǘÚȱɴѼƸॺí̆ĐȾĚ̌҂ৎࠠŞɦò_m̙ź"]],encodeOffsets:[[[55223,24758]],[[54613,24841]],[[57650,26267]]]},properties:{name:"United Arab Emirates",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ؠQۓƫĵÜǪĢ"],["@@nᇜ͠έǇvµǥˠŸɏ׶УࢸНࢴŧʕȣ࢑įԭņ౳¦"],["@@ȴǛߖȡפϿବӗɒ˳͉ӡȧɇ˽ͫЛoÁıξบɿɮȜǴGƌùÚDæ¶ÌEæ¶Ì rºʒàǞȔɌͦʮbΰƠ¥ʐĒɜũȈԵƛ۩ЧʩхŃɫˇԽ˳ƩǟXࢣ਍ʉƽƯɃƅę¡ě½õĳģă¾ɣÙßdƕqùşȅißlgĝëĿēk©z¿HÃiÉZÇÁEÕáųeû¤ͩɅŷĻҩžѻőēȰ͗آ˯͆˿Ʒ̛fʳɔɧ˜¥ÞщܿਟՍ̍൱ͷઃŻأУƊϋȰŉŁMĒå¯̩ŽÍīʩžБůǻӃǿ֋¥਻ΤɛŧŬਅϘŷƋŴcˎňƗ¢θĖƒƙZ΍Εƻϟ̲ЛŹ³ýתǭѫȁ΋͏Yש͏͍R̅ҧكʗցڛþؖ͟ӁٺóɖɁÛʗΉǁʔ@ľĩൿࡕǿʛş֡γƻ·̒LƷˋÉ͎KƨůԹ˻˃ѹƄƒеίăрýѬ֯ౡ̊࿩fЩϘÊܞƛØգŋ̉Ԩ«֊þŴ˜\\Đʊ͐ƢÌ̮ȒĠvɌǃȞƠ͒ψʔ̶ȬưƧЮȴǨī̀ͮȺȹ̒ϏÚmŎڬRĐǠ«Ĵԛ¶ŞϢȋӨżĢͩȺب̜ǤƉͬiߪȊʼğǤƄž»͖ƲŚ֖Ҙˤʷ۾qޚŘˎմϲUҐŝɶƌČ˺܆ǚÜ߆ɝèÀˊ˻ڨĠł˥͚ÆΞǰłƀ֌ǒFĦƶīĆÉيǘȄƞׄМЪˠ٪Ɉ\\ɰƖɭцƪˈƫ؞Ǫˠƫ̂ʾ̘ݨ̞̈ࢂƽưǢʾɼʚ̆Ē¼ĘİxzEÜ}ǘşöãîSƖ`Ѷ_͘ĳèţħčÔƧ¢ÇdǊʒѾ°࣠Ǽʗî·ƚ÷ƄƣΔӍ׶Ћ"]],encodeOffsets:[[[-66098,-56029]],[[-70300,-56170]],[[-62550,-24224]]]},properties:{name:"Argentina",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@́{ř̮ǯŔfƖ˟§ʭôķƶɛ½Г˲Իðą̘ŸȦʁ͚՚Ú؞ÞǆǀťıÑѢȓǫƣÜşєʣßǫʳ¡Ժ͏ɼīŷȀƭƹúʇ"],encodeOffsets:[[47607,39841]]},properties:{name:"Armenia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@āɆƃë"],encodeOffsets:[[-174823,-14695]]},properties:{name:"American Samoa",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@īƨǜMïƙ"],["@@΂ŜªūȩÃŚÕٸǔȢťƙțȃúͽñȐŵɖ¨ĻƣࠅƦƇƥƫJÌ҈ħĊȜͼŒǗëȃŐy"],["@@ƥÈè þħ"]],encodeOffsets:[[[70946,-50236]],[[70846,-50288]],[[53079,-47554]]]},properties:{name:"Fr. S. Antarctic Lands",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@ťowîÐÒĎŏ"],encodeOffsets:[[-63197,17446]]},properties:{name:"Antigua and Barb.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ēǡÎƮŸÔı"],["@@Ȫb࢈ͥ;ðŀùŢƨϸQƖƂɂyĄþȺÙńଡŇȶʏԑlԟƇñĈ§ĐŸþȏêķǁŻȲ­ΧȻºæĳǡ˱˙Ĕщ£ƞǴ¼˫p͕̮ʏאɨɗ¢ŚƹǪą¥FƪЅՊĵΆÔʸ˚ĩ"],["@@£ÝÏÒĴL"],["@@éżBÑ"],["@@ÞƯ͑êʴĆ"],["@@ʠȓbƿǩõ˵͢ȞĨ"],["@@÷ǲƌ˖Š̻ǳƋ"],["@@Çȏ|ƾ"],["@@˪ZǎŁϟȅƩȩüϡ¥ǷŤĈŢגƀɀyXı"],["@@ĥɩRʨĔ}"],["@@ǿɪcɂȤѫ"],["@@čǘ¾̞ǂǀéǆĨðþ˫ɭֿ"],["@@þCȷǡȸĨ"],["@@ŅÁĮƶXĳ"],["@@ĕPŊÀř"],["@@jɇǗȞƮj"],["@@ľàēģi"],["@@̉ƙŒɲʚÔĢĵǃµ"],["@@ųÈÈĮìƵ"],["@@ÕgIżàœ"],["@@ěWÌŖĽ"],["@@ƪdũʉǤģ³ğҷèö̆Țǂ¸Ņ"],["@@īPþŸnƇ"],["@@ƃ×ʤǮşŕ"],["@@Ŭřҿ|żňƴŢŠƒ˽"],["@@ͼȶŨɪȹӳЩρʸŅΨȠƹ"],["@@Ñ»ɆΪƳ̭"],["@@ğɠĂÌ^˫"],["@@Í̉ʖ˱ƺڭʟǪԝǤĩјȚƦɕ՞ϙŜ௳ˠЉƂǶ؇ÿՙʪɽ¦ΣٌΓɼ^˘͡ࡢѧŀǇŻZĥѪқȾϟɀܥĴ¨ŶƇȰŔŦϸͧxƦĔƞ࢑ʼ˙֬˵ʤЋ˜ǣǔͱɔȗÒ͑ưů¡ਗϬ࢝εӯཝñܹ͓ԡõͥ˫ȩzá̏ťѩ֯W̃ſáĜq̡ЁÉћԟۏɗාϝȯകƍࡧؕ՝ÁĴƕŊ®ÇʱȭɾȉŧȢͥŌŪŢÇŴƷL˩əȯƈǎGǪɆȓǈеȥɨÕृԡࣩκؗĬŋįƛr΍ʌԷưԗնÔӪŅʔٓڔǬ¶ĤóMȢٕɡ˳|˞ӶkɖͳԀͭࠉڷąŌ˘̈́DĒلςӨã͈ŠĚǫѠNȳ̷̉ǡλڵͳҏՋàˑƩĴŧÝѳ̖ĀĊȞÿȗԸˣ˪ĉʢƵŜʳtŅƼÕȘńdNƶӋ˺ϟpϣȒҗ§࣏ј̣ĝഁ±༱ԕ୷ঃӭџŏإݵଗÙ÷İտ¢ಧů͹ͥұģٓэҭģࣃĢѽǊΟ̴ұƞ_ج̬Ŀ˘ϔ`఼Է॔ȃ஖ׇࣀř؞۽঒Ś½ƎȎБŸĒĂbƘϩԴ´ĪɘșVʣŊĬŚʵĊÓŀĖAπڟஔÔӈɤϜшĥɶ˸َĎ¬fջȢŢ˨Ѥغ˨Ұϰא̈́טÉښ̄ҪĨ̒ɢМஊκ˸ʆи۾ј̬ǕӀĪΎϬ̊ɀ̎Ӿ࣫~ЬȨ÷Ǟ͑άŔØeǊĺŊǃƼİɌĻІ]̯ĔXƔƈhÔȲŧďĻǶ¸ɞĺEŌȈ̶ƗTŔƍEÏŲǘƀˊīƫ;ͶȚ¢ȐÞȧƄ¼ÐůŌļѤŊsØƉŨŨƖšǰǤIƖńҰʍ؈֯ġԱðĖĊÕáɊʹɦМğƂɵ¬ʐ̮ɥFʐǲnȳƴþøˍƒ˦Όň΂ΠɪĿƂǀȚɨǾJǺȶŃLǆΘʦŬǫՂGǄĂƂğČƈǞXçö͖ǗƂͷbȿƢŜĸǎŉƬô̌ʁɺĈȊʡ؀ŁќȅˀÌʦǫǂwעͪǽ͑ʮdÖȗƮWÌňáŎǌȆɶɱƬc¨ęΉι¶ǿŏȅƕò̯ƓxՋҥە¤ƑلЗðƓΎīäǫǾ`ל̕ҔС٠ƱȨίڌ̽ЎàˎǮϰߜˬ஀đӲÒˊĹ̘ƢҎˆˈǢɃȼVŠƴ̀úßǨजʎȪŰ©ŁȐȭþץʴŏ"],["@@ëµ¹ĸÈ¤Þĥ"]],encodeOffsets:[[[150893,-44438]],[[148525,-41765]],[[151795,-41487]],[[148260,-41478]],[[151887,-41274]],[[151553,-40711]],[[147383,-41078]],[[148803,-39414]],[[140899,-36596]],[[157224,-28094]],[[115900,-26678]],[[156752,-26368]],[[154775,-24054]],[[118217,-21286]],[[152621,-20778]],[[149789,-18668]],[[142807,-17525]],[[142857,-16970]],[[140384,-16156]],[[127588,-15771]],[[128204,-14929]],[[139996,-14135]],[[139508,-14156]],[[139611,-11880]],[[133591,-11959]],[[133754,-11649]],[[139877,-11651]],[[135776,-11574]],[[146616,-12241]],[[145690,-10961]]]},properties:{name:"Australia",childNum:30}},{geometry:{type:"Polygon",coordinates:["@@ñǱʀ͋ãʣթɊśȝŕV̡ͥťŕƻࣃÑ˿ǥ܋ĶǭśFƵ^׃Čù~·¶½ÚĩČo¦I\\wPͥąȻXā]ǁMġÑÝ½iÇOĉLÍfÏ¬ğPčBuTDÆÅjǹőҫǦ«ǶĈǒď´ȌªúoŎÀvqL±Ŕ{cíƼò¨ŔSƨLêoŌGƚŃ२ȐdxMÀZR¸_ð@Ŝcǌ_î}t_aDuvkÎø}Dd~bÒLÚſÊ²ƘǋǼϤǐĜ|òÀ¦ƞXN`TŲAŲNZJłXhȠƑբE͂ͰࠬȱФΆǓ"],encodeOffsets:[[17360,49766]]},properties:{name:"Austria",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Փň֍ը£¬ɜ¾ĸƵʮóˠ¨eƕǰœŚ̭"],["@@ݒ࢙ˎǻ΀áƸȋϓ̯ĻȏӯɑǓˋŷĔƃʝ\\͹ɵqԃόʞƒǁȆǾƄ˛ʈ౉ٷùʈƺǿƮĬŸɻԹ͐ʴ¢àǬѓʤÛŠǬƤѡȔĲÒƿŦǺŐÂvڲɟ̂ěĔXüÒðT­´ˁƐķǎȸǄˎßӌѽЈéڂը"]],encodeOffsets:[[[47222,39811]],[[49739,42849]]]},properties:{name:"Azerbaijan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@guûƿcy¤«£ŇR§èöcĘÐOōiƃ͇͟ϟչȕů˃LǇԮZپǭ˪ôľʎǳʶ^ƜàÀ̈́ǀÝʔĔŨñ"],encodeOffsets:[[31287,-2457]]},properties:{name:"Burundi",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ʦq̈ʣȋ˥wAá\\ğí£Í}©͋ʁw՝ɸ£̪ɯǉͫVtɴСºÿƞ˓°Ɠȼ̇{ȟ̆ۚɾèōЂ˘ƮڰêƸǅӨŁđͅ"],encodeOffsets:[[5831,51994]]},properties:{name:"Belgium",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ÁÁŏEĕŶǽbmlʻàƋ¿ǃĿQͻɷȍɽ׏ɧÓ֩aлɍÙÃAck_wL˝óVŃjån»k¥cÇ{ȍ࣫ŹžàȹזĀJqႬǷʾ±ՔӇ͞ŚԜѴϠҮyΆДo˚τƌڒׁ"],encodeOffsets:[[3682,11977]]},properties:{name:"Benin",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@­ΏȀɃ ɯǂɥӪ̃ǱNC˕ӠͿҒÈĸȡŹƁˈ΋΅Гҭzѳϟ΃ҽƊȗ¨˟ȩΑê຋WíͿļƇVֽ^óºĽV«ko¥¥D·ØsÜÜ­­ÃĆ¿ÇYʕǫM͟ŕïÅćÕDķÚĉSąґӂɗĚԮȬ˪ϞӶȼɪɘ©ˮɈĸď˚ƬǀǠĄΜǿȎĈ®͆ʢUÞʬʌɸЊ¹Şʎޤ̨ʐȒѲXϠŭ"],encodeOffsets:[[223,15270]]},properties:{name:"Burkina Faso",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@÷r¢ǆǷ"],["@@ç\\ƪnā"],["@@ęÏΒÒ́"],["@@ũĀŠĐȟ"],["@@əqƒɚƫѐĀzɮ͇ùͩ"],["@@|JeƊÊAɪ̻ɖnńĊæŶɫD͍oȉZ¬WɆÕв«ாDΚȍéāőo[Aġğɷ­ĳǽǗĳ|̓ŧǃͱǖӻÞŌİǩÈWŎÖFȠÖŰŦQĀ@ô¦LÆ[ǞLòχzˁĒǍx¥Î՗\\ÏPVЇƉʧŒŵūŨуɣ͐ǉনÇ«ˉӴɛȱɩʑή©ӆ£ƛʉ˔ǃſѝƲ͓͝ҁƇ¶ŜɨɉőþÈ̎ơЛȱǻïђḍūǋɓŶ͸ŉ̜iǰ¥ǔàŬǡÌuȦ¿¶ËľŐˠ\\Ê\\ĮNUå¨ťjƉĜĥNátÉÄ¯ÞL`¤ĖǜLúAºäìȐİ@̚\\ÊõïƂɡ̗ɲ~ȸƶƜĚĦ­ĐXfæŰƒȏɐ"]],encodeOffsets:[[[94157,22025]],[[94079,22357]],[[93339,22708]],[[93755,22920]],[[92957,22620]],[[91076,26876]]]},properties:{name:"Bangladesh",childNum:6}},{geometry:{type:"Polygon",coordinates:["@@ĵ̓˧NǡǭνͻɿѼнҏmƱŐ¥\\ȝéɧuÇËÏŵsySyFyĵxÿckkgÞŵXñg¥ÍţśfɏŧŋiБĦƫòwr§î}FγyoµkQ́ÕċAđZ½SōGëÁȫ^ôͺƕɈЯːà^p~àèRQnół~ǴˬŦƪǞįÄ¢«®ǳĎƹ˞GäĜlĄÀŠŠ˸ƩƇŉ¨ħᓞƏ؀˲ܸƈ˶ŭϬ˴Ƿ̨}"],encodeOffsets:[[29272,44793]]},properties:{name:"Bulgaria",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ÛĝƄHɜĬXl̛"],encodeOffsets:[[51822,26505]]},properties:{name:"Bahrain",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@řǵѡGBņƂôʎƪƄĵ"],["@@ʚďΏ¬Ķ¤"],["@@Ï{̶̀¡ǀĖ`\\ǉ̵˙"],["@@ǽWņɀĭ"],["@@͏ɬþĒƻʹЎٱ"],["@@̻źxÌ̄ȅ"],["@@ĹĉrŖĈ"],["@@ćïŞ¬®áWͯǓ\\ȓϾ˼|"],["@@Ǐ»Ăńˋ΢ΚЩ"],["@@Ƿ`ʊvÑ"],["@@CȳʣƧďǦȃ¨ËêǊvҌȤęȚ̓"],["@@ʰſǾǇЭųƚĚJ¬ʠǫǌɁĴƇIÐŚ¾Ý"],["@@ӐۑǅȯǄǀěǜǺĖÍ"],["@@ƩĸƀŎPͼɫʈη¶Έ@Ͼ̽xǑŇý·˱"]],encodeOffsets:[[[-74779,21702]],[[-74794,22968]],[[-75987,22747]],[[-75834,23269]],[[-76636,23444]],[[-77480,24013]],[[-76215,24646]],[[-79521,24832]],[[-77115,24781]],[[-79203,25615]],[[-79609,25301]],[[-78488,26100]],[[-80376,27371]],[[-79079,26526]]]},properties:{name:"Bahamas",childNum:14}},{geometry:{type:"Polygon",coordinates:["@@˼Xȗѫϸˇ˵ßɂ˓ʩğ{D©OS«^­To_ðƛSÃ¡M®ëNď¿Ù«§ǟœ_nǇäŕġå٥˲çÆÌ̓τࠉ֮Ṷ̌ͬȶªΎȬVɞƱȦǨ͚¼ݨǗ܌@ƤǍƞ["],encodeOffsets:[[19464,45947]]},properties:{name:"Bosnia and Herz.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ŘñࣸįkŻº¹ÎŰÊ®fº@ät¶²ZĘQǈR͢ƭʀąKơãÇUoHyÂ±æïh¥@ůŕs­[¯PmƼóŚ~oÝőĢĪƉĖăȌíƎ¯sX}WÅãyÈeƞJǬ_ɀŅɈˇ»OÇaĝ˝ƭʕ^ƳĂɁI{Uo½ßw¶³øÑüÁ~jȏOȃpw¤mÊāJqǃNȑEŅ¯ȥGŕÿ÷µóåëĿ§ýzÃ»TÃj©ƵåʏǢۃăȳȶC¡uw§SßkıěLd£ðÉh֡~ƅĩSĂͥrubŅŜËRķMƯbࠥŸண±çýŹġůÕwKñÓ\\íHýĭQM¢ѮБȸجОαজØiƦMϨ}æwʬòŮIlpĶvƪWÆlÊºʂàwl¥{ÚǊ¿Ħïd¹BSjj¬êÄÚzNvSņŘǜĘxň`èÚĸ^ʺQ ØņÌ_jáZƻXrX|¦Ü¢ĊpÜFϬƎѲӒ̂"],encodeOffsets:[[28824,57491]]},properties:{name:"Belarus",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÝŝĔɜuĽ"],["@@˵CÒྪzƀ˞KʄИȒv­ħȀOĿƽԭÌÿğݑӥد"]],encodeOffsets:[[[-89961,17841]],[[-91027,16272]]]},properties:{name:"Belize",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ŏgǎĞ½õ"],encodeOffsets:[[-66283,33069]]},properties:{name:"Bermuda",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĭއҀޕU฿̇ѥޗAх̽গǉȤࣟ¯ʑѽǉc¡ÈÓƨČĪçŤ͗Ĵѵ`ƕ_íTõäǗŠÛ|Hwyįė»̅đɻʙǡʽƕǽǷZí´Cˢʯ݀Uˌ̣ͰØɰɗƜ[˾ǖŰDÄgįĮEhļƊĦńMpkx̭ʐġŀUž¡ƀÅ̾«Ŝ¨Āǁî}nǕξ@B@UÒĽŠl¢ԔҸWƔǄŚ̽ǄǡѐȾͼǝɰ^ƘЪՂǟФĂڬʚ͆ݥನ̌G͌±ƜďɾĀ˜ˆä|ƀXĨiʲʘۺЬরǀĈι]ęçś³S·Ħ͕VōÇȅǢх͸ʹؚ̨͋˼ǝɼVʬ˟ծƋnçŴƑÐÁî±ǶBÄaĂ^ʌz¬RӐʥŒՇČ֛ŇIƳI¬ŴƥŚƋΟhȗXŗ൚¹DÖf¢r~AIǥĵƅO§fǭƛlŹ¢¡̜șðgÔj»RĉĲɵÚƥúûßÅŵϟµƳÆŉΏיɪȡuÕi»]ÕăÅ["],encodeOffsets:[[-59555,-20648]]},properties:{name:"Bolivia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ËXȦņƦÑ̯"],["@@åĦłĴș"],["@@ǇMŲƘƉ"],["@@ȗ}İĊĨË"],["@@×§àĬFÓ"],["@@ÚǼÊĥţĕ"],["@@ĉćĮːcȇ"],["@@ř¯ĘĄ§"],["@@ėeɐ̮ŒξʖĞĀĿī̗ҳ΋"],["@@јÆ؊őυࣽǣĽőĐ½ƽɭôçǛǻßɕòχëɅҢĨŸpŏtñƞŴՒͮƀԶĥ"],["@@ɯǑģĐǐƨǄå"],["@@͕f˜ƬŌçÑĩ"],["@@ƯʓΟÈÈǂ҈"],["@@cūƯ¾ɂҌ˧ÿĵ"],["@@ĝiƂȈĺÿȵ"],["@@ƁyǾŰ\\ǟ"],["@@ŁĲǡÀ¿Nwʫ̃şݭĘ˝ŒõXŷOƅI½øŻŌʰ˕ΆƥN¶ƢHLżĢ`¢¶ʲÉªňĠfàǜH¤nȒȦGðnÒvQ°ÍÌgФtϴċ´^~PøLÀ²µÀ­âÁnPptzvĖdffHȐĩ̄¢¸VĈ¢ØORÄvJV¥§¦żQrçArYi¡èʬñ̦ȠܪťːˊɌպ֦݈Ęɀ˞ǽь࿫Ɍʯтƛ¸йͩ˝ϯԧѷʵוઁȻJλǃ׼ࢬհǤەʌɇͺƸɾā;ǎ˓ޥƮŸȸӴȂòʀ˼ȺŁĨŎıôfȾˮ΂ҶÌŜąjŞ࿄ؕṇ̌Ɇɂ̘ɣµÅņ®ĨʳǿǳĀĝȒǤ®ǓśÍƗőՋʈɔǬЊļmñ˅ɔȎВæÚłόõ׀˝̼ͬƛࡌĸєÇనܗΪн΢́˚ķńǗӬƹ࢔ƂķҸ๱Aߑэ੓ΡЅŃ`LƉљՕ̵ƿΑͭơ˭EŶˣ܇ˣЭ͏̿ʏ˾ƉƕôįÑȩǏǽ·ȉĎu¹ίĚ\\įԽƮ৫˓ૃ¤ѳйңŏ્ǽƛͧ۟ͥ˯Ƒ˧ýɣ гףʻɱɩ¿̭ޓiǑȰÍɡ֥ğÙʢ¢ǃĊ٫ŧŵĔÉً˛śǝяNݩχषڣºŏɯȻbĚǻÕƝɋØĻʔėɝȹöùȳŇ÷ǎީÇ݉ƭпЅʝЋЭҭࣁԹۧऱܙoʆ͐²΄ʢĢ̞ƴrǆɄǘwɺŔYdƼϯīɯˬŠˣĿ͗ÛÞŭαϹɹȅуÈʁѱࠃ׿ԕwJÅzË®@РhÀ|ô¸îêĄĚöì´ύɸƇ̄ƃĖʥĈ̶̯ϕǦ±ç͑ͺtqMo]ţģÅßU«B[ôhż΅͞Υ˺ʍÿŝ˳n³Ö¢ƆĚưɄʊƾࢤ਎ǠWƪԾ˴ɬˈцńШʪƜ۪ȇԶɛŪʏđƟ¦JŤŚǴĊžۆƬ¨ÀtfǕŪƻơ̈ƉĉoħgûZã\\£wð@Ö_Ę¹ºi áކŇƆMĐăĒţxǕ@±bűƠ«`˝ƹ঱ŸZʼĦڨíʶÁoǊm¦|¬[²kÖÆ\\ÖĄ¼^ÖjvƙŮďôΒך]ń©F¶ƴŶϠàÆùüÙƦıɶQĊ¼ÓiïhǷŴţæ¡¢kźƜeǮP¨ĶƆJǦ}B¡qÕeC൙ºWŘgȘΠřƌųƦ«ʼTċ֜őՈӏʦ«Qʋyā]ɹ`í²ÏÂųƒmèխƌȿǊ«ŖɹU˽Ǟؙ̧͌ͷʺǡц²̔ĥ͖T¸´èŜ^Ěćκযƿ۹ЫʱʗħjſWã{˛˅ɽÿƛĐ͋²ȝPĭGăEƑlķFė«ŻÃÏa©E¥R·éà¿}୞¶ƶÇs{]ͻ˹×ȉŗۻ]ǕвۣĊĴŪĶŪGńąĢŏƐĉÆ·ƦjŵĦƵЄXþ|¯^Õì©ti|jjp|KńǸ|vŘȖԸτĉ̲vÎ Ąƶʢþњ²zŐxú¶ŜĞĮĬĆΊȴܸżĞĶÈ´à^ǆQłd¾v«à¯Ģ^Ú¤LvLÆfɺ಄ɨఈȟּν̶b׾ӨŶˎÑƅ͢ґRHղචXãŀÀŢɐȧ҈̲ʀ΍ѥǦѼϥʌf͈ǖƄşŽêF̴ΖݲΠǒͶӜȌɌցúƥ࣮ϕΦĳɜǲŕ͒[ƞǓָ^К̍ŨΦʪŜɐ·˨ĊҔːɸfͰΐËǸx{TøhǊ¨nÖUĀ¸ČgŶſƃңϘƱ"]],encodeOffsets:[[[-49649,-28433]],[[-49750,-27035]],[[-46346,-24462]],[[-45188,-23697]],[[-39837,-13796]],[[-39673,-13411]],[[-45567,-3010]],[[-45960,-1349]],[[-53076,-1468]],[[-50819,-234]],[[-51868,-134]],[[-50630,-115]],[[-50931,275]],[[-51636,143]],[[-51356,403]],[[-51506,1986]],[[-61132,4458]]]},properties:{name:"Brazil",childNum:17}},{geometry:{type:"Polygon",coordinates:["@@ıjǜȂųÇÑ"],encodeOffsets:[[-60921,13396]]},properties:{name:"Barbados",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ĩ@ŴҟƷãє"],["@@ɽƳĀ˙ƽ̗ӷҰ̢ÌӒ̤Ĺ"]],encodeOffsets:[[[117788,5018]],[[117788,5018]]]},properties:{name:"Brunei",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ǝŰīĞGČhQ®í×«ÛyÉSLiÅL»q§gſCƝ§ŻJ½º{@ŝÝҟcͥĲşéýƯ}ƭmŻdoºɇÎƹě¤ƵĆĳǶlĸâTf´Ű҄Ԅ² ĮªĆ|ÊÌæêb̰É^w{Ĺh[ľSźPîMʲď´HŰĆ P]¼ɲĉSƍ"],encodeOffsets:[[93832,28427]]},properties:{name:"Bhutan",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@_ƧגࠁȖԋࡔҿĒͅͰqSһ̂Ыࡘȱbȃǎ½àß¦ȡgĭÅÉĭęïՇǳͭΏֵέȿ֍ǽŽƓƽ¯ɡµĉĵͥޑʯÿݏ\\řĠȉNÙtщʺȫFɩƙɿ֥£ÝɇƛŁǇã±ȇ×§ąߣOĉĚŸ۞̧٦ϙ̶EᙶࡄIᵦሶˎ͌ϯզξʌ{͆Ț̌z"],encodeOffsets:[[25865,-18220]]},properties:{name:"Botswana",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ڊअoЛŻȍÎʣԠųŨ̽ҾŻ̈ˡgɁĈŉ࣪ڕ­ƯǦ͗Պ̃ɒԩ˥úȿřટɀϭ́صvݷˣҫ¼ωӵ༩˞˧̰ΛɔʱγȣЋқ`ܱŕŨˁĻ֙ǀ݋Ƴţ֣ʇҽĵ՜޹ޘÃϪ˩ˊƗ֬®ӮƻƤʶȮϾުɰˊВaΞƨƖƶȪ˃ܪζޒ¾ҜԢȇƲÐĒୖǂβɺވݒô̔؈̮̔Ý"],encodeOffsets:[[23409,11182]]},properties:{name:"Central African Rep.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ˣ\\͠¤»¿"],["@@œ­ĂƪĻ"],["@@ĵÌƚR£Ý"],["@@ƍWʈĸĹğ"],["@@ͥyɰĶǰŦùȡ"],["@@ȬǍɽ˒¢ɸǼɭWκ̖Ôī̤nǽۥ̍ԡcƓŤϢҎՂϲǨÜɡƋϻԡ˙"],["@@ŊĀҪŝघAуǿKȍЫøń´ƉĎàüȡſΫÐįƘ̑xsƦɃͨΞÿʉɶʵ"],["@@ŢqȡuìǈѺǲѥ̑"],["@@ĉǔȪĉǥ"],["@@ॴΠͰӮࢨҔ܈Ǥذɶࢢ޺ਞֆႺӲૼkԶˋʡɦųēɣއͷ֕Ƙٹƕ̂іųȰȫԘƪʢĹǫ̙ͿɣЦ§ȧ˺ӧՂÙì·ȋï̔ƍࡄį¥ýɤuѸȸƮǱʆŤħÌŏƯ×ΰÙቱկʡKǟ͝ƒďƁÇĊıTǹ৥ۇɋűȠȧfÉˤ˚Φɹŏ²Î൤ۨˀ˃ǎ؎ŮోSҸИƕ{ųŠūʷगΑȍĀêĎ΍ˑε{ɃĒȯHÇΰ̳ľIଘέɜכœħǸǉٝىʏګӋՓϳhǃʃᥫEA"],["@@zùƓŚ¸"],["@@țûÝâʺZ"],["@@ĦéʯÇPĮƺ"],["@@ʡĦZĴǂLĆȥ"],["@@ਫŌோ֌̔°੮ȣ࢖Οĸŧė"],["@@įˈȒǋġĻ"],["@@෺˕նڋۮʱоաĚôâɓɗó˿Âৡ̀ɪɢƺĩǕҿã˵ƄƺĀʵÀbźӫImǌ΂è͟ ͇ȌǯÃœɒċïıĤͫˊΚjƮӻíʍȸάĮ؄ȃ"],["@@Ŀůϓ¹Șʛ޳ࡵ÷ͥդтdƥֆՙ̧ɪ¨ǽǿײįĪŖĻέ܎ϔ°ǓЬĦ˴ĵƱӳ̓ʸpħĕɔ§΃ɗࣲȬĝțЉǍĳʥËȚIȍȓǈś̌͞ΖĬʭԍȌƌǺňȁϯݥǩÀɡáOю΋ʳƏ˘ҺŝˈǟĔʝϥ\\Ŧ͏ƋϫЕЇŋŲάŦרшӧGǫǏҩɖøRȐޓɇಿƔٽƇǡƔ¤ɒ߈Ѷ۱˚ǂÃąǆ©ˀФΎąĝøĴŸǯzmņǔƀȌ«œǰвڰɈĠĳìɚˀ̔˒րȤˮćrĜǪ"],["@@ȋŸİèĜȟ"],["@@ɓ¸̼Üħœ"],["@@ÑʞǊôķ͑"],["@@વʬǊŖײhͺϩ"],["@@Ĵɯ˳ѢƫœĻ˦ƍ»ĥƪWßřߍՊlǺͷŚژ¸"],["@@ΝƙȕÉЊŹõɵʔŤ˄Ͷƕäơ"],["@@ſrðǂÐǳ"],["@@֛̈́ÈòюǏǆǇÿÝ"],["@@ůĩˍ¢Ɍǔǲŋ"],["@@̒yŘṯ̌ʭ̈¬̌ϼĚʑۧ͝ĵͳĸ˔xΛƜȟˤ˒ͤ"],["@@jŸŰcƙœ"],["@@̤Ɍœǯȏ"],["@@áäВƮͯɑ"],["@@ȩ͋M˞ˁ˳ɧÉȄ˒ϋȣѼծß̟ɞΜ˰˫"],["@@Ěř̽ŎɤL"],["@@ûÓÆƒvý"],["@@ǋã¦ƺŦĕ"],["@@Íʝàĉłΰœ"],["@@őØɾɮɦřΑǫ"],["@@ŗWΪĐʑ÷"],["@@ԋʆդZʟ"],["@@Œū˳ƒǢe"],["@@ɒƏȅЯγϗȊJʔ˪ʆ͎f"],["@@̞oYıΡHÞŚ"],["@@έ¤ϡɶٸŝĘƻ"],["@@sȋҕ˝ϕǋֵ£Ǳʚ҆Ϛୂ¦"],["@@̀ȣ·ĳӿʸֈ "],["@@ֿǎȚĀИƭqğ"],["@@ΘǔΖȫႆӗ̾γǯǑࢸØѶ˟سʧ૧ȶõȄ۱Ǽૡۭٓǃ́Ӧ୏īȂˈְȢĹήʦ߾Ѩ͔͈ƟÁȣːȽ"],["@@Οƴ­ɒͤſêʅ"],["@@аåĉëډŠʍ̠ԶƓ¼ƙ"],["@@ʌMśşůŮ"],["@@ǅNϤłɝŏ"],["@@§ëǛĤĒȢŲə"],["@@ߝŏȨ৴ÇòǧǷS"],["@@ʟĎÉɜɐǤɾĹƣϓ"],["@@ԈűĻ׵ӟƧএ̡κƮɘѼ˨ޜ"],["@@ǇÒȆö}Ƈ"],["@@ѕźϘD¾Ž"],["@@ѥƪĦƌʮĒʣ"],["@@ϱĄʜŦɾÓħƕ"],["@@͇~ɖ̊ȁ"],["@@ǛkŚƄĭ"],["@@Ǣވ˲ϑλγė"],["@@ŋƕƉİʖ¦"],["@@͑ŊǈƔѨ×˝ȅ"],["@@šƮˀĩƝÃ"],["@@ÜǏʗÛǴñǩdɈ̦"],["@@ʳÜˀÆKš"],["@@UěڷĿێȜ"],["@@ĹſгFÎĿۇư̶Ğ࠲S"],["@@फ़ʣҤϑОÓ࣏॑̕Ô܉ʤ͏Ǜň̋ÍȫĆƠࡀǠùȨъĭƅ˺ΈÄ̎ǿ"],["@@̖įٟîΊ"],["@@­Gȟ{ͻǕΗʭ̯ȍՑԩٵ@ܥFɗMĿ˝įöœr­MƟõÆÓɏƇࣗ͏ٽıЕŧϻǵϷǵɁ@ϝʨɲӄ̘̾܌ªĆ̅ౚÇɜ̱ƞ֡ʤļƬūĺ̥ũΘˉGȋǭ̚ǍäӧȬࡩΔ҇ǲ҉ǴՓȰࣝʳૻŔȷÀ˿ŕԱȴ˽sÇ@ïƄ˯ŐΟ¼ĳWˣùŧæ٥ŖûĸùŜµɌNʧÆMͅȣBܑ@Ω@ܑ@੻@⿿@、@、@ᅍ@Χ@Ω@੻@ີ@ć@čąƓʂ̌Ŝͭ¯ö˰˽ʃлǦŐƨűȠĂʕ²¤΂ĵʷʟēсȼɱͰǔϢǗ̝ΕaÁŶďƵϟ̓øҚİԡsŞƄŭzJǈĩšΧ¡յʄʐϨؒĄիHˣȕƳǐ°Ѥ̜ƒǐѺ˫ЕͬȰʚÉúǃ؍̧ʻсɋ̶ːƆĈȒ˧ƵȀҢʽíƇˆұȐùƔˈƞ§ų̃śΈEǢţɻǪϽÒõǊȜĤΫaʣΡʱƕ٫ЈʖΆΖĆϩ£̃Ȭܴ࢔ȟĈɅхݦëƄ˅\\ÁĞƟەʘ̑ǞȧÄĆɳł¸Æ¢®ÍÞšŌěþϛϘɯɲɫɾ֟̆ģøÁÎʅǆɡöěʒˇƒ˭]ԳĽĿǁiĥʵȟCˁğŵ«ƉíçZÓʼ؋͔ҧˮˇŚ¢ö¶Ĝ@ÂŽGχUʟũЕĮÕåȥȩ@Ӭ@݄@௰@݄@௰@݄@௰@݂@݄໒ŕྞҧग़çܨǕ֯ʒ̨¬˭îȀǘͲEŶƈֺT¢ǢѼƥʛɉࡖƴȼǐј|íâ˚ࡸǞЄȄ؄ɨĐxǏহ̃गį݉ˡԍ̣ɾćǕöْZšȚ޲̒϶Ñɘøþȭܒі਀ȸɑƓĔċǜ¨চђУƄưžٞɷࠎف؎ǋ̒ÜƹǖӶ̨ȇμľŰ͑ʂÝǵ˙ںrцΞߦLजŽ۔ɽណϻঘÛƹŘڪےǏր̅ōō֙F̥řʳȕʨëᕊŗ౜ĞޔǞόɓӾƼɥȨƨՀ˻EƉчEਤ׋ϛ˺]ȴӌđک߀ƈǾାƐ֤͢שÛųƅࡕuĩƁӵgͩŦ;˂ᅰʸДùʸΑ،ƷƔƕ࡚ªॺ͇٠ૼŪઘĥђæȁɠপϥȼȨҁļϡ¯ϩφζΤÎŋŘўwθȭҠ²ʕɭلǰͯةȒȧΞµō̦{EţࡇՔιȽː՘ZŢˀͣЎǆʄ׺¦ઞҢ͹͎ǳǹ҇fѢːƝǆՔĔŇǇǺɊاşǎǁÓॣȎӯ΂ɈʨΚOŨ̹©ʓƖĒβ͔ƤмÝƂžϹæग़ΈΪǽҾmڢЗ·஖ٍ֣´Ǉŋ҈Åމ̵ӜJʹţ׮ĪȧĳࡲÍЏǃ́fِͻāͿ̴ǽަ࠼ࢴ˹ΆӍáąϡ˳ߢٯڤʰޘ৾ٴÖȩÒȶȖѳƄĵԨ᝜ŻȔ÷̩ęώíêƉ܌¿ӣʫӜČǉՏǗՙWˤʩǮ¤˧ִ̩ơΫ࿃ו्Ԑʵ²ɣĹ͂xўɃ̖ϿΥà˭ëࠍ̢कpƋؐȯళٻѣT๻ӲşÉಋâ͖ı¶øࢺśߚε࿒ųࣟ࡝ױǅ͏ĸÎũПÀǏŲȗƼƹʿn\\ʏցğছȰ̙ଝ̠ŘɿʒqĝĜਆɍʷŗԼŤܺɉɬ͇ؿɓދ`ΦȑԫǷǑȨƳ֫ǒʦűΫʁȻRɨƥԍʇԅ݃ɃęwਗƙǗ֞̑ΙǬτߎUظ୿ུ̫ͭˮ࿘Ϳܾ͑ӾϑྡྷЗ˺ǇŭɧʰǦॴ|౤ȹƤɉǣӋʄΩųڋ׊ԇȓǫ̤g݆ҋŪɻ΃ɛ̼ƶ̾qٌѩ͝ΤͲϊʢƑŚəƠʠɁɸ҆Фʝ̙ͨࡂĖ̄ȷĆĂÐӅф࿀Զঞބà׊ʅ٠̤̅ଝ֎يזʞ̈́ćŕĚǐ˲ʝÈŐ¶ȓʀƬĬʋĈǜƚӻT֖ئэɶĥϚٖʒಲɍxŗϖŐ׬Ǒ[Ą߈ɘࡤ̉íʅɢèɼùƾŵƩý̎ĐȒÓǹƩδɿ०÷ʊǱЪƸĊǋ̕΁ð̩࠙¥ޞěªӝ˴ƿηĭ£ŕŔ̷Ǐ̬ÑѦǐӖjˈƉŸɑŅˑַɕՄŰͤθŐǃƧſʶɠàΏĞȈ܈ɸ̠ʨ̢̡͞˔Ǡ˴ˇźʎĐÁžξç̳ŶsȦ;KťŘ̖΢ˊ¿äą̉ƅРª¶˓ƜæʲʻǏōƜēȤ²ľřұş؈\\ǙȚVƪǥ֍˽˞ŚԬNǽɯϗƻٴŜƲƳ̆»SʥѷĻӘË±ơզȥˡुĶٔɳǝđў¿ʍŉ̊]Âƙů©̢Ň̄ÚƴǷȄ¶ÉœǼƙΥΝܞȾÎĥɂiͱ̥Ӡ͖ɘ¥Ǿʽ͎ÃμĐҶʅʛǣءƃǕƭৃǷ˓ȧȿ¶ʜƕȕȃඬײ׺Ĩ͍płĨٴÅʀ̷͛ƯǊţЬɪ͂tоʙƘɑIӍѫĉӠÏ}ġȟ~ˈɋ੿ֱಅƋୁࠓ໵ǳǍňڝÌṽ÷Ϗǽαթއŵୣ࠻૿Ɏॸʃú×ȁ̝ׯԋҿ˿ԣğएБзЅһȣɷ|˺ƻ؟˻"],["@@ʻºȘǊäɃ"],["@@ߎ¸ʈʢҐఞɭԿ̛Ȃ±ం̤ϣ̆ոq੆εӊ۝̀ćюɦ޳੊ǬǘಠŹࣈ΁ࡼৱŇљ޲εюĹzŪ଼̓ĪţѨq¼αуƜƏŵ҅ŮΏŅqƕ܁þΔƟÑɣ֤ɬʹWǄυࢍǙඩ¤҅¢ðƊਿĨ͛ȶٿοޥÉछɑᵽƳЩ̀Ý̚ྣôݩŢֵՊᔔɐ࿢ñࡌìᄿ͎ምĕഅ֩ɒIŬ៺ϬᕏďʑÚОǊ۹UͻĬȆؚɸɣƐ̈ǦᰶتδÙžȏЃБ"],["@@൏ҼʶǺઞÒؘǃɡ֕͡"],["@@ੂVࣤƓࡰտ൹®ఝŝсÎ̥ͰӿĠÓ͘ાÇ"],["@@ߐŢҤAɬĻľԒ՝ÈӓʐӸȸࢎǁҷɜȀÌ׽ʷʨ͚ȚࡌƁ৕ʺࢎ̎ՔªƆຆżҒăैܩߝϩ԰ŜˁҗزʨʢȋžɸĪۦƥOȕ΢ƋɷȄƎɀসơ߽ʖؘɊႤŹո̃ܵёࡨ͐׌ķęŗݛŏшʝϧђΰ֤ļ̯͑ТƸ҂ʯćɊ͂Š੖ƋΌƫɟȝϋU׍ɛݞǺ̺ÑҜŒź³õɓे̣ԪÎŹ̻ϘϠࡾɞ௢ȡŎŇ෍ρ੾Ɗȗȋɞֺ͂אʁŤʭڣਗɏئÆ੶įѪůRť෗ÂՑőՀØӪę§ʁ஻ÖञŻɬƭ৒ÇʑōĠɓǎÂÈāƨΚÐșϓтȦàů̘Ğʗ]ǢвŸĉȳ͐¬ڎɱƃǿׇFܨïȶĨҨţ։΋تńӪɌŠ٪̛ƥŋԃîҬɩ͕ÁԅĈhƯҖǇՏgȰƵɵǋѓdʑǐŧȗ¡˂u͗ȱʩةȴÜȔʇʅ܅ծߦҬҷȩۑåƚǪ΁Óޡж÷ďȗèɓփƂךεƕĕБՍʆʏ¥Ҁķ~ǩːąÏǫ̰àϞǟǿÿ՜ѿÀƼΞɹɴƐ֐ɉɉŃϤÉśő̯SΊɟЮ@ĵĥ͚ǫɇϯѷѦļсͬ˹ЫV®ʳफИIĭƻȫȨǏ৏֐ƞʽ٫ʬΕk٨ѿϸá»ë๎ڧť˅ᎋ̦ӷƚЀՋIӅŮʯüƈĲ͵¯թ̎ԤƐޅŮĮƒ˗ÍߥӚƸƸ՝IŻŹÅƸ˥ȁƼȧÅȌɥࡩx©ōࣵŻݻĺʇŞ¥τؠɐɌ఼ȍ͕̈́ĂƖχʐՎ[ࡺȂӲeܫֶ୐ҼȶʬӌȊࣃऒ҉LA˖ʝ^ņŷɽMԻɢƪȦ༳̅zʼԔlʲƴۉɎȚǌё÷̇ÀȚŞ؛ÐƵͦёSڃ̀˵ǟҖƅwɝԿ÷ᅗĶؘ̌եǲؓėܙƠ׫ೕŲ̇ÙҕĞÙːேǿߍȼ֡ӊഢįפÈᖑϜ³ߘঀ࠮ࠢː๨ńࡈŇࢭ΃տӵςۙ৐ҝೇ˻"],["@@܀ǵదƀрÁƚƃԽƏ̒ī९ϑڈòѐͳҊêŬƃ̗ȕǀЩ߿ǡԉšǄľΉϵśһîଷ٠ԩƐџCࠟϘъ˂޲̙ڎªöǢɤÏ΃ʔײ`ғŪѯëՑǲҠĨϢųχ˼ࠈHUŴ"],["@@ס³ϋêขǶӓȫ"],["@@ߔǁഄiȸŃร࣑ჿHφõǺȹЛͣࠃ_ӿܸھ޼νǾƊƈຬĴ"],["@@ѾîôƵӖȖࡼY၊ԧÂƯᱝىҩ͍֕÷σקܑĭɷ²ଃ̍ދӪએʞңLႢຐݯӤᧈǔ࿈ʿơĵ"],["@@ͧ_ˬĮ¼č"],["@@ҙÞ˺°Ǡō"],["@@٣ĤҔʂנȱЏų"],["@@}̟߱ჃͪըΌࣜƾࠂǩ̮ͧ"],["@@۱ŋÉŌԬŨʐŧ"],["@@̽ƴ̨ÆVȹ"],["@@ЧµӟĄ๘к׏҇"],["@@ӛéՊʬ­ȁ"],["@@ȀÛӑƅء_ɰżߋ^ƺĔωVĝŔ഼ŀтʕ"],["@@ࠆőɓđ࢟Yȑɮіºªé"],["@@ǃץМóÒɅˇôȍùǢʏ̷ÖÙƗᄩsȽƲ˴¸Ӈƈ౤ʖ᭣ƹǭðոɴঠÝχ¢ϩȦ̀ŒӛĪׄĀದсȹǌӒzܻĆξÎ܏ǲࡠĞޤƕưȔࡔȑ"],["@@͗t଀ňߧŻ"],["@@ӎ½ʡǅڰðʬǱȤ̂࢜ßĨˁӕҗࢽƋ૑h̙Ĳᶿկॷաɚఐɔ঒ӠȦᔱƿšǆ͖ƂңdŷǍ̃ÀǁӋģͥŜ˅ūعǠࣵ¾ʶȐল޺Ƽઃýاº̤ńຼľඡ¾ϤȦலmࢗĈۖȒڰ̶ȵूI൪չᄘMDƂާȘ͒Ǻ۟ȌৼϊՌ×Ʀֱ"],["@@ۣȒΜĒφą}ȝ"],["@@ੱ¨ߌĎ˦ŵ"],["@@ࣆţʯ˓ҐƢෆ¼ٚƻܻᅌŻĹĥ၁ᅊΥ̱ȗؖģɬǤόūІÂǆùʂŐલȇkŒ႔ʒאË࣪æ໨ǝۀ̳ܻȍ࠘įҗë͹Îîˋඩģڝ´ډ̺SˇݥÝՕĊÓ÷ʷḙ̂ďᔫIģ˴ࡱɵ࠳¶˝ǤɇƗΑL۷ԜǢӪݿѐᆵ÷ٟȈ͜ĈਕżД¸̙ƦކĀಮŹ"],["@@ٹȍѨǕωʲǅࢫƯȟȿّľĦͲމʕʏ͛пǞ°ˡ͗śзσ̜̫Ǘ્¹ǰʻw͒ȀߪĎᐄܐሺǑłѺè߮ƹ"],["@@ͧ±ٟİs˄রŷLȉ"],["@@ցۏҶϖG࢜ͯ_Ǐ"],["@@ᆸ«ȯɯᏋdǩǼ׮ü"],["@@ַÏŸ੊§ǆāׇ"],["@@ϣ׉ǎղƌм˕"],["@@۰y਱ȫ״ÑȧᆣƉڕƔ§̾ᙎǘ"],["@@˦˭ඹÐ̇ģԩúࣻḚ́ƚနɤࢾë"],["@@ઐšΏƑͪűႱɧ֗ʆ״¾कƤʃϖߚRবɁ"],["@@܎νܺǘӚɷ׌fۚȣό؏झqڣ̤ಃ°Ľĺ৹ġۇüūǚ૶YϙĄղĐہǪرƳŰȀڏLlǮńæ࿰O"],["@@ŹɍथƤHǐݴ̤ť"],["@@ਰґஂé͈˿ւ¯˙ʴ܌ȹɱߐǡˋˁߪ°ˤſ̠ŐԘ˝ྑʹևʣΡˎ¶ϫّ¢åͯ৷Ξјϓ٫ƘˉƫรƎйŮࠚèୱÆ̱ŤЌtߣźೊ̔਺ø౫ÞणƅƩĤ࠱ĥҹȦ੖Ǭ૳Ù܋ɌƷȂᅄó͒Ŭॣ¹ࠩư܂ª̔ͅှƉೱɼ҆ǰ෎¨޷Ș়`ॲǳ"],["@@ᣈ÷႟ɯᦜŪˆĒЖĻܨ̧ͨ٬Ð࣪ßȉɏᛏχᇃŁჁ˕ᾆǘ♩टঋƀϔʱຓġద}ۍ˥ࢣÉ࿧ưޠıĢɃᅡ÷୩ĈઞɭऺSƇǍ῅טŏൂÄ๨ɋ͡ǥ಍ਈƷ֟ˉᅫÃÃΩՍƩ༩w࣯ǰ̜Ƴً¡ʨýቒOѦʫ׆îʲȇʩƹᑝͭƥʠرrڿȔʠɍ൷[˵Ȉ§ˋܭ«િɾȏǩ֣ÒŕŚOǗݯhċ̰¥̏ۗ¬ŉ̒ऐɸ೰æܳɂ˯̊੘âখͷ܌čࡤ®ࡖκĬŤহϫ౓vɏ̲޴ɦͤgֿÂņʎڭΗՍyʢɘ࠱ǻ՛¦شԈະŜผţ౪ǦׁÓဇþzĺڶÅᜁږßΎᙲ{ႊҗ৲ã̐ÂݕpဏՊㄾҖ༓ò໦ДℹٳགྷÝ֌ǎᇏȵ໩̑Ĉ߶ɖጎȊᐯħಣ̫֣L঍ɠᗄĂಊɂያǥጉ¡˗ŞتàϷàნǔݍ྿ƅԂȖఃÃ̗ĨᳮΌ࢜ř͢þ೨Ë೑Ȣ฀Țቜ̹ĆƜᣒͫ᠛Қ٢ľλĠੈ³ŭǨቘċ୿Ȝᒌ_ഞ̣όØಷͲᗮJ์ʕڃƸՊƪۢh࢘ǗŧƲपКĉ"]],encodeOffsets:[[[-61222,44995]],[[-68364,45755]],[[-62424,46582]],[[-75463,46680]],[[-75332,46561]],[[-62571,47048]],[[-65342,47584]],[[-63400,48420]],[[-55528,48580]],[[-76501,46084]],[[-129118,50539]],[[-55863,50779]],[[-55391,50939]],[[-129680,50797]],[[-63284,50273]],[[-128188,51300]],[[-130250,51856]],[[-56789,52774]],[[-130994,52710]],[[-81289,53199]],[[-131449,53659]],[[-82669,54014]],[[-134915,54473]],[[-131637,54211]],[[-132267,54393]],[[-132964,54444]],[[-133361,55254]],[[-135839,55427]],[[-134069,55787]],[[-133709,56085]],[[-81897,57557]],[[-80830,57617]],[[-63225,58936]],[[-81629,58896]],[[-70819,60458]],[[-65952,61816]],[[-69871,61687]],[[-80416,62187]],[[-66388,62839]],[[-66591,63365]],[[-81454,63910]],[[-66379,64061]],[[-72025,64050]],[[-83968,64466]],[[-79745,64994]],[[-78517,64916]],[[-86957,66828]],[[-86706,67149]],[[-85735,67376]],[[-110686,68614]],[[-64185,68666]],[[-110489,69020]],[[-75388,69411]],[[-88673,69362]],[[-77492,69963]],[[-80878,69830]],[[-107049,70048]],[[-76678,69990]],[[-104290,70233]],[[-102622,70459]],[[-102394,70670]],[[-81111,70498]],[[-92364,71086]],[[-78843,70804]],[[-103599,71063]],[[-97805,71244]],[[-69544,71210]],[[-79901,71389]],[[-81337,71463]],[[-99778,71315]],[[-88998,71796]],[[-76501,46084]],[[-99105,74688]],[[-117270,74336]],[[-107815,74670]],[[-81446,75423]],[[-88667,72716]],[[-102401,75721]],[[-100628,75642]],[[-95406,75941]],[[-122609,75892]],[[-99692,76315]],[[-97594,76294]],[[-106618,76838]],[[-95787,76829]],[[-98384,77323]],[[-96795,77568]],[[-121168,77394]],[[-80960,77749]],[[-104680,77840]],[[-106519,78422]],[[-100045,78302]],[[-103655,78418]],[[-110891,77883]],[[-91879,78344]],[[-116286,78586]],[[-96558,78759]],[[-118324,79220]],[[-91989,79123]],[[-107067,78994]],[[-97776,79660]],[[-104134,79562]],[[-116564,79621]],[[-113109,79978]],[[-112451,80539]],[[-98513,80417]],[[-105908,81220]],[[-101162,81901]],[[-94090,83081]],[[-71156,85010]]]},properties:{name:"Canada",childNum:110}},{geometry:{type:"Polygon",coordinates:["@@ÅÑ@ĝ«ÏƜBAҬǥǺŒÆiÅCŉOÏĩȟÐ·K¥]u­mÁNwzµfĿ¡STďľ¯Ląků§¹B§TďƨyAā^čɵíǡťǕȍǦÎ®̡ƚóǘÓÇ¿ųíõȫ֑ēǕÕplÉü³ĿĪ[ɀƯlűMěñ½ŝħãIRAÂÆp¼ʌɾǂhÞxĮƘ²nlŐĘŌĔvnj@bč°ÌºƘǨ³ɮƆ۴HĘxX^G\\]NčMVStŘߜɃĐ³ćǑ@A"],encodeOffsets:[[9757,48405]]},properties:{name:"Switzerland",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɫªƎŞĞǇ"],["@@ɓśŽĬәșȬࢲFƔƧ"],["@@ڪĉό¸ŽǑˤċȠ͙ۋǊoǬʫÎƓŅƬƥȗӋʠĄɞƴ"],["@@ƾċ͚¸ĶǣƫÁ߱ʎϐl"],["@@̲áķɗˣŤЍÏɗɈǶƌԚŭ"],["@@ąʹSɶǿǟǑϱĻĚɘɳƑŉXēɎѿƸͰŖѰÓ"],["@@ؚŭѦʅγ ʥǮ͹`ω˪˞ƣ"],["@@mᇛ۩IȥŬٱą૫ƶąĈņĂ؄SʂĮĆƃ͞ҩΘIȐ˰ɎŸ̟ȿeĀŋ̮ȱάÖШɁǬŴߋʢƍȄºƔآʲɿè׉ħʖˀŤȿǆϐËѬˮȸƳ͆úƆÛ"],["@@ʊ˭ƃˁƁPɅМʂƄ"],["@@½ĳΩCȯȑŖ̆ΖÒƬÍ"],["@@ğë_ʄʾ{ƽƛ"],["@@ͥĺ˦Ϛćƭƽ"],["@@ʃ˕ɁźĨăȊАn"],["@@ıܝƙIįʈƀʪȣĝėˍН¼ȲʢƉŔ͌öĽĺɖǀ®Ȓ̌Ð͋"],["@@şƪâЬƲÜȜԑ̏ş"],["@@̙ʏР\\ƖʬŖˢم"],["@@űÖˮƻĩ"],["@@ŷÅȋĂ͈ЬCѧ"],["@@ƽƜĂĜüɷ"],["@@ȯãƙð¡ŐȦʴβƣǫɫ"],["@@ɣǑɲԕʍűԏהĮƦͼìĒȾʔőķ"],["@@ŧāƿ¦˨"],["@@˻Wɭł̎ாђčĖʟ¡ɯˋĳ̔̏ˁȅoƿ"],["@@ƻ_ĦðÖÏ"],["@@ŻĒĢÑ"],["@@ƾƯ̇ࢁݧ̝ʽ̗Ƭ́ǩ˟Ƭ؝Ʃˇɮхɯƕɇ[˟٩ЛЩƝ׃ǗȃÊىĬąĥƵǑEſ֋ǯŁÅΝ˦͙ğŁ˼ڧ¿ˉɞç߅ǙÛ˹܅ƋċŞɵVҏճϱŗˍrޙʸ۽җˣř֕Ʊ¼͕ƃŽĠǣȉʻjߩƊ̛ͫǣاͪȹŻġȌӧŝϡԜµ¬ĳďǟګQnōϐÙȺ̑ͭȹĬ̿ȳǧƨЭȫƯ̵χʓƟ͑ǄȝuɋȑğḘ̈͏ơďʉ˛[ýų¬։̊ԧդŌƜ×ÉܝЪϗ࿪eౢ̉ڟŶ͉ɑথʯǙࡓʩĕ݃ɂȧʂЄĮ¦ʑĎ¨ɄϞǘ¾ȈƉ ݝ̱ɫ˟хǼ˘Кɲ©˰ƐԚ׷ìǱĕɱø·ҍѭȤͼŊİȂĵŕ˻¿έ Ɂ҆βŇŴƀΤãϸǪȌȿęƹżňďʸŔƶɫǈ΁Ĵӌ̃ޗȭȟȶύĬɢÀS̐ܿǠɻ͎΄h÷ǈŎĠɺŃȐˣ˪ĵŶϐ˕˫ǩ˺Ȣq֭ˈʞȂ̀i̫ǰưϢKɏƲƆ΄ʉЕũČtڲ˨ĶϷVġϸৌūǿŸę˴ȋɯʉΫɢĸŔʔģĞö̉ƈ˘ȼŽͦşlµıгŨnȔҳƽĢȡɵȔڂҞţʈކĜɪƒüŐǏԟ̻ƉΨÂöʴŦvɑȫϱĔɆ֖śΚϸŒ˨ęѕǸèɔԾȴ¸ŞbƄԏɤɪžÔȘáʶˊʆ÷̶ØƐŢGşɄŢ¶Ȁǁñ΂˗ÔϴɔŴȋǉ·ƨʏɟ͏NġĤƊƿÄŽͰʜॾɖƤƺӆʙ׸²ЀǓ˼A̜¼Ÿ͖nĊДѾޮƤͲЪȆ޲˴њßҶʒμɋႀʢɨǀìвǟ؊ǲɈȄܞƈȎɼ੒ÇҞɤԤŅѺƴ࣠Ǜʼ~ǖȚǪɄరįՎࡨɕଢаŜľǺ¥ʌƖ®ĊÞÚÈǖν~mǂí§ÿ¬śÆ̽¢ſVŽĢĿȦǟÖ²lwPoħŃĻƉFgİĭhCÃǕů\\˽ɘƛ×ɯ̤ͯVˋʰܿDˡʦÍǾƖ"]],encodeOffsets:[[[-68903,-57115]],[[-68689,-56477]],[[-71375,-56237]],[[-72695,-56184]],[[-73103,-55329]],[[-74673,-54765]],[[-76170,-54192]],[[-70277,-53916]],[[-76618,-52869]],[[-76348,-52507]],[[-77109,-51896]],[[-76856,-51503]],[[-76909,-50008]],[[-76263,-50327]],[[-77322,-49933]],[[-76356,-49758]],[[-76914,-48985]],[[-76096,-46788]],[[-75399,-45897]],[[-74737,-45854]],[[-75504,-45460]],[[-75582,-44879]],[[-75543,-44386]],[[-80695,-34453]],[[-111902,-27791]],[[-68807,-23369]]]},properties:{name:"Chile",childNum:26}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŀ˯̻̩ǃҙ͓ʥҡȕۉˊ٦ԤϨċNðĪބƠΖßÂƌȦū"],["@@ŘScĭȉĖü"],["@@ĳaļòGÏ"],["@@QƜægÓų"],["@@ý§\\Ěâ±"],["@@ĵolǦĮ¡cœ"],["@@ĵoØŢı"],["@@ɭ¦¯ŊˆÙXĕ"],["@@˽´ʷɌնʿ"],["@@ɽǬKŮ˽ĚǙҧ͑̿݅͟§ȴ͉şȁ߿ŦȍȦǱهۏऋϏѷϣɋƍϣڻɽܝҡʯ¥wśУŏ³ǂӖǂ«ĤǈƔҗAQƆɀĂ@ǦʆĘЊӺυζėŅү°׏֛ࣳГΏӏ֯īɍƈƥȽ˳·ȑǬˁȼŇަşŲ˻ŗ̳ˮǋЈbҪϾ¯´аżݠ̻ΖÌԢŁȃ˭Öķƭĩ΃ń݇̇ȱjîǁƹ}ÕʃȵÛÅƤŧsõëǆőܗַɛϝčࣈЋԔ੏c̕ШȣÀǿϞ͝VħƻRˡŬ͇VϟȤПƛְ¢ÔƏܼпǾͷϭŅԅι̹ɉūʦ¾ŜƛՀƞΜ˙ͼĝӛ͕κĸoЃǙĸȗÁǊȫśiĺåƿǭŔ̉˳ÏŁĖƿʑǯuîĳȵʻjƗˡ˅ǉΧǡ»·ȢħįĹ²ʘϙΗɻ˗ÈǊơʌ°á΋êǙω¸ĘǽʷmËɽɫÿhǵӍLåũƏOǶȓΫ΅ƋHĉɃÝłǩŕƟÌ¥ǍșĉÎÛƇĉËȝǿͱƯǱªšőʫĈ˻ǙǝŜćȏʍXɁyͩ̌BɠčsǃǅȈˉG̳ͳų»ŐœʥũȅƗȏǜ¯ȣ̣Ğ˹ʓӯ¡ϙʟſľɍͥǲě«ƓǖŹƕȉϱÎðìʱЀfǸɀ̌ȳķƔkŹͩĥƒˣƭɪħHnɫƫ¼ßŕɱ¥ǳŬ΃͉ˆʵ°ħѮȖɸȧŊə§ŋĦʯ¡Ӊ΢Ήǫƫ˃˅ıȓĆǛɓˑȮŅǋƓƴ́˓ѕʬÃƛȭ»©£ʇRçĒkJQqs³uß©©mǲΩN£HƟqʓÞđaO±¡oMƋìɕ¥\\ovY®RÄÆlĪµ¹ǀЋʃϧRǧɸoɨ؋Ĉ˄۬õĠүĺθŽɾƄǼԻUխǙŦˌƩɚªʄżĂè͎ǆŐɺǆ`˔ɸûǬĸĮ®ԆóڌǕìŻęȣՖϳ˦½MęſÙċgŉėʛȅë»٫˼ϧÜԽ̳࢓ƇϫɝʱҍӁ¢׍rKºÄMlVzÊ¬ÜØ¯îRćgğHůĪǠTƎɻĎ÷°Oůą³GʱĐíNŹOĽTg\\|ĺ]xŃįrĻRéaåÉËą{ĭ©±ӷس· ÉÊaüæȶhĐŜȏðŵçŵői_B¿Ƚ`ȧÑ˧Nűbķøïûûn¤yrÛP»cĹĝãġÀåþ·]ůÍqd¾åŪåîå¶ɣCǕb÷p´ĤôAjVµNǵ³·NӉ̐­ŀ¡ĶuÂáïv̑ăΫή޹Ϝƫɚǁǳrȋ¥Ƌȳß­Ǉǔĥ®ֵɺbĬʃǤɓÜɵĊɿ˶̧áXȐ½ǆȲȗȚîƔy®̈b·ƒšɄŞqш¨Ķm®ƏĶëîå͆³ǢȲǸľÑҍǺƗ˺éǂ̂ȱ`̑gŷǡǯ¾ĥ¢bą¨ËWĪ£QĭœuÕA}fÝżƃÈ¾˪mÜeÂýņËĕ ÿdħZ¡Ū}~ʕÖėe¹_ǓêûB·]]R{vķäGjƾâĢ~¶pXIzÖq¨NȒźȋǺçܠ҅ǘɃĵȋÊėȺĠĪǕɖ|ƘIªǈìøPzĜ¤Gjzz¦°Ď¬Ä۶ʈ{Č°~VŜĚHŊvɾŮCĺˍǎE͘ņ¼áÞìºĈņîdäj¢ĬƐìâ`ԂŚĄŢIƖtȈǦbøäʦŤҨȈЈĮØĆÎhʴdfVXbŊMҜ˰ŜůƜͪĲα޼ń԰ԡƚǀļ൐˾Ɇǁ˒¸Ɍÿøʤʟƞ׸೺ࠤǹմDĴšטȞƠǆŋ֊ȊЂڦŦɒѪўĀQČȸªE¸ƋŇĳô÷ǒ±yãŷˤéĔËĔg¦ÇRćĚ¥ƀËâYŊñδvèqǼƫ®Eâj¢ÎQÚōôĺsdkĂųÒȁŬƹÔąìeÐ}ÑÚœ×Бÿ¤ÓJÍ˷ѕǺˡƢl҆ş۶ÉžDǬrؔù৒ӿ՚Õqȧǚïˬ֫ѴұېÎቚȅѠĠĒMζ­ӖÅͺYê]æo˂ʅƸ·ΘÅмï՜ɉʊʶ¤ǌ@ǿ̦]ĸ£ÌjÆ¢æØİҮȈݸʜ୶ƆѠոlĔdߨˌԜӊܸ˶®ŔѽҬиגŔdäeʤIôĈÿĠ˾ÕɄeǨ{âaÆdȌŐŸ ¨z˶ȚŠǀƮ|ƲȲXѦÌѢʀ´W¦_̌͸ʞĊЌup|AĎ\\`ĞDǎÏˤŰðXŸĄ[ƨWÌTØSĸÌĨsǢąƜqŤZŬmðDlĶ~ƼƽʖՉшÁřĵÍÄĻĸÍؗHΕ˯Å^ǹŞı~§bşbĝIśsœJ½`ïCſËåßăqɿǀûɌĪ²ŬÀVĈIĠ|ĺܦਸ৆ʻӠ˦ڸȈðǲƵńݺ৐ֶжÿЄӳÈvżݢкᔺɘৢ΋ɚÎӘƉ׊ֱӪ੗͐ͣ~̛Ɇş΁Ϙȝע̤ȍθ^הй̜AɑɄɕÑ˓Ȕʹ౞LȚȜξƄ˘Qۚɶ̺ĵċȗƾʵӭ΍ʱࢯΧգȿġÓ̩ƫč࣫ʠͽ˽Ϸŝɰ٭D׋ǁЏէƥĒǇ"],["@@ƅǦüĻ"],["@@ɂzDȵ˥ÎàŮ"],[],["@@těřlĦð"],["@@Ɨ׏ԛژƇδºцބ୊ҬȰ˰ʧѿຩ͝ҩ"]],encodeOffsets:[[[113551,20472]],[[113035,21600]],[[115348,22160]],[[115498,22121]],[[121020,25085]],[[122697,26068]],[[124162,28761]],[[125232,30683]],[[124788,32249]],[[133660,43557]],[[116734,22744]],[[116752,23053]],[],[[121250,25111]],[[123913,23164]]]},properties:{name:"China",childNum:15}},{geometry:{type:"Polygon",coordinates:["@@ҒӁĆĊTĸÙÖCŶŖ͠ŖǬNʖÈZÀÄą®°òŷt¸×¨C¤lpT£gåʱ´iË¤ſĀӻÕoOwfY¯qķ÷ƛБɣףȔࢍǤģƗ»ɻ̑¦ŶŭȉٯưЧ×ӒKܥû͏Ôí¹ʲi܏ĳ്և{ȆÙƼՒ¯ʔƳÈÿXÑĴmÖîÿ¨ʱʧƠɜΰëЮkǆàWĶvøƞUĚĮǰúýXÛZżN¢ʄnŊUîû@oɤșŦZǌľÂkánȐȭäcВƐǄˢɞɶñ̲ǓÈǘɐNpmĶLÆT´nnƞăȜƂºˋC}£ùFcĺ¹èMńĦX¢ªŴŚNƤŁĶL"],encodeOffsets:[[-5388,10568]]},properties:{name:"Côte d'Ivoire",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ɯˉϽީʵȭƼƣ­ӭƘ֫˪ˉÄϩ޺ޗĶ՛ĽӿˉȨ۵Ĉ˗ƾઇÕĂඉǯEgōț@ʱ@ڻ@ġ|KIlsNlȢńҐɵϬĀðĽWïƾƸ°ċĦ¤úǣT·ťΥƚçϴɏİIŽĭ²ƨЌʂܸатʒ˼p®hƐĲĖÚrdjkô]ĶBǊƼ̊ʉàáÖȫ gìZƒêŲƎzǊàÀǢƒāžÖǨȴǼ׌ƞˀƮ|ÎŊŴrÌÎΖ®ļɨŚÒЈŨŔĸθƐɦǊɢöÒÜðHºh̜ȌºքčŮȷ¸óøķՎƲAǼ±͖ѧȠց©ؙĒϷŦʕ͈̋உwɡʍ̘Чڄիθ٧Íɛ"],encodeOffsets:[[15852,7705]]},properties:{name:"Cameroon",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@͔ϵͼʛȢuʦƴмħȴȂǪsѤԕ˂ūàǯƞ@æőÌçŷ̯üǍį͡ϔƻÜȍહ਍Qˏǻͳşణ͉˧ÅЋɉǣdȡĶíǮ˩YٽǈԭBß˵CÁfëǚѡªŵZÓU«ėǃU¹vŭš¦ãĴȇöÙƎģŨĥĚĹĎƓĀɍ̂؝༓ʕyʥϿσǠϡܷɗࡡČȵӦҋΠÍnǆʌÔiઁȃǄ̑űƿ|ʅόƭöśˌ۵ʔΑծ˭͕ڡÚ֩ɢ»ΊމǣWʌͱɒÅģÉ̳͙ĳɗPɇrÙ}ýÕßJ«ÔmʖĔŜğմ͓Ӓþٴċବ¯pҽjɻFʫH¥m¾B¾ÀƾQ^ĝJʕǉ{ĹU̇ƁŕGǉĝƵC©{ɓǓǕ@͍ÆүƟ̫dÁQԁۼÅ˖ęƊÏżϢƇǖėÈĭዱRՍMƋPؙŧȩȰɬծ¨ÒnfȞȮĲĠ``^¤CɺȝȶĮ¶ɢȊ}ΖƼüųëŕȷʠ¥ંबȒآCܒ˚˴˶Ԫܼ֪ˎᓀΚފĴҮ_ܲЌҜδȤʲΜɓ˨̯༪˝ϊӶҬ»ݸˤضuϮ̂ઠȿɀŚ˦ù"],encodeOffsets:[[28061,5232]]},properties:{name:"Dem. Rep. Congo",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĳҭΙމˍᒿܻ֩˵ԩ˙˳Dܑȑءઁफʟ¦ȸìŖûŴΕƻȉ~µɡȵĭɹȞ£D]q`ÝÊ÷Ĝ`̅ƃНΕȫςխղĖȎɨƞƴƋǌb°̆ǿŢǎȇŬÊдϬÏ͐ê]ʹƄĒǠėǖ͋ЊçɦɎź˝ĚsǦŘŘȆ˞øૈԩ̶øҶ̾ɪĚɸȽЀˣ¢ՓƛҒĸ̼ઈ˘ƽ۶ćˊȧľԀʈҾŤ֤݌ƴ֚ƿ˂ļŖŧ"],encodeOffsets:[[19057,3562]]},properties:{name:"Congo",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@՛ǏʑЁχ̣Ư˿ŗם̟ԃʶÆɘųŌЙɴ˹çٙɞŹǜ˳݆͢ĔԜŗמۣߤԨŐ̈́ğPȿ̍և}ٙǌե̎ϕҡԹȬ@΄͹ˬকǥѦɿΎ̱҇ɏȨ¿šäĿඟWGձҒQƆ͡ˍÒӧŵa׽ξ̵ȠֻɧఇɹಃeǛƼÕƘµ~ͩ՜़Ëfã¥°ɿŒÓZµÂǫľ­X·gñgéÉǙkƋĢǋÒ¥[Å½Ã»©ȟ×؇N£°Ƒ¾ϔʥŚƗώǕªÃÒ¹xÉÎŃÅx§Þéɪ¡À£¢½¼ÙÁs®i˱Ųū³Яǒг̌ȉǟݵƄÑȰȡǜГŌ֭ЦƓƘȞȎǺÙ]ӪƦń̌tɆǨئ৔ƽi]ƒãħ§ʬĥƘƼÈ˘ñԐƉǴʈȲȁͮĎͰҁպŜЂȊŏ˾΀ʁѶĔƈѮӋÓįŚ^͊ůɚզΒɀ͚̈́îɼŢЎƛ¿ɚϾԐоќħƻőĬćɐҲۤsࢎԀŞʦΞȚϞíŀʏƵƹ"],encodeOffsets:[[-73031,12147]]},properties:{name:"Colombia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ð½ǏtĆƂ»"],["@@|ɳʇƼɌø"],["@@ȧŲÔ̈́ĀÔЯ"]],encodeOffsets:[[[44840,-12602]],[[45544,-12371]],[[44509,-12186]]]},properties:{name:"Comoros",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŏk±ŪƖlƍ"],["@@yƾú±¿ŋ"],["@@»ûǛ̰ʰˏ"],["@@ȌÉcŁȽDǈ"],["@@°§ǭxãęÙłʼH"],["@@ý¢ŠƵ"],["@@ǥ^Ƃø¤ĕ"],["@@śU{žʬî°åǃů"]],encodeOffsets:[[[-24891,15213]],[[-23738,15501]],[[-24006,15369]],[[-23467,16627]],[[-24665,17022]],[[-23437,17059]],[[-25484,17222]],[[-25773,17354]]]},properties:{name:"Cape Verde",childNum:8}},{geometry:{type:"Polygon",coordinates:["@@ʜԑӌթǸýIecgµƁði_¹{}W]i@͛¸GĊÅZǃƧ¾ėVũaƓĭŰɡȳʂȢʵĲƮʧɃǅƚĶǄĻ̄܁Θő˦ѩ˾Aœ̎ʉǅǿȧǬʹüȍ͞ƶϞȫźƎƐƈń֦ȳɴĎ׸ʻǦ¨ÒŎ"],encodeOffsets:[[-85649,11180]]},properties:{name:"Costa Rica",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ͭŋȋŸǰAğǘúŶɸ«Ÿˋ"],["@@ȽŘʈđ"],["@@ƋØĆĶƝ"],["@@ӚKİďж¢ʈƅҜ³ҚЕӸࢤӍŞQïĎðc̔ȑȅĨŇźĘȚɑ२ȁńĭŅɽۼÁ̴ɡ̄û\\Ľ߳ɡĚśīܱĆಳœԤҬŁȤݗĲ̽ʖȥҎՉMܻʌɉɂҥ¥űǎċƃӃĔȓƤ̰ĠŅƨݱbաϹѫ«ŉȑЅƕBż͕ÕҼǾʮˆʎڎʨஜǐ"]],encodeOffsets:[[[-84543,22090]],[[-79533,22479]],[[-79748,22659]],[[-83801,23719]]]},properties:{name:"Cuba",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@ȳèƍȨ΂ˏ"],encodeOffsets:[[-70401,12350]]},properties:{name:"Curaçao",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɚʡuÐ"],["@@çSƎ°å"]],encodeOffsets:[[[-83322,19814]],[[-81739,20186]]]},properties:{name:"Cayman Is.",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ѹÃýƌϵÙǧìƖRÀǮ֔ߖʶԩ̳Àȑ"],encodeOffsets:[[34821,35907]]},properties:{name:"N. Cyprus",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Ǩë϶ÚþƋѺÄÛ̍eׇͳҹƆōȌ_ňΊö"],encodeOffsets:[[33498,36016]]},properties:{name:"Cyprus",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@òFòrVņ࡜ͷɲŚçǫųήˑ̎Ŕğǆ҈ơʌ¬ÙǅȺŧźÂ҆ſɪ̱֟ɇÙǉ˝ƩԻƵȯ΅ǔУࠫȲ́ͯաFȟƒ¤í¼řêęGnП̒ȡìʓ˚ĺŚ΍θ@m´ÁzrȴǀϼĈƒhী͜£ŜȎ^zGS·oÆcFrXb"],encodeOffsets:[[15165,52080]]},properties:{name:"Czech Rep.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɭćȼ̶ǩ"],["@@CďѣŬ̸˒řªƩ"],["@@ʂŵŹǝܨſʀÂIǕǓęĚáМ§װȊϸʤϠ³ΚɧɶXŢʥͦĻƣĮɭCÉCcýÙáŻÿU¯ŀăɖŗĘį¥ć_ÑhÄyÔƗųȽŘǣyé^iƲ»~yx˷ñēŗIYWaqEÅdpT¸yH]ȍ¤śি͛ƑgϻćȳƿyqÂ±n@SQ@ǤōǾɑĹřʔ˙ȢëР̑mĚHŚéî»£WgIŁYʣK]SYM¥Ɲñ¿ě{ϣǏǌǻ±ƗƀÉKÙaÑc}Cõ~ÏulCv`bsí~Џ¤YQN¿cw॥ȏ½JñÔo~DhŋHépƧKTő©ƻñdîœ|A~Itur¿ō ùpȋ©ߛɄŗTsUĎN^MH[W[åWqa۳GBӄѦۈֹƮ׷R͡ʖŤ̄ʁİÇ¸y¼NðȌ˦̇ʤ°żǅŀɮİÌʬȿ̒ܐƒÛĨʾʦʋìź˔ƒՎĻǐǰǠ؊TČȉŘmôƊƌǱļИӲeӠʩЅʰ͡Ě[ʞɿþ˜Ĩɿξ࣎ß"],["@@ŦɦÓŽɀOˑė"]],encodeOffsets:[[[14539,55214]],[[14039,55688]],[[9974,56142]],[[8508,56102]]]},properties:{name:"Germany",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@˕п̩æٓčKצӰپ~zv|OȌŏÂ¸Ŭ®dAĺĤȤ˻xɳثѿıX¾ÙϬüǠõ"],encodeOffsets:[[44284,11776]]},properties:{name:"Djibouti",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ÿké΀ƴęIɹ"],encodeOffsets:[[-62752,15615]]},properties:{name:"Dominica",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@͆ívŅʷ§ΟŨpƘʬ£"],["@@α§žŲɴĉ"],["@@ɉhsƎɾƵ"],["@@ĥĎˢʰǻͽ"],["@@͹äæǎ̰ŵĻ"],["@@ŠЏ˽íϡĬŅ̐چĂ"],["@@ĩ¢ľÈë"],["@@̓ˋǖƯ˕ĉ̻ǁǩΐ̯dʵѢ̀ʰǢǊɑ ɪ̒Ŵ̠¯Sɻ"],["@@ƭTʨ¼ĹÏ"],["@@࣍à¯ўНƴࡎѐģǼȪƮ¸Ŋû¶ʼɗHȃʓʭ»ƹǀˮɒۄÂѼ΀ծƀ˝भզƫơǛι{ŕ̇ɻkĶçεɣäȑǽȏɺÑPţ"]],encodeOffsets:[[[11635,56210]],[[12851,56285]],[[10303,56204]],[[10992,56065]],[[15450,56343]],[[10901,56945]],[[12970,56931]],[[12871,57124]],[[11318,58627]],[[9974,56142]]]},properties:{name:"Denmark",childNum:10,cp:[10.2768332,56.1773879]}},{geometry:{type:"Polygon",coordinates:["@@ċøǜǜk~ĤŊ״ÆٖɳȦǼ̹юw̻Åcõ߂ǳ̄ʗ̇ͫȻǊ˷зH׫ȏƑĴ͏ÁΉՙǉŜŗɠHƐxÊsÐġÚÉĄ»ð\\XĶHļĴbÐM¬ÕŌƈǬ"],encodeOffsets:[[-73366,19657]]},properties:{name:"Dominican Rep.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Ţŵ׳CɃēăçĳėȵؙչj̥˾ҝȢįȄїװЃĮϛÂȻʜ१ǫĩж޿ĢୡƗϣŖי͡ʟɡҬ؟ɊحŠėʒÆےȥϰڝ␣ᕧ൩୧ഝ˯ܹſȣĮŖʶĿτ௏Ѻ×ƪϏɚiʆ᣽ၮ᜿༸ἡኒ@̸@Ȳpیত֤¸ʈǎʊcĎeĶ]TÞæƊЎVҲŀžĒĨĜǲʤǄòɀÖǦÖƤĢѮǈǧǔG˄ÎƬÊTĄYƒd΢Ŋ|´ƘÊ೶^ĦʺªźÝ´ĝÈ±zćæ»þǒŇȶĭஶ˯Ȃ¹¸yØҞâ਺֮͆{̢ˤֆʀഺƂ͊ƸڲĤࠖ@ҌȻৈπφƓʾ¤ľצȣ֔ærēͥ˃"],encodeOffsets:[[8405,37396]]},properties:{name:"Algeria",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@šm¤ȰŦîƠ³ȇȻ"],["@@āà¬ĳ"],["@@ǅn˒ǖŋȃ"],["@@ǩĄVĂɚĆÜƣšħ"],["@@ƹbƆƾ|ǣ"],["@@ʙÂòĢǨƣ"],["@@ЈٷęǁȍáʍpÛŖ̀ʪȽɬ¹ɞƗtȢļøč"],["@@çüÈSě"],["@@˻_KÒÐ£ÈƇƒƳṬĉ]vw`YųӍѥԏӷί঳Ι͉ЫĕÚʫ܏ˁƧđ¥e³X¡I±_i½kġåB¿|Ëô³ØĄ]Ō½»ÕYïQ¡~ı²čÀÙ·]ăė÷D¯S¸úńčFIa¦jº¬Œu´rf¥ˢåǂ̤ȘȞӢĥіéЗĕQpǠɹ̑խπƠˬţܚ̊ȘĊɚƢǗɄμѲՈূΠȾ֮ХДŋȢǛÒȯݶƃȊǠд̋аǑ"]],encodeOffsets:[[[-82054,-3044]],[[-92594,-1372]],[[-91564,-932]],[[-92502,-790]],[[-93620,-471]],[[-92747,-342]],[[-93462,26]],[[-80803,1283]],[[-77091,-109]]]},properties:{name:"Ecuador",childNum:9}},{geometry:{type:"Polygon",coordinates:["@@քนƕǥ˱੉ƯɃϭʄљѪֳ஀ǥ˿Ҏࣅղ֕DʓʦΟĢ҉ਠᆣӸҋȱcšǌ۩҂ˉբՍ⮿AªŸï°ŝǙƗOᢱBᢳ@@᳾@ᴀɵࡦɐВĝրʢːȚšіĜଖȱʖƑࠎƋҴȁܞͬʖƢǘѺĠ̡ųςæŠψŧ̬êȺǙȳŢķǅ˦ǗưĜÅþ͘ȋࣂ¾ҀǊ¢ĩ"],encodeOffsets:[[35068,31958]]},properties:{name:"Egypt",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɐĭΣwêļgŋÌbŨƺǋ"],["@@ąħ´ä"],["@@ĳňԉˎ׃Ę˫µ¿Ē½ ¥@yƷĕʵµÕHǭȆǿò·Ö¹ÁťĥɁ¹œßƣqIZȿʠțƳǳŏOŗ£eCʎkǊoǠkǊŞȖ̈޺sˠúƨEÈhż\\ªDĞgȮj ¶ưȢŔЄł\\nj¶v¤ĚǀƴΦޛɞএФڟà̄˺ϥࠆͥКՙӲͩż̿ľRɰ̙Ƣ³~üêÙĭģĹcB«·ūÁȋŐ{Pu}yõĔÃüùĠƵĤûŦāƄͷˆΣО"]],encodeOffsets:[[[41105,16073]],[[41039,16469]],[[41922,14319]]]},properties:{name:"Eritrea",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ąƏƧĬɮ¤"],["@@˯ɯwĉǰłƆʂM"],["@@ŝĄÈðżýåõ"],["@@ëȓȩŧȻ˨ڂȤǯǏ"],["@@ŕħƅɔĬȔЬŬÑПɥë"],["@@ƓɞÒðǞĵěȗ"],["@@ťŨ̢Ȋ]ȗȧā"],["@@ǁA~ĆƄă"],["@@ȅ]ŀƪǺºçƭĵ"],["@@ˈý͛ͫɭìċƂǛÃŉĀڐͰ[Ư"],["@@ΩĮ[Ė̼}Êǅ"],["@@͒Ɨ¥ƿƈ¤׶ʩ৾ğÆžؚȽ[¡ģîJƠ¾żÌĖÕমàХȱƩޟЕࢥȍˋȩƪčʛěޡँĺϧ΀ʭ؇ωʙҟĀśԙÏˁƣЃԡ቉·ʵǱйéǃʍɝğΑƌ˿ϘƖɶƭçϽϔҕċҤФϮůMȥɶ̄ԊҍԘΘjŤĮâȊŗŪȈƨı֔׺ѮˣŠÛɨѹɍŭؽkħ˚ѕǑġƐǒƚĿXðłçȔȃĘǢʵƮ´ǔްɞOŠɄĬтϊƻ৸ú૖ȕޘĔҺŭƜêҎŃҘä"]],encodeOffsets:[[[-18317,28478]],[[-15770,28823]],[[-17597,28695]],[[-16726,29062]],[[-14537,28846]],[[-18262,29178]],[[-14045,29606]],[[1633,39601]],[[1480,39853]],[[3221,40746]],[[4397,40799]],[[-1837,44450]]]},properties:{name:"Spain",childNum:12,cp:[-2.9366964,40.3438963]}},{geometry:{type:"MultiPolygon",coordinates:[["@@צƝӿȁ̝[̿ʉǈȊʱĜgȢيľ"],["@@ȟĠȊUVĉ"],["@@͋ŗōƤ̕äӾŦɖą\\Ə"],["@@Ŝğ׻ӱÌӇɶ̍ȣÑţŏ¡ś͕æηßȟÐ՛ˎ͗öƋ®շŽăJǦОΏó̅ĂɑʢƠňȽŐÀɴӶĄʠƲࣂ¤ÆĲ௺ǁࢌ"]],encodeOffsets:[[[23161,60029]],[[23904,59956]],[[23474,60239]],[[28685,60912]]]},properties:{name:"Estonia",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@ÖGʶ¶ƸĖz¦@¾Àđˬ¶ׄėԊˍĴŇΤН͸˅ĂƃüťƶģúğÄûöēӯٽLץٔĎ̪åɟͱƺͭ˸˓ʪст̵ᠴ࡙ࡀ@ᢋᣭߝͽăϩǯɥˏ۩ƻĝę­ūBɋ_ğcŵCǙĨɋǺޡΟ©ąŏƩƍķݗŦſJȏ\\ś~޳ԘȽƂݑ´ɑ˸MŤnžl¨±ǀΙj½ @Hʅ̬ɯڬիӆƉʄݻ͠ʂҌ֢NĴĐJޔȞؖϾȒȆǘőƈĲƲߞҸڴϤŒͰాfDŘ¤ŐPǴȜƴɀʟYrJÞƤ¼ŔĤɂÄŦº¸ÕȀñǮȅ"],encodeOffsets:[[39354,14775]]},properties:{name:"Ethiopia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȬÉ¯řʃĸĈì"],["@@ų¥ÙŠȎù"],["@@ǖƋƛłŒ"],["@@ɫªͦZĹÃ"],["@@ҩı̞Áʩ̏ǶʣֆŅզͥޟٵࢌও͗ďĝ́ȀēȇƩЀǟ˓ЈȱSƭљʉৄѵ̒˕̅ͻహ޹ལࡓਖ਼ĽǲǉǙΟ¦äŏɷ×ďÈ৯ʿࠛωƛƬǦʋǀƋŷʋyĺ̐९ǺƜ࠶̋ͰĥـюʦėƒٲĘǴ˴ࣈؘٖͤ߬¸ºԴ֡ǈǂЇ­ϣϔʎҸ̇ˌþʚɻƺдڇΎܙźିѠόJ@ƢѸºۊҭގÑѾƂࣴǳڴͬ˘מϠȊԐQԶƄ୨ͥǈǕХʝĶŽ"]],encodeOffsets:[[[22708,61820]],[[21966,61983]],[[21727,64760]],[[25445,66551]],[[29662,70679]]]},properties:{name:"Finland",childNum:5}},{geometry:{type:"MultiPolygon",coordinates:[["@@ѻŭ͂ǀź"],["@@ăÒ¬òƃ"],["@@ʾɽÜέױƷՑƾµǶȬ˘˂Ŷϲb"],["@@đAĒƮ@ƫ"],["@@s@²@ê@ŞĈĩȥ"],["@@ÏĊĞyÑ"],["@@λϿHġ̦ȔCȍё½ǻĀǏƿʧÛǫǂðƔȆSغ͎ϔĆ@_"]],encodeOffsets:[[[182772,-19429]],[[183654,-18536]],[[182559,-17788]],[[184320,-17370]],[[-184294,-17331]],[[-184247,-16898]],[[184320,-16556]]]},properties:{name:"Fiji",childNum:7}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŤQÑŷǓĜł®"],["@@ݲĒĴÉչҕ˙cęŹ˩¡ɳŌ؈ʈ˿º˲Ö˕ʀʂĕ"],["@@ƍĬǤwó"],["@@Τ¯éƅȦùZƂʄƘőŷÅƚ«ݡʥ~ƍҗæņŽɯm¯ĥɅƤàǬјȬǌȸȆ"]],encodeOffsets:[[[-62483,-53028]],[[-61733,-52697]],[[-61554,-52629]],[[-60262,-52500]]]},properties:{name:"Falkland Is.",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ιÆŉǺàż̎EƬșǛ"],["@@ġænȲŌċȋ"],["@@֥݇ɋչˏˉܩŦ̥ȟʫòç¢jqZXRNB¦ÖìŪɄ¼ĖtƨŨ`ŀƤ®ĄsƲˇΦŇڂҼ޶ࡪ˿ԞНƝĖüƌũ²̫ƦʄƦӗ"],["@@ȥw¬ŔǝȸʊýĎɕ"],["@@ãJ¼Ĥhĭ"],["@@ƛ°Xʘǐëɛ"],["@@ǍC¨ɺʤȿŽu"],["@@Ð֧̩س͇ǠäĦɟȘâƐœɚȾɀмĘ¦ʮİǱ"],["@@ñƥȞǮū"],["@@Þ_zY~mªQÀR~¾\\Ǝ͢ʕ׸QֺƭѥۇAӃɭƅǧ´ƗÉ¹Č¯@akiwŋēŏėkmƗ±cƣʹǩWĳkƗŁÅBÁQäJĨŞò¾ĜŲNưk\\ȿŀĩ´¦·dȗƹ̘̟ÉšϋƟ̜ȫýЯΚǓˌvŧͭޡӋϡŁ׫ž̅Ǽ̇ÑکǄյ̵ǧɷƆПভßĕÖËŻHĎšÇPÕؙȾÅŽ৽Ġ׵ʪƇ£¦ǀ͑ƘʺƀȪ࠸ƚŊÛØýćƒܮ҂ҁȯϾͽȸƐvĩӐ՟ǢɭʜȒƫŀƚĤʈµțĂѹBÜƆ˽cĤ౱ǔ̯Ǽ̌ŌȹĴˮ\\БºôȚƚદȆҐʯȸĤϊÅĈĪѼǃŸcͮɭКԈGĶʕࠌûӤŸʋº¶ǎࢸʞ̆ɈäՐܒǲȠ̅̈|ƔȻ˔¯ĀƝТ¹sɳͬUɰǊ¤̩՞ɷʂx"]],encodeOffsets:[[[57137,-21851]],[[46265,-13288]],[[-52892,4159]],[[-62286,14843]],[[-62700,16272]],[[-63067,16392]],[[-62799,16620]],[[9708,43833]],[[-1206,47006]],[[5929,50728]]]},properties:{name:"France",childNum:10,cp:[2.8719426,46.8222422]}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÐýəzǊÄ"],["@@qœƹvĬƗϓˬҔµ"],["@@ś«SŴŰć"]],encodeOffsets:[[[-7359,63631]],[[-6790,63722]],[[-6559,63753]]]},properties:{name:"Faeroe Is.",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ōY£ŦƈLjŗ"],["@@ÛåĴƤý"]],encodeOffsets:[[[162115,6978]],[[141459,9729]]]},properties:{name:"Micronesia",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ķ̻ґՔƜˤ¡ȾϿęɷ̽ɩ÷ҵԪ̵÷ેȅ˝ŗǥŗętŹ˞ɥɍЉèǕ͌ǟĘƃđ^ͳ͏éϫÐÉгȈūǍȀš¯̅ǋaƳƌɧƝĕȍڃݺԿҞ˸éοƸ˙϶ƸPǽÐȓѠʂ˕ƶÞǥ¨ǆţµśì̥רȴć̌˴¸׎ĨƷˠīǤŴϣĐȅɌƞĦĺówϤ^zzJ²Iz£`wĒமEѼG՜hŎǰFඊÖā"],encodeOffsets:[[13613,2214]]},properties:{name:"Gabon",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƻďʽàɀĜȺë"],["@@Ů_˗ƟǍɄɆĲă"],["@@γ{̛̈ˉɯʁVїɪ̪ƲſĔ̢Î˨˘زŰτăˌ˝ƉƩʞnĦƍǛ¤Äɵ΋ȅǗ"],["@@ȏ\\ȔǴɕ"],["@@ÖȡȿófƔǣÙ|Ģˬĺ"],["@@ďà̆Ȏȵʭ"],["@@҇§ƤǔŭĸƸ˼Žaū"],["@@ƉɠŦSdɋ"],["@@TǇϴ½ɵǧïƀʍBρȪϤȘƊƕ"],["@@pű˩Ìʺæ"],["@@̗ɩňÓҵɫčÄȐĠȓɒ̠N§ĦҐǜś"],["@@đǍٷ̣ěƮɷȭؚŌૢKʘȓڽދ׽ǕΦǰŧֿȍΩÊجťϘÚϞĽЮ˧Τܯ८ӯķă˒΍͕ņ͝Y̮ӄ̙îƧʻɇȠąɼƄиOԐǥøʅŽ̝̋ůƗνÕŜƃϻęࠬđaƱοɋ։ų࣭UՋŎèÛƵÕћmIĹߵĨͽëɳͣѝź҃đ͟ɃчX஺ड़ࢪ`נҊܡ̍ԇǜ˿mŦúʛæџĩɡĪ]ǬߺˠȦɜķ̾ӧğΒ˴ۺǒˤãƖˆį˅ǠȀԺˍMͻ˶ĘʲάưћI΁ƕܡÆÿſķÒŝȌиѠǏ̺ʌÆɓĦĜΫɭŦʾ˛ǝũԙƥ¯ȐϾėɆΠנϷȏЗƦ͸Ŭŋ¦ʦˤțŪǴƘƍĺŘǴϜ@ɍǂÚƚˤpQʰӬ­তŘǦ]³ĵ"],["@@ɜĻҍÄlƆɆč"],["@@ɌýȹӇRɴ̻ňʐ¦ǓƌǪĬ²Ó"]],encodeOffsets:[[[-1091,51907]],[[-4297,54602]],[[-6367,55387]],[[-5227,56780]],[[-6275,57273]],[[-6113,57155]],[[-5916,57697]],[[-7423,58487]],[[-6292,58886]],[[-7378,59068]],[[-6347,59765]],[[-3184,59920]],[[-3130,60447]],[[-1339,61991]]]},properties:{name:"United Kingdom",childNum:14,cp:[-2.5830348,54.4598409]}},{geometry:{type:"Polygon",coordinates:["@@˂Ə®³SïûÑēẂĜڱɠÁuǹŏsYƑe؝Ýէuȑ«Wz~nmhûųĪítÒ^ÓNÙMaOoWčĳғ²ďÁRß~ĿvÇhǈǂ¾ɞɱׄշͺ̽êПɰÆ¼ÌӂgʚīŢɲĒµĶ³র¥ȚßRö»ЀŧÄƈ½`eEsUlmÆmŎI zĊlȐòƨɠōâŊjTÔuňöeƶũȂLŤloýȫH}ӘǷǾĉȷǃĸǍ"],encodeOffsets:[[47417,42504]]},properties:{name:"Georgia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@àāă̇ϼ͍ĭիàğşʘÃҡĭû˂ͻƽڷŔǉĝхǰͯϚ̧ȥɻׅ«ቕ࠵थ˜ʢÄ¼ɼƘǣĤȓࢎɤפƜВĸø°rZePxÖpÿӼ£ƀÌ³jʲTŊU¬¹ľ]ôU־Ļƈî΀ຌXΒéˠȪȘ§"],encodeOffsets:[[-70,11383]]},properties:{name:"Ghana",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ħǥǔƷ̺ǆȊʳκ˂ѪƵͬȎǬ̐¿ȎЕGȽ΢ʳɣ̛ˢeÐщɔƏbƅƏǃdБȮãmȏânĽÁYǋȚťpɣŅüŉVʃmO¡WŻÜþWùĭǯVě÷ƛuǕ³ơŊȗΧȑ̃ǘĀʎůդɛǈʁěéøï§GÛV]đĳ½ŇLs\\Æƪʌī̸ģng\\Ex¾ŜJzÙĄʏͶőŜq¬Ëf՗GșįʉnŉǋǕ˥ǝġĳǋǷiť̸ɉĬBͤŉȍɈ͍ĜƵʪbǼëßĉȰģóƑÛPĘª°äƒˬºÜvàFŸŀÖÀ~ŤOƚZȄÒDȊM¦ßŏľ¾Ìń`òǺ¹ĬHæլlťŊ҂ǉࡔÄ"],encodeOffsets:[[-11662,12703]]},properties:{name:"Guinea",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@½ɸžŒɌǣࠤǖשiǻĕǭȴࢬAèŠˎîמʷήŴŕΛƟݻːŕƇѷÑiƗۃEĩ÷"],encodeOffsets:[[-17165,13378]]},properties:{name:"Gambia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ËovŒġ"],["@@Ĺ°Ɯê¡ř"],["@@ķX¸ĸÀŏ"],["@@©ĻĩİƔL"],["@@Ń_½ËǰƙN¥CȉȃÑʽI¿}ĿÕŷßEu·ÛƓ˫­á«§ÒŌƗģLŀƩ¾ƮĽ^΀ǀƁöƵÓõĠĴ͜łܧƵlŶǽiǃŒêƼǉɱŴ°TŖaĖhƦÚĈ^ʰgɞ¬͈Ǆ܆GʆA˰AGåºīñǹ"]],encodeOffsets:[[[-16277,11349]],[[-16501,11325]],[[-16283,11741]],[[-16370,12168]],[[-14090,12557]]]},properties:{name:"Guinea-Bissau",childNum:5}},{geometry:{type:"MultiPolygon",coordinates:[["@@Fѻ஭đ_xy¤±JyIy]Pnõ¼ĽrΞڎwŠlȤtMT¯{Ġڼ@ʲ@Ȝ@H՛"],["@@Ƥ@ŋȯ͹ȓUƼɬʶ"]],encodeOffsets:[[[11605,1566]],[[8946,3849]]]},properties:{name:"Eq. Guinea",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@˄ºµċȶŕୂW¾ȍѺǊŻʝଫíûžȵÒܷĆmɸĒiÄŢĬĵ"],["@@ėŐŸȈ̗"],["@@ťƎĔǍ"],["@@ŅzBǶѠɚŧ̳ȳŕ"],["@@ĥĬØå"],["@@ǅČúú«"],["@@ɠƠŘ}ͷš"],["@@īA˒Ĩǥĥ"],["@@ċ]ŤŎŅ"],["@@ơňĪã"],["@@õāŢƎłjȕ"],["@@ĉN¸àí"],["@@÷ÐŴe»©"],["@@´Ęɞˑŧ"],["@@ċ¯ƇŎɔÝ"],["@@É£úžoę"],["@@ȘďǭÃɛâȲò"],["@@ĘąƥǗǆÔØǒĽ"],["@@{ÇəɦɎ³ũ"],["@@ŰʿȥÓńĉ­Ǯʜ¦û"],["@@ǝtČĠũȄ˄Ç˓"],["@@ŏuŞɘMȡ"],["@@ői¯ǈǂƝ"],["@@ĠũԒƏŰέˀą©ť˗ŚƟɮ͝¬̞͍ͯÎ͚ƊƂÕ"],["@@ƺɿęviď̡ĜƒİǙđȓĖ˒Ƥȶ"],["@@ǋzȧʲɾNãėȚȡ"],["@@åƥěðƿGŮ͊a"],["@@ɑĞŪŴƫ"],["@@޷ɤʽŗˇøͧȉˍpĔˡ̄ùŌƯίǰƻ{ȪǷiűʁɒȧǜ˷ؗЎtǈʗăϫآܣơ×Nƀȫ¤ŕƲŏлƛֺǥβʹʄÝ¶œIϳѥ̜ϷſϠρ˟ęνǬμँϋ̆ʏˋ̇ҬĿÁɅʹ̀ĆʴүъɼʰɊkƔŸ࡬̡˲Ɣٗʲďç̕²бùšƒwħǅV˿Ь˾lNŒͽL΋ʔġȀûĄćÌlBWÒÚOƨŰAÏĞ@zxXvr¢bǞªȊ̎ŲżÙŸRÚԤfªxŸ°ǶƲǆxʺĢlĸ¸ź̺SìÂŐH¼TĒYČB͂ÖlRp¶ˤEĐ~EɌǑȂRŞ£ĲÓ֠ÌŦÌh¦Uò·ƶllĀdĶwɖīǗʙƍBʅʗȑ"]],encodeOffsets:[[[24425,36389]],[[27829,36317]],[[23608,37059]],[[28512,36792]],[[26095,37267]],[[27096,37464]],[[27597,37609]],[[26480,37674]],[[27669,37847]],[[25886,37959]],[[26159,37855]],[[25113,38017]],[[26013,38318]],[[26655,38431]],[[25863,38503]],[[24941,38479]],[[27469,38719]],[[21390,38713]],[[25592,38666]],[[21108,39305]],[[26721,39136]],[[21184,39536]],[[25267,39741]],[[23978,39894]],[[27045,40274]],[[20560,40380]],[[26049,40943]],[[25369,41590]],[[26664,41705]]]},properties:{name:"Greece",childNum:29}},{geometry:{type:"Polygon",coordinates:["@@@ƢĞĝǯ"],encodeOffsets:[[-63196,12301]]},properties:{name:"Grenada",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĩķ΁ĈӪƼ½Ƌ"],["@@ǧàǈĦ`ǅ"],["@@ǁwŗǨȴǊΒÛ˫ʝ"],["@@ּřŪǝත̉ԕŮѲ¾ƓÚँƢŎȤϸOяǈϬƸࣚģӆɕ"],["@@ύ`ZĈδħ"],["@@~ɥۇǗ͗ČறÇΘΪ࠸ڬƘ͘Ĺ"],["@@Οò̼Ɯ¤ɍ"],["@@ҥȑխž৔Ô"],["@@Ԟ̷੹ƻˊܘö"],["@@х͚Ǡɰʦ։"],["@@ۓĘࢴȟË"],["@@ࢣėЏŎॾǠјušǟ"],["@@བྷɞѩʸܼచǯ¬ͭ"],["@@ↂʭ㇓Ƨď㞆ƨպʁ᝚ȱಇʹ㏱ƍʵę̀ī෢Ġᗆ¡ܘʧৄʾ๠´ĜϽབྷەᰦܦᆦȯ૮͈཈ຶōࡈȍෑ̳૛ā§ȕቍǃۖūҩƧ೧áଝî؃ȷ঄۩ᅡѧԅߙܰǠ଺ǉpŹ׍ľѧÑϘȿ޴ūܜÉЙဏŤॅțӏĚΣ÷ؚŋ͞ʩ୒«ԂϱcӝߩŒএʓӫĆҎŽ׬Ģľρώ˶ζ@זέçəݙAͫũ઩ĜX˒͇ɛƾʽ๤ţš̗໳ȉݕňޥ̮ѧƋۿɀؖ˹੩ɏ৩ƶؔƿࡩġǶÏኔˠަ\\ᄄЭɍڣ๳͈ҽҐၷ˓༂ƾƎˍϽȡϜøᗨ׉ѩ̣ÀœĲƸҠȖߝܣÁ«ͮɇΡ՗\\եǘӹӖ૕̊ঢ়°gÿਫ਼«Čʟࠍțද΀ćßǑࡃɇᏚfęࠟțƪŏ̚Ǯ఼Ŷ༦ǵ୐[Cûعŏ_ĝۇ±łůҳEBūݥƭĆāԗɳڇǵᙡͅԳ\\ϗĳͷ¸Ġő̱³ଉ͂Ǝϑ࠯̩࢕ࠅࠫͻ֭ǆȦʧؽʹŭƪśǻͭæ̅Ƿқo֨֞݅æͼĽ̛͙͉ĘˈʡခŽԄǹ̟ǕˇýۥªĲțʼ ЊλԋɏڣÜҦƫΎVÊͿȋǇɯg˷ϝϥPˣŜҒȣɱȡࢃaڐŵƙΓǲʝЍŝȨċ̵܍˝ȱ݅Ò׬ǡúˣǓŏՓĈʠƕȽǭ`¨Ā̅Eǂ̐͛ɍ١ƼXƜͤîȀǨԽȁ֓ƞăƊɬψࡇ͵ળ¡ΊȔԭNƶгṷ́ˀûʦҪǄڛåÐȠٟȬjȾъ˔ԅȇ࣡ېß̪ઌǪȏK¦Ė७ǭĻĐʮɒތȖМȷĥɎͩÀϋκȪ͹нƙŊ֕ґ˱޾ɹƤޘ͔ѸÀՋ«۟ɗǭňοHþ͐ʉÒᆖ۪ົ֯х¿Ķє͊Ƭն°ࢳυǰðʄॎ˦ႬȅҵƔǞĨڝÍӣĊଢ଼ʋӪք଺ų˖¸ȸʮࠧǕহǛ˂κĈࠚƣ֬ŰŚŒχÝƒ͜ڌٻڈڰ࿳٥Ȳ࠭Ĵѡɺ̬ĶନÍྰ͕Ǭ¬օƞÈɞѣƂيQ̛İോ¾ĬɸऺǶඛýʜȔэҲɳϘϿҕǉ´Ǘ؍ùݽƼɺҶЎȶحƩ¯ĸ˺®ʳČ֪Ĳǀʨ˭Ťǹç͉Ú͊ˌۅȚɠǜ̶͗ࡋGѲĀUǮϲĈኻۜˈźɡƶᖟЀᄓǎҩœϵČࢿƽыĞӷċѷØˊȣఉø૭˨଴ɄಷîiɈޙƗѹǨɺŬཔj۾Ƹุĉʩʹ࠹Ɓ޷àؕœহȜΞŢঁyಝ͌̄ʎےŢᖂȞԮƲᒪŖࢄ۞ԨĊᖏmǧʶᒈԬژ¶׌Ɨŀˢ௾íӾ؆ಾ|ᖖѫᕭզ◴݆̂ƿĬѕ֚҄ᅈΩ଒p୧ϸݲö⪴׉ЮӴૉ͈ᶰÇюÎ♣ĠǤي፾ȸ෬ƍߌȚᇚ˫ӽ̺ࡶń㹪Ê"]],encodeOffsets:[[[-47377,62241]],[[-37920,67105]],[[-52237,71222]],[[-53996,71624]],[[-52915,72556]],[[-26042,72624]],[[-54820,72746]],[[-56337,74539]],[[-18432,77218]],[[-19028,77868]],[[-73387,79182]],[[-18035,81742]],[[-45941,84054]],[[-30671,85571]]]},properties:{name:"Greenland",childNum:14}},{geometry:{type:"Polygon",coordinates:["@@˶DʔŁRƾ̮ȅÿáˍɉɷǩƳãáǧºǑQ¿īÝÛĩǯsvůс˳ƕїǊ٩¼ܛҲÜΘ^tr ĥȺĖƦŀǪȄ̮ʬBϢ@ɶ@ƴ@ÚDYøTĊø@­¤ĕz·@°sÈ§ÞɟƆη͚ǶAǠCHӂໞAÑྩ"],encodeOffsets:[[-91374,16270]]},properties:{name:"Guatemala",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ýƚȐƾÆǗʻ"],encodeOffsets:[[148216,13578]]},properties:{name:"Guam",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĽǳĠŝķƧ͋{ǥƛÒŷǩӇ΂ש̀aĘѱвۇȆāУsËh¯ÎuRǗ§ā¯óœ¡£mǛGßğg©ŅʱÊµ_¡ġKŻơGµM΅Ʀʯ˖ŋ CĄÓ_vB̼œöĕ˞Šݮʬ̄Mx¿ÀıǢłϗƲƄҤŵƀċhÿ·ĽWǉ÷gՓפ]ôĢàäÆoƞB¾}ÈmÚ¶ĚάÖ̮Ƞ~øGg`ĵbµm»X¥²í˘ǤɸИȬĞt~Į´d¶ƻȲۈЋׄ֩~̟ǉխɒϮδÅϊϡˀŹՉ"],encodeOffsets:[[-58567,5682]]},properties:{name:"Guyana",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ȯǵǪӰŗŉq"],encodeOffsets:[[75477,-54412]]},properties:{name:"Heard I. and McDonald Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ݷȱĝxǷŲĽµ×ƛűɩѳϟgMOǓĸ³îʓɽ]țhĽWsaW¡PÁȓhÿeyÁIå[ùǹ¥_ɹYŵ̾˙ĺÈʖazÏ¤÷Jĉ_ƇĞʡŗF]¨MºO^ԝ͢ȯǈǈRÀ¹ǒâǨƴäɸǪˎɊĀâĆyɎƮ౤ąΞƞ¥ÐфĽєøΐƿʤjиΕǩĪřw`ûƘMƖƣɚDůŬɶŇâƉÄÌ¥ɍ`Ĺĉč"],encodeOffsets:[[-85642,15234]]},properties:{name:"Honduras",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŘËͳøɜk"],["@@Ҍá˱mǙĐ"],["@@٦˱æŃ׋̪ٹǾԺı"],["@@ʛ`ĎϊÓė"],["@@Æ×ƕĤĐ"],["@@ƧȬhɞƀщ"],["@@̟ĒĶŪȪȻ"],["@@ÇąȌˏ¹īͪƿ˱Ù±ɣƝ\\ƣǎ܋@ݧǘ͙»ȥǧɝƲȫU©΍̮ȵǔͫࠊ֭̈́σÅËֵϢёŶ΃oڥոÁì̊`Ы˦ŁВʯǼȥϝп˿ը̤­Ю®¶pŢŶpK¶áŦÿƊlƀ£ŌSĈvYOÐäÝÖ̀ňpĺQÄÍ¼IbкǮǸŸĚUöq®]ƮËļÝτ˽иǥҨƨbĎĂȬr"]],encodeOffsets:[[[18031,43796]],[[17051,44029]],[[18092,43927]],[[17189,44310]],[[15741,45030]],[[14836,45732]],[[15166,46057]],[[19360,47035]]]},properties:{name:"Croatia",childNum:8}},{geometry:{type:"MultiPolygon",coordinates:[["@@cÏɋêǗƎЈƧ"],["@@ƇǫÖŋN«aÏĻĳĵG[W¼ïÊăĢÙtÏșíâýÊĩۇÝёČ̥½řůӽ΄úƦƆூȑΎŞ|ĎϵͬĜ̴؟ʀȂƊӦdΖſ͖¡²ll}ǛǛČ÷"]],encodeOffsets:[[[-74551,19229]],[[-73366,19657]]]},properties:{name:"Haiti",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ĺDˢɯƾqĜƍ݃χ݅ਇ̣ūħėȑqd£`ȑh÷_ȗpǉėًſčāaƧҧзǦσ˾ĽÞƫÌ­^ț̜ǅL̢ŦUͦȞŖɉŜժäʤԬȣ߲dÊǴ۬Ȉ˚Û͐ŰƀȚ߲tˆǵ̪Ê"],encodeOffsets:[[22663,49568]]},properties:{name:"Hungary",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĹVhŘѴʌ ƧЁɑ"],["@@ƭʚĠīť"],["@@ùŐľƋ"],["@@ٮө¢ãœƙɑóʙĂҙΨџÊŃǀ˲ŶլÈÐÕ"],["@@՟՗֯ǕţÞĤǈŃĤĶ̒˞ɰȸñƌȨВȺ^ġǲV£ŭŝoĜʣ"],["@@Ň°ä¤č"],["@@õĺŜŤwƧÍ"],["@@áJ¾ʴĢ÷ýȅ"],["@@ʗǊƈĴeï"],["@@ŃǧÔÅ̅u͏ŀȂ_ʶ˺Ȝˊōßɷ"],["@@ŝǝǿêʾȶ Ł"],["@@̹ʙ˕ȸǪí͔úŲé"],["@@˧âȞŖĊǷ"],["@@ÅƺƤĝȁ"],["@@Ќæŭفõ¦ȜŪ"],["@@ʞÑăíǟÆFú"],["@@्ʋȣìïďʗeСŐ՟±ďƈÈɺآƮۮ˱Ѭĺ̚ơѸ˘ÎèƉƄäøȇȉʃ"],["@@ñȶɒƀ˃ǁ"],["@@̴ĐőǴİǠ̷͑Éòć̓mċƴǃƓेɑɭþ Њˢƒ͸·ȪʇƎaɠŖΛɀ¹Ǌ̦xŀǏ"],["@@ɎɃҹω÷ɶωǎũǲЄiǺĸʚõ"],["@@ĿïĕȦǢatœ"],["@@ˡʃγÄȯĉƪ˒ȨͬŔǈă"],["@@£ĢĖc±ý"],["@@ȩŋիfδېǶńЌ¤Ȁʱϟӟ"],["@@ǱDrˀъӔþëûÏg̟ʣ̻"],["@@șîƠZºć"],["@@ş¤ĈÆĩ"],["@@őFOĈŢč"],["@@׽ĳͳŶŢƢǚhނNĊñȕŧ"],["@@Ɓfjüʲßƙ"],["@@ŋtŜúOĭ"],["@@ǵ΁ț`b̦ôXãɦΠɁ"],["@@ʘǩ֐Ï̈щ฼Ɓ΄ѰŚWǬɁ̠ҠȵϞĠʛŪé@ȻȀėРÇӖú˶ƅmԥǒ̫ૣОӗĹঙĔݹƀ૙ώғʏŉ҅ÖՏɄۡĔÄˆ˓ŀ߉þĬƞĨįƞˀŎZè˸ǦǞـƷȆǎ˞ē"],["@@ƓSׄ¨ѯ"],["@@ŏPĔÞ|í"],["@@Ł½§ʲƪȳ"],["@@ӵɯʉɬŮ®ƪřŀŖIȖʈƨɻ"],["@@åïʘ֜eɏǋ˛"],["@@ɍƀɖGĥ"],["@@ăĆìA"],["@@ȟƴĘƺņñBɻ"],["@@åıɿÊĨɀwʬ˪Ű¸˅ūǡŋ"],["@@`ɫşØé͝ǸǍǿÕſɟƕP·ƦưɺòӼȆȚĘƏ"],["@@¨­ʧǂɀœ"],["@@ƕĩęǔȲ~ī"],["@@Ɲ«ºļĤÏ"],["@@ʡą«ÒͺƸ«ƃ"],["@@Ɵ½ĈĈØ"],["@@ȳŝJҦǦǦԭ"],["@@̮ʭFȯҙǅЅȀƃƸˆٮf"],["@@ťÔƘAqÑ"],["@@ՀĽǆšʒσ¯ʋ߯Ҁ˧CĿԕȀ̅ǵ͑ʔȗ˵qɲ˒̚ږƸĕʺŮɪã"],["@@ũɕ˼KǜɌǹ{Ƴ"],["@@ŷȕǓŠȱĻ§ʐĒ̖ƞ͆ƕÚŏéƗ"],["@@ǁáwʜǺǹ"],["@@ȣðȚɬˉ"],["@@ǉ̀ºĐŐЏ"],["@@ʶܑįûĆ՘®"],["@@ÆɽƛÛѕƲԬƨ"],["@@ȀMłƑݫŅóŬôǘҪ"],["@@சǧ֑āهʪ"],["@@īĀŰ©"],["@@ːڛϠğǧˑ²Ʃ֙ȺǳզշŜ˜Ͼł¢ĬǡhǔǄzŖƏ"],["@@ĩpƮÌǝ"],["@@ӹÉƕŜɄɎь˟"],["@@tǽǔŸĦčġȥVďƭmʾɕʃážĆɀʰV"],["@@ȹąZʖɤ­š"],["@@ēDŔƚ¯ç"],["@@˯ƘȍΌØȒɎbˬ֣ēų"],["@@ǿ¼ğʞ̠ͯ"],["@@є×М̱ǯĵȽƙ̘č¹əȘ"],["@@ťh¬ŢúƉ"],["@@ƉŴÎVģ"],["@@băȏoǮĴ"],["@@@ǋDᲗħͥĨƓBᇳࠉޢĪɮƳƫҥóŗǨ̝ɋǖմ˹˰ΰ¼˥°ȵǚɜàΧўţͨàĘƥŞŎɃuȴٿѨ։ń՛ʎڅäѡ̺xľưbԵOĳŲơkʝ˴ƎΦş¡ɷœįХŷƍ˫JƇ̔ĬŸıɎٽьɔĞдğϺ̐ђƽ®ƤŶºħĈŊǈ߫Ɲս~ʅɄýβ՗ƖʡǐɒÈʺҠŸӸ̈ϴ½ԬʷфeŚđŻǀ̣Ź̝öӳɞѯpɀŨØͫŢrʧ̪ƅȢp̺̌Ҁ؈ִƘČâ¡ƺֶ̞သܫ۪ćŀƉȎE"],["@@ĮōȑǉėǐǼň"],["@@ĬűÝšɴǗĳ×řİƉLƎƗŤrƒŌÑĤô"],["@@ŉqNȮƐKǯ"],["@@ɳSôŌǀķ"],["@@϶ũÀş˫Ï͏ɲɶɏůċ½ŮśÏˁƂłŘϚÌ"],["@@űAİʲĕȎȆɍíɯ"],["@@ȐęҷĀĄǨȤǍ"],["@@ũP¢ŴĈƃ"],["@@ҋĢ`Țиȕtĥ"],["@@ĝpÄ¾í"],["@@ϷƶpĘɲùƖǓ"],["@@Ĭ]×ƧőèþĞ"],["@@ÞƕñǽŗȀƿĢƔȊ"],["@@ŭðo˒ƾƍ_ȳ"],["@@ϚЭģ·ŗãȦǕĨ˛ДɶĪł×"],["@@PŇЍɸϾů"],["@@ϱѳ֣ƑЧlɥƖဝ©ιð͗ɓƭϵ¦̟ƬˁɶƝŴˣК~ΪіͦĕʼƨԠD¹Ć˼ôǪß°Ň³ȏЋĔշջ͡řǩǝʝb޾ࡻĜʗūΛπϵƄhr˝ŷªԗǙÝʕϗÖďƮŌШ؍Ӓƌ̔CΔơĘȍkͣʁƨُaއšѹŶϏГ\\ȟĭƇêǓʠȠڔ|ШſѬЇqŃŞë֪ʸȨȖҬYѬǘфǠȎŐƱĹٰŦň³ǖĖǦ̚Ѷ˨įɠͰǶÚ˔ëǀƧ܄¥ͶơȔĆܪûԒ͌ΎψƐ\\ļƷ́э"],["@@Vʏǿ³ùʐʤ´"],["@@Ű_ðǮǌĬ¾ȲϺƠ^ϻ͹ȕţ̎Ʒʐ˫ޕɌăƣúҟϔէ͇ǀ̕϶bѼƝ˖ÐȦƯʖǠנ;̘ṷ̋ľŋ@̵̝ˉäƓ"],["@@ȏŢƸaĿ"],["@@ƃcÝɚ͒ʦòĻÅȿƛƟ"],["@@սʞùƜƮÂѬ̽Ž"],["@@čiČĨBý"],["@@ËǘŨïÛħ"],["@@CËéĮî¡"],["@@ġŶŐqmŃ"],["@@ūtɬǂʟ"],["@@ōƽ¥óƒȢb"],["@@ǹ^ŦĘȭƢȸȠŨșÝʝ"],["@@ğāʾ͗؃ÇʒǑLțɒŉœň·½άяɷʓ৐࢛ϙƗ˵¼ʅȌ¬ǭȁƅȇг·ҹĊϓկϝƣƮ\\ʃБϧŰ@xśřǻɂƅǯǱ\\̋ƏúǇʧϿਖ਼ӗƗژãėď@ǮěŁŻèͅƩāɔɡ§ʹ˂¿ɇǳœƃá˅äΩșжŅƘٝƳčÚÎòǑĥŇŊˉÙƇ߸ŗŜpӴǏɜѹǢĨƚɁȺŖΠʿ˚yҴȆƢĴķ[ÆɌʬΪɂĘùōĬɿܐمԄǂתɨŎĜʞʒĶϼPÂŏԮǕɾǖԠdˌѺɪͤɮĉĤɖňŌǪRȌ঄ƴžռnӰЊƕ"],["@@ĥĠǀûðǢƐɏĕɍ"],["@@ࢰoלړ¸ˑ஦އږ࠳̪ȭ¹ʜǾ^βӃҘɁ̶ԋբɛqƍϧǗڐʢ˪ȍĪȭ̝ȩoƛĖēÏġʂʻ՞ŷžٿˢɯǍуːȌΨSծ؍Ǜяòǿĉˣ²܅śڷͱɦɣǑωȎ̻éW٧ۚઙެ·Ҭңδ׃ޚ˄ҟज՛ܺѕʴӁౚݧдġЦǗňΟԌѱȮܭ܄̹ԺlʀͶш˃̠Å"]],encodeOffsets:[[[125900,-11171]],[[124809,-10844]],[[126379,-10549]],[[122893,-9599]],[[128070,-9740]],[[118385,-8980]],[[125929,-8750]],[[122332,-8950]],[[126278,-8555]],[[119441,-8820]],[[127270,-8529]],[[126900,-8471]],[[142229,-8589]],[[120378,-8568]],[[127566,-8336]],[[130892,-8293]],[[125730,-8818]],[[134003,-8518]],[[121081,-8517]],[[118219,-8350]],[[132955,-8145]],[[129845,-7851]],[[130478,-7806]],[[141861,-8472]],[[134478,-8191]],[[135150,-7374]],[[131759,-7355]],[[123674,-7289]],[[116577,-7275]],[[118147,-7138]],[[107779,-6799]],[[137766,-6596]],[[109951,-6151]],[[123421,-6449]],[[115425,-5950]],[[135995,-5991]],[[137981,-5843]],[[136117,-6043]],[[104825,-5610]],[[126594,-5398]],[[124972,-5568]],[[125589,-5395]],[[126137,-4660]],[[136777,-4347]],[[126201,-4211]],[[131649,-3671]],[[131355,-3762]],[[119219,-3547]],[[119095,-3960]],[[129906,-3161]],[[109452,-3077]],[[132869,-2934]],[[102836,-3259]],[[110805,-3069]],[[102609,-2806]],[[102240,-2399]],[[129081,-2510]],[[129049,-1832]],[[133482,-1731]],[[127969,-1746]],[[138726,-1630]],[[111568,-1658]],[[108591,-1709]],[[126564,-1745]],[[131229,-1700]],[[126170,-1199]],[[112344,-1209]],[[138205,-1142]],[[101544,-1820]],[[134146,-1347]],[[138633,-667]],[[130356,-799]],[[133762,-541]],[[124790,-416]],[[144357,-2672]],[[106982,-342]],[[130629,-326]],[[130304,-507]],[[106227,-356]],[[133953,-4]],[[100823,-543]],[[107294,-180]],[[105764,555]],[[105501,765]],[[105907,1074]],[[105643,892]],[[106522,1209]],[[107096,1246]],[[104886,1014]],[[99822,1501]],[[104952,1495]],[[127887,1020]],[[104150,2129]],[[130799,869]],[[99671,2126]],[[131537,2102]],[[98779,2417]],[[111501,2976]],[[108299,2932]],[[108837,3233]],[[120483,3360]],[[128674,3519]],[[120714,4287]],[[110916,3779]],[[120397,4271]],[[129861,4131]],[[98809,5355]]]},properties:{name:"Indonesia",childNum:107}},{geometry:{type:"Polygon",coordinates:["@@̽ĥ̤ˬZȅ"],encodeOffsets:[[-4517,55486]]},properties:{name:"Isle of Man",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʬ@ĤмӼþʜόώeլԟ͚ƺ̃͠đUz­ƓíȘșKąuū¾ǅWǫ̑âʀ˵ɶĉɔÛʄǣaīֶɹĦ­rÓ`·O¹yiŕĿœāŭƛíƃ½ůBėoĻÁÏqėĽhƀěĈ³Ā¯¼Mbn|Î_Ө˃ָϿP¢r^¤YÚƨĝƐíƬ`¢[ÛpßҲůä^ÀjĖQǐ»èeɚĪŜÁɂãň¥£\\Aĥ¥юɳĐsɴČâWªš´Ǵ׎ǵ˄ĶɬǏłÂμ\\Ŭ¯Zz´ƀ¦ŜGèĸįƄS¢ƎԬFĀxAÀ`ŒjŶŶèȐï±СbûÊÉ¸SeķákĴǵʒũƺɈÏp¹ĐI¬YƮnư~êþŠͦıҠdŞÞ|@À¹źIƞ¨ĐP°K¨hֶӠ£ʨҎϬɢࢎƈՎ̰Ϧ×٢˿áƷfÙǞɵC¡ůdſƎԙࠩԵšƕRʃċjiF{şɫ˗ʽĩȱŴįǭϯĭƍëŷǿϙ͡ŔȗeŁÜ޳aũ£Ŀˋê̝ùųęǥ¯]±léĂçv·ĵ±[ÐÍ՘w¦đǎy˂ñφǝIÅ\\¥K@óRÿƷǻEȟǕ½įǪÝŋǕӼǄͲ̈́ŨĴ{Ǿǘ®ĴĠɸBĢp\\ŒêĂΙȎ஽Cб¬ɅÖ«XYpȊC͎ŵɬĉåmŃɕɩ̼ÉBfƉ{IɏƑȐůeåW®ďęĥƵƛȷ}̘ɱɢðƁö[É̙į@ëȏ¹ãBùKĕǛ]£M²ÝÈÃâsĦMƊěŦiæ§VM[ĭ[Éō˟ÊĽÀµvȥƢoy˿jǯŊ̛m˳ßBĐʅǋúħƇGΞĉĮµϱśƃŦŕǑÒŜϐɇȢǾɅ˯ͧԻƵȷƭĥɓŐͿȋ͗̽ʳŋ őףȏßHPǈɋŋÉƋɖ֝с֕۩ำ৑č҉йȗЏPʳӡ˧Ř̓ƹȫ՗łԃÉɟǎؑųȔÿěɾȳħ̵֟כƓ֧Ět¦šUܽѯÇׅ̿äț͢şγÜҷƏȓǵŏэҕʱϝȦљӲȓҤçЎŐ͙êEĥ͖ųƐЅੴٹৠӁྰεӤů˔Ō@Ƈƨ¼òŷ¤ǡ̄ԍᓶĆіřƫĔRȂƦkǗîĵϾȐۼãϐǅɈĤČķSоʐӍ­ƂɴƭHƸɌÖՁļåċȥɡƢāǓȩ̿ࠫΕʱDӻ̔ঁ৒æŬȎŵݴʌˀѢųű֥Ʊέöԁ˼ȉ͎̠ɾҕɉÍɔİÒĊnĜbĈAŚCHʨXxh^lNhIzDvìgÈ\\ÌcĬAǬPĬEȸěʘĺǈÌɎÀfQ¯p«ä´O¨Pbææh°C¾B~ÙŢL vwÎÏŔÕƞȍ̢EȲáÁiµGƷtƑǠ¤πǜէɌĈ̶ˠʦżȄĂż¤¨ƆúîCŠïÀƗĚ¹ÜJʼİ̞˞þfî¸ŊƲƚƐ̎¦°ҾɸВݾάƆÞÌ ¼QºÐbêĢîˤ̼@ŊÈļÚO]ýÖbÚºǢY¸ÑǄ`ª|®æÒĔ¸˨ŠÊ`ĬâŜWN"]],encodeOffsets:[[[77130,33061]]]},properties:{name:"India",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@¿µáƠĆŏAƨƁ"],encodeOffsets:[[74232,-7554]]},properties:{name:"Br. Indian Ocean Ter.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ˋÄɨt¤÷"],["@@Ňŭˎ࡛λӧŜĉӅñÙøࣽΣ̏Â¼űϵŽޣġǲǨԃãѬɰدÙδ˖ЗZÒӮőźɰŦ܊ŎǧÜƹĵحÅϜɆƔɲ̴Ģӫ~ӝƦsŖͬ²Ƴļ˖à@Ø˯_¸Țȣ¼ĒౖaßĘЬʚՋ͘ǪĒɎԜĢRʇ̌ͨ̈Ņɍũ˧˗̡Íƀē̩ƱјɩʂUˊɰ̜̇δ|"]],encodeOffsets:[[[-10186,55208]],[[-6367,55387]]]},properties:{name:"Ireland",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȝȃեĝϜȂIŖѮHû}"],["@@͂|ొٸ˜ʇǽƃǂȅʝƑԄϋɶrüқǰʑ߬ǋ͸ͣӰɫ࣒ķೠʸŮ@ȣÝʔ±ѴڈńǚʶКɰݠ|ƚƚنƈȱނʵҰdТơźɏԞʑɺ˙ٺLþϝ¹ǵČğTȻhÇE³ƋõiΓŇǝgĥã¿S[uTuvańŽȷYƁǱ@͑ôĻ˾é̙̯bťŒͧĴ̍CçƱCğHǻ|ƑYɎȢ{˄Ăą¸ǳEƅwçȋțȑȡЧщǈǏİķب࠷ܺ́j͵}҇ΐY|Q¼±HwÁRǕQ]±wcƟܙƥÓőĩXʃţ»{ƛuŷamÍ©McT·ĝqʡyë¯MĵÿؽƲŹżġĿߍƜ΅ÃȽŘ௳Ȧʣࡒʵ˞ԡ`ଝՙїǈҕ|࡛ԈǹʘϏǪχʻɤǻԂǏŨRǊǙìsɰЗтćɸѡƛѷʰǒŜȅé͕̻ƃËēȼ˅ưIѲ˥Z@ͰØǚÜǌīŢĻŸáÀƵʰfƏOҩ̰ǉĄálƻNgfYª@¸¼ôJ²ŁƼԻҲŪȴéɊĤŘOȌȲȘĶªü lÎŀşǞÈŲŦæVzė¢͡BΏǌķ˺©VD¹¾ʍ֞|ŰȃŨbɴ͇ǔȨΪŵªuϚȽҔ̮ǖ̆Ȗı֎էՔŇ"]],encodeOffsets:[[[57537,27568]],[[47222,39811]]]},properties:{name:"Iran",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ŗPģêɉũȳԼұłƻI±»ó@·Z©heɞyǊăҪ̯ƎPeƶʯâ¿ļŷĬšÛǋ×Ǚ@ͯ˦YJѱˆƯǺ˕ûqċfǳìƅ{Gy˭ĪзąȯϳŗǅÙóƋƍƧ൝Ŋ߉վ෗ਚഃۀğ˻²˗¢ҷèŮĴĜǥɣ࣊ᇴࢴǪ˸ƆܸµزĶŌ̺êӐјĆhưĸĘĦTĀÌSžӪşƊGƪúĐWgbMųä×Ü¢ǢĲÂE¾Ooʎ֝º½CªUĸ˹ΐǋ͢AĘ¡U{åťÇűŠǝĿkÍûķ©ȯȗȋ"],encodeOffsets:[[46733,35404]]},properties:{name:"Iraq",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ߔźѫɋΜėŇɋκpåǱʴÈҤĻƿƏǦˍϏʙ˹H÷ɃϝƣݽťڵʻধŷŋƫקŇಙŲʝŌäĲȥÉуǨఽį¥Ɍǈû˔¢،˸ӷÅĒǜ̢Ĥџỵ̈ɚଏ³ǧŀਦƶݬDĦŞؕR֒ɂࢷŐ࠹ơӛİȒø͢ÛȡȨАćˤÐҟČʶɅŘ̀NeƂθǗ̠ƃƤGƊуŤϴ®ՍÔƠúѦBࡨͻʅʅeѼϧ˚̶̌ÅȺѼ׾˧ĚʶҌĞעϙŽΤ͠]̚ƭͮȨ˄Ý̔Ð±ɂʔÜɜQϊʉ"],encodeOffsets:[[-15916,67818]]},properties:{name:"Iceland",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǷÿGkcȋÉNå¤açjģlŅ×¯Ĺ¯ƫȹWqsPclMÐlØkÜÉɅŭÏȟӐĤБྣÍßփบĒìDÐƨƎ£¸NPǎʮβীʬOϨ̚ЛŁǷ"],encodeOffsets:[[36647,33521]]},properties:{name:"Israel",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Бٗǒ͹Ƶ̯ԣĢ̝ʲȥEء͆ѽĬǣȎʤ̨ƚů͜Ƃкǯ૤Ơ͊ŚàÏ"],["@@µċ¯ŮĦ¡"],["@@ãĪľç"],["@@Ƣ͏ƋșåएыÔ÷ɳˉȗɼňՒŝàẦɿ̠ɘ̈Áր΂͚ȫbœ"],["@@rŧʍzɜĮ"],["@@ǰFgeqË½¥M}PmlYúLÂǁƘģģýûƸΟ@޵˙¡ǡʢɯɳȷŮлঘշϒݍѾϏՆʻ࠸ɛ͑ႮܛьηįͱɟĬǳ˾Ͽ¼ǹƌɃͿׯӾ̯º͍ҵǕÑ͡Чϻ˩EßĄȜӢˌŪ\\ƴѣࢤدȾEȘƳǘΧÍĶŊΓêʻΤթPϩȎ࠱یзĒvŪϫʹǋ˝࠘டЌٕҝљğŨͮˋuΙǔþа̛ȬόƠÊŢ̗̠ȘƺkÖoǖ֒ĔöȬŴîÈÀÔôǗ̢ƙP_£ÃƨƕÐ`ư̾ĎɶĂ]zBĐƧ¨SºAŰ¨Ćl°KĒĽS¢Teŀy¶xMnÂv®¦^¸LȠÏi¸W´PÎ ŊvSĎAĠOÐ«ÎeĊKÈPj¾ÐÞĢǂNĂ^ȼWͦĆxOJ[p¥Īċ¾Ù¸µú}ׄċƶ]ŜEǮgµ[×ƍćlė"]],encodeOffsets:[[[15951,39138]],[[8683,40006]],[[8485,42025]],[[9864,41864]],[[10645,43887]],[[13744,47322]]]},properties:{name:"Italy",childNum:6}},{geometry:{type:"Polygon",coordinates:["@@ފʱŞȧ˃¡˟ĞùĿƧíƑƁĲͿɵʞʛĪļƈ˾ØԦÃ"],encodeOffsets:[[-79115,18901]]},properties:{name:"Jamaica",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǻ¯`øǜ"],encodeOffsets:[[-2067,50413]]},properties:{name:"Jersey",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ůįYӱŭɛÇԱŽɹÍɍÃ࡬࠯į³ǋāgcacãƗ¿őka׵Ň©ĥƑīƟǋŝǵŻऱŸnǞВྤĸْiƂdȌHlǸĀӬ̇ϒÏ࿦ࢲɤࣉǦěŭĳ"],encodeOffsets:[[40085,32896]]},properties:{name:"Jordan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ǩúĆƐ«ç"],["@@Ɓƙ©öǾŶQÑ"],["@@ƥS^ŜƈŇ"],["@@͡ǭÁʑų·ɊԌǄuƂǸHȕ"],["@@ĉNPƜúƩ"],["@@ïåǝĺѴɤȥʷ"],["@@ƩDµļĠÞŪÛiŁ"],["@@õ Ǆ͔čγ"],["@@ŝȂ®ãý"],["@@Ĺ\\¤ɺƄhǛįġ"],["@@ȔōǛwƮ"],["@@áĤĦƲÔŝėŷ"],["@@ķǘƺßř"],["@@ķQĲàğ"],["@@Ѯ@ƅˡ̠g£ŗżȡ˻Ε˕ࢻɡxƱ΋ȭø׈ķXĉŽ͓͙Ĩ­İŮxŴőƘN˒ϐѼţ¦Ʀʹ̄ģÓ¤ɇŶD\\ŵʉÎʉǙ¸żŭˮˀǫΉ͔|ĜȠkeĬҐǔĴǚȚĀȦ³Ȇɥ"],["@@Ʈȣ¶Ô"],["@@ÿlzƨļµƉ"],["@@ɼ{ĐͿ̣ǳǏ̡ȉǜ˛À̅ŵʷѣơ÷ƋTÊŠǷ\\çќ͉÷Ԣ̌ʖ;ɐƋ͜ìlȐ̄ĖΆû"],["@@č»ÍĄƜ"],["@@ĝïƁü˲ɀÑɋ"],["@@ıbƸˈÅ˩"],["@@ōqĪö Úŗ"],["@@ĳPrȾɈȦ¥ȫĸSȗȳ"],["@@Ȑsֳ̰γưܥÛˋ̇̕á̟̝ÅūǃࢅΫݑʦыΓǷđˡѕɡc͎ɪʐəÔƹȽtɓǛŲȋiƍρȽȁ̘Đ¦ƹČѽѹթÌЙçǴǆʽ¾ûďtʬý^ɫ̹̈ȳuġѱū΍ԫȃÙȱÈ˙Ϣwʀˆˢ֧Ůб§ɹƿۛȋС±˿àƕУͽǶۓÛ{ʊĬŌ̌j೎ईࢶGৌȬŸȅ̔mȈĔǊƊẘՊՀŪՠЖŞΡͻİɽȖëɤǖڲɢӆՂДɊςڂɚزÏȘɅÆɨ˸ó˴̜ȼÂ̜ʄOĸ̫ǀĢƶ·ł˖ύÇDĪŔɄʖŏ"],["@@¥ĴńÝŻ"],["@@ų¤ĀĐŅ"],["@@Á¿ǒĐŏ"],["@@ݠǁռͲȕ֑ǚ̡аìމ͕ߝĳґϳǉΗ୕ӠύΝǣɵǴȓHŻɟۘЧŵÉ˷àɱʟʥí÷ŤĦ˰ɭ̬rʮӔ̼̊ظĻȤČ͘ৠƫ֢ìȶɪĞߒ۵߆ҭ"]],encodeOffsets:[[[126862,24863]],[[127277,25105]],[[128455,25337]],[[131337,27293]],[[132095,28387]],[[132560,28886]],[[133758,30990]],[[134103,31127]],[[133511,33202]],[[133205,33004]],[[131754,33571]],[[132175,33629]],[[132600,34021]],[[132911,34559]],[[134323,34410]],[[135441,34760]],[[132383,34943]],[[137583,35079]],[[137577,35312]],[[138172,35112]],[[132491,35179]],[[136572,37073]],[[141665,38730]],[[144619,42366]],[[142829,43091]],[[144687,46203]],[[144459,46421]],[[147277,45176]]]},properties:{name:"Japan",childNum:28}},{geometry:{type:"Polygon",coordinates:["@@ķȤøÍŖøĤ£ǲ»ǢŸłEŶRÚ^́ǋɉŋĵ½"],encodeOffsets:[[78898,35953]]},properties:{name:"Siachen Glacier",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ǁèĪŨÑŏŪÿ"],["@@ѝɑѩڥťȉЁŌ։ƟǅחȝĳŢճCࠣǺ׷೹ʠƝ÷ʣɋĀˑ·Ʌǂ൏˽ƿĻԢƙŃԯβ޻ͩıŰƛ˯śNқśĨűĢγ½vȍƴĀbᅛǔ˹řUӝTûR§GěđՓØ۳˰˕ĝˣŉęʥyğÒƹåVă¢Ϋ´ďÞǭɣâџÄȷ¯û`Ɠ£̧ͥ®ûທەӍңWɇɿȳźÆȂƩƘਏcǯۆЩVúࠢʟħʳζӹͼϳƍਡÞ৻ŗࠛݸᏟঊᓡһBᶡҗsӣ֚؝̶ࣃƿҿ̯ĒࠖוĠʁʐˏ`LʶЃװнŐáŖƂƌ॒ý҅͠΀ξຈuΩȮ̤ԴÅ֐ӱŔ́Ƌ߭ʀકѝҏÛīƳׅɦbŶͶdڕ޸ֻĄǃÁȑаͻưͤˢ̂ȕǼòˤҒ֊ɶjՊѩΤÐőֺזȪƦȚؼǦҠτ̶çƲƟ݀Ƞ̐ȑ٤@ڪχΒщòЎ࢚έڲξѨβƧͮǞѨwѲ̳ӎ×ÐŅʐöȸɦ̮ƝѤbϔƒƔ϶ࣹ˜ιʂ߸ͺȃ˶ɰʠ࢈ΡȈϯº~ƄʲÞұĊɄͮזÓᒂπՄ͜ʄᖮ̔¨Ƹ٪Ȕ৤ȏҲŤϖץý͗ފMƴĶɖ͑ƨǊԜƩМîͿ˭ĎɓϞƠвōČƆ٦ȺǼǐ୴̒ƵʟȝNÂŇୀهᅂᐳπƞrȦʌĢͤđ±ȇˈWàǻࡸWɤƒԄĐӴȁ͆҉֖ƫȲϏߖĭдɸ£ǵגБ"]],encodeOffsets:[[[51389,45932]],[[89419,50264]]]},properties:{name:"Kazakhstan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Κi²ƿk§mŽNţɒ˷ݒ³ȾƁڒяŢćŜ}Ȑ[ƀIݘťƎĸŐƪªĆޢΠɌǹǚħŶDĠdɌ`ŬAɩ͙ɭ͛̓͗^ᶻɪ̋ƬȕĂĻVĹɟȿ̓áPȷɇɧΟůęҿɉ˛̵ݵɥǷഩ৐Ϟḭ႘নǾδɀɚÒƦˈǞƬЌBŤYǚå̘nÀϩָǎO°ǌGŁďäj´­hſ˦ǜǘǠǜɔɊȨȠǦǞƸƲ¶Ņ"],encodeOffsets:[[36174,5494]]},properties:{name:"Kenya",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@·ƭé¬¿¨ɛ×Ūȓ²\\Ú[zl֝ǫʡǊৡ¿«ʪúz¨¸kÈTIÒE~мƴՐȓ͢ɾ˂͜œςʌɐWZŴǞ©ѺʬЉʛƤÍGåsuXKþa°£\\ÁmÿnãPiĮÅĒ^³tôwO}Hŕ»¹AáWǥ_Yʁ|ȿÔŃƨҫƞ֨ϬƦ ǒîHpgjçā³ec­ų̈ͦƔ¤ü_ȸ°Ͷ½ĪEɤãǬĒÝά³Ą¡æUÑƺzĠĚʦˤŊ˖Ğ۴˯Ք×ĜĒ¨HüQӞSŘV˼ᅜǓÜġþ»Ôµ¼ÁвÏŲġŜħŉWaeUʳcÍg×ą࡯˵Ǘččãa÷ȇǥƕsšJăřԁ á_ëīƏ¡icãíćŅë¹Ý»â͗ŅǍFĹˎDɽŭŉuęGśÃÅ|ċΙǇƙƁcÿ«Ã¯ďy£iyH£ěOy¥ěuë[ƉXéc§}ďŁYϿr","@@ćXÍ`]@LgÐÓ¬Gø|","@@nƀů³ÎeFÁìăAaå¬SüC¨R"],encodeOffsets:[[74384,40332],[72361,40812],[72916,40850]]},properties:{name:"Kyrgyzstan",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@ұȲʃđĮƴȆǃɎƭȍǛOwҠƩ˂]ÉǓ͐f˲ɋȴƍݞǮt̨ҪʒǐೢĄʜǛ¬®²\\TFwl¹·ĖùƴǪÏüĝÖ«ƌE¶ņyàûŖsä|\\Ƃ`t`ôSòWü¼°Â|{uÈÔ««iĀ^rC°ÂS BƸƨôPĖŢƿӟɰׁŉ΁֓ħĕƱљ˙ʉ}]ɗͣÒŽĻJ˹ʰɍFȱʻÎćł̋ùęɧÈBǭǑƕΣĻ"],encodeOffsets:[[106933,10662]]},properties:{name:"Cambodia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƔĭͷƌŤ¯ÒĊÝâĶ³iĥ"],["@@ÄŃőÞÎ¦"]],encodeOffsets:[[[-161118,1901]],[[-163163,4018]]]},properties:{name:"Kiribati",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƉöƠŰӂ°yƣҝı"],["@@ģÖȆĎġƣ"],["@@ƑŘÒ ĀƷ"],["@@UćƳvŞȞË"],["@@ÿ½ƁňƮŤÔǭ"],["@@IōýfWǘĠï"],["@@࢚ೃ]ࡍƚCŹҫ˽̿ӅkÉȗ΁Ŷ˓ÉBȝʽĐÚǓŻƋŵêÖǬ̋ˇţÖȇǕɣ̠ɖrÌńơAŇˤ˔ΖĿÜɞȌǳʜ«ѸʳCiä˜Ȣʢ·òĽĘĪȗɊĥӴϦфߖr˰ˆ"]],encodeOffsets:[[[129359,34021]],[[129264,35196]],[[129201,35565]],[[131140,35642]],[[131831,35634]],[[129558,38643]],[[131456,39551]]]},properties:{name:"Korea",childNum:7}},{geometry:{type:"MultiPolygon",coordinates:[["@@āYĉǀĔưƎǑÕƃ"],["@@٫SȧϨݵĚƌƎÚôŘǆȰϴиĆĠiȎÿvŭŚəƣȹȉˢ͢ڿ"]],encodeOffsets:[[[49434,30336]],[[49606,29228]]]},properties:{name:"Kuwait",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ϤЋâȓÞDxödRŒŁĉΑÁȄʻĚ©Ɇ»ƠéϺȾĀżýȠƣ§û­sÑrcĖUĺJ`ÁlgŲEñAÃħĩYÉ·çŽŕOʉØǓMEe{çXå¿ă¯sI੊ջAµĵxù̀Ɂ¼ÝÎÿĒȷˆ˓ɚǕÄÕþšÜ£pÝP±ZƛĢƃêªfUıϸʹGû}ƟéoĪƷ¸·Ȏƙ¶å¯gÅÑ½ÙÝrÃjU­Jĥ­§ďOóƷƧAT­ÁqDÿ]j¬Ó¬Çv{|ɵđós_Ɓ_{[tãþŕxßµŅƋFÕ¬ûĞǩÐƳĕú¸mºCx¼lĊ¤ä°®¸l¼tɆpöYĠð@ňŀȚpĈDÒeȉŊNƄÙ¦Ƴ²ďÊȓʲËƴMȤ`Ǌ´ȊÛƊʽȦėİŃƢŭȒĉĒ§oęlƍÆšķJß]EauÁg§µëğȳé÷­JygK`eĀÿhę¾ǡƂNÇñóÓ³fóŧĻËQQšÿȷȁ¿eǑĔȢҺMŦñĶEȪ҈õ̎pƆQ¾חJīǠĺΠǝǪċßÿsXPºN²°ǼÆŠÜÆèzƂB¶IhËJw^ÐƔɒ͆Ǽ¸Č¶kĩÅQÃZ­pu[ƌ ĊFƌëpN²¢bPÝĒrʔGƠM¤ǱΪnªªªŔrRlIæđƸ¨Èu"],encodeOffsets:[[104579,22917]]},properties:{name:"Lao PDR",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ϧ̙ʫPҐ঒ˠ͌΄z¯ƃƦÉäǯʳʝòï͇ñ¤ƕƓŹ"],encodeOffsets:[[36730,34235]]},properties:{name:"Lebanon",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@àūìЭɛίʨƟʲĀ§òǑÒĳĀWƴÇ°ʓƻՑV˿|ȅ׵Ȫܻ϶१ࡰ࡝ԢǹȀȪ˜͞ʲȘȄÞʾ®°ƂÀÜʠ¨Hðê÷ʂĜɜǇŰգÿʍ̄ǗȒȘΨƢŉ"],encodeOffsets:[[-8690,7740]]},properties:{name:"Liberia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ʡˏĞտɏБɶࡥ@᳿@᳽Aေ࠽M@нủཤ↏Ⴒࡉϕٛ̓؟Ҽౙ˴ϯڞۑȦʑÅşĘɉخҫؠɢ͢ʠŕךƘϤġୢе߀ǬĪ͂ƄņżƀǠďֲƈȆǜ¨ŐǌǾŶƮüƎìǄöŮÌ~ºCªãİ@ŞLĬPÌǼŸÁƀsϼȟЊµѾĨཤѯѼ߷ᅀн۶їϢűӸȈͰЌƻܖǐʹо̦ࡠ̚Ҩeݺʥ`ʋƲı۾ǡؾsɮˡ"],encodeOffsets:[[25755,32415]]},properties:{name:"Libya",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@³ĕķŰƒȒZɫ"],encodeOffsets:[[-62356,14154]]},properties:{name:"Saint Lucia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@|ÙſŊń¯"],["@@ɪaϬίѠܣŪ×¦ʃϞܟY͙ȋЍލϑϧ~ƟŦȣ֪ũ଒ĦɵŪ݌ƜʾY̰˼ą͏ƚÁƎ"]],encodeOffsets:[[[81792,9268]],[[81902,10049]]]},properties:{name:"Sri Lanka",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ɉkɛ̓Ñęʭ͝˒ƛ˴ŗˆȦĚψӢȊÈŀĀŰàȪðĤlZ֨ёîȕĹ±Ŀŵőǿϛǧ"],encodeOffsets:[[29335,-30849]]},properties:{name:"Lesotho",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@µPǸˤƁ˳"],["@@Ù~m¦xʁßÉ¹ÅkƩXuĵkoϙçåx~Ս×jǠë¶ñĥédJwfépÏLµïŖHÐŠʸɏǀгJ۱ǚDǆƧ̞OǮO ɦĲ˶ńβüڔUþ_Ú³ÜNÜަđڂŒƖǓԀăްοCqÛ¡ĉ¥ÛW{qƼWâY`iƥţʹR]ÙķçŇ_ėwŗǛTŅMuyÃÙ«éiTiŪeÀĥǉ"]],encodeOffsets:[[[21461,56606]],[[26187,55440]]]},properties:{name:"Lithuania",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ţ̃ƍ½[}¿Q©R}nyZÝ`YĐɼ|¨¦ÐĠîĨYjNEMïz»È·ÊyǸõ"],encodeOffsets:[[6643,50994]]},properties:{name:"Luxembourg",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ӑ́ѱϫƍޯπӿĄƕǔځőʵÆԯÛÝMƕÔړV̓åÝU˵Ńɥırوքغۚź؞Փ̢ıؠɼ¹ԶIĄոžƌ­͘õ՜ˍȠÏθàȄÏŞYŤCÎÿɐħoTO«Ǉ̋Ɩl[ĥĬşĄ¯P¸ĻnÑT±­į"],encodeOffsets:[[28824,57491]]},properties:{name:"Latvia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@řŰƒ࢖Ɨ˲ϩ̦Տۄ̥ĘlǨþ®_˞@˒Ěڔ˫êFמƵTЋːǓĮ˟ŮåƄ¯ÆĕOċUïǨī±ǓcS͇ĔŹZå÷gFGł]fFƿËF¿\\ÕÀĥ£qÝĉÑġSí½·ėµÏÏNŭǁg]«"],encodeOffsets:[[28890,46542]]},properties:{name:"Moldova",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĥƷǘ͠ñǧ"],["@@ŉkkŀĲÀƓ"],["@@Ͱ՝ʢඇȼչɱәǁƄŃ̂ȓÃƦ߷Ó˟ˉΧzփīο஭₵́గ͋ލϗ̥Ӎãճ˩ʫOছӚ̫אª٪ϧ६tϜǰӜʤƪԖ੎дǭ̔KˬǋϞ»ݬϊׄ°Тζ˄ȊĴïɌĐƮϪÜȰƽËǰŦǚϼʚƂǷMʆɔ͒Ħ¬\\ʝʞ̺ǆǇʬȈΆĥź¶ŨĊÈǺĻҔϞļάŏ̲Ūɲ̠˨̑"]],encodeOffsets:[[[51135,-17308]],[[49503,-13684]],[[50728,-12730]]]},properties:{name:"Madagascar",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ōAɼìŭé"],["@@ƾǸöƩɳ"],["@@ĕ¥ŘŘñ"],["@@zĥƉǆŐß"],["@@ȩȴŘиύŚʝ"],["@@ĿƻǤêg"],["@@ƵĴɞÂʣ"],["@@Ûȣȡàú̚Ŝèȡ"],["@@˹Ɋùɠ͖ɩȿ"],["@@ѫ೑ƥཉâͻϖҕÿʓtʚ̵Ϯӊહؘ܇Ɣѵјҍţ^ʚŇÿÞҎÉ͒ƽ˶̇ނɜ֘όǨϼ¼ƿ͊ÓɒƘËɶÿUזϲ͆ǜǼŜࣀ҄ɠଔʜϬَƁÀČƱxˬfǰƝªɩŻ̩еұi̳ȷȋéȄ|ȟșFÿż|ɕۻĵƟƣɂr˄ɛ̯ȑuʃЗ˝LyſໝBGӁǟDǵBθ͙ɠƅ¨ÝtÇ@¯¸Ėy®£@÷SĉZ÷ÙCƳ@ɵ@ϡ@ʫAȃ̭ĿǩĕƥĦȹqs]ÛΗඳ౐ϩȚ©·ΦǧևƶØĪǟyËŎƋšȆË˭࣡Пԁ̓ƸӍ¶ٟ˴ȯȖޭƺঁКْ࣏ٿĔدɚЃцࡵИҗ֖ƿΆΆǌÇƦƹ²ɲʼz̸ȇņǽ̴H˶ūʨ॥ੈۣӺȨĥ^ňρłˣϼȖ]թˈùżȭ³ŤɆʻšǁŔʲȎɮê«ƅʀǧƪɫOǃ̈́ηźǷʾÀˎӻĔ࢑ࢪݫൎXѺӝƖŕǲǁÒǛĹڅͦŦɇýЫ˨॓ڜջɌχʚŅĦʉȈóŘԉͼʩϼ܃ƎćăʤȎƟɺޗԖޟxѵʖȭÂȪʀƑ̆љɌƳÙˏѕɟ̙װ૏ߜĳ[ɩʢF؜ʵբե̴œ̦ĭŽ˛ÍȱȶԓɄāǴϡʰĚϼ·ɨöCąȜčõȴě^Ǿаݛިإͼ͙ࢢȟƔȜˡ̦¹ƜĐĮȑŬɽҊ፺ƴġǧẘষᛠJFϚ๠WʢˉচگЌ߿ͦʓߊ͙ɶǾɸҊ̄ĴۢāּԁϪܕڔٻ¤Э̊ԡผәȖø"]],encodeOffsets:[[[-93884,19126]],[[-89026,20791]],[[-109058,22130]],[[-113220,25604]],[[-114746,25135]],[[-113766,26646]],[[-117934,28744]],[[-114895,29702]],[[-115871,29750]],[[-99477,26585]]]},properties:{name:"Mexico",childNum:10}},{geometry:{type:"Polygon",coordinates:["@@аˏƖɇó͹ōI·ŹķġkʹǅwǵƱŷ¯©wԣeɉàȃ̂ÞԎƆ@¬ǔʂĎȐÑĒĶƠxB@Ɇ²ѼV"],encodeOffsets:[[22881,43330]]},properties:{name:"Macedonia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Nᅫħ՛ɹտ˕ǿ_ŃύÒ·ïෛÍ̑ʑؗÏϟŮѱWʏȑޣ̧ŝʍЉºʋɷÝʫʡV­ͅȍćΛȀǟăƫƿĐ˙ɇķª˭ɩɗӵȻϝȫ˩ԭ\\řMų©W¡ŃĥéNķºEd¤úD~¹ˌțƁçtõÐmoS±KÅnĵoɏMÇǗ̱ǔɵòˡɝaƆɓƐÏъˡfɤ̜ΡʴHȾȍЖ̏Àǫͫȍѩƶιˁȉʴ̹ǅǓƸĨǦAҌȵάǑ­ȇˊĀȰ·˦ǫɄ«̎ƨÁpjºɘԶìòƤŀ WюЋɄɬي£жîAĮl¢Ú°`ŵoẀKŸڊűƆĳńyȬyȾyȾyȼíظǙฮ̵᨜íظ³к{ȾuȒʴ@ˠ@ˌBی@ᝀ༷᣾ၭjʅϐəØƩௐѹŀσŕʵȤĭܺƀ"],encodeOffsets:[[4330,19603]]},properties:{name:"Mali",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ŉíƀǸĿ"],encodeOffsets:[[14916,36714]]},properties:{name:"Malta",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ã±ƤƤğı"],["@@¾ǳǅŬňÈ"],["@@sǥÿz·ȌƬ"],["@@¥ưŦŅÿ©"],["@@ÁģÁÊń"],["@@ĽũřC˼Đã"],["@@KƏɤ¦ē"],["@@ÑHĀĢmĩ"],["@@ÅćoŪǴǲĽɓ"],["@@ā¬¾ǘɃ"],["@@ǟƸɎC­Ƴ"],["@@ȚŉąũKĥƚÐÂ"],["@@lřčǒâ·"],["@@ZăĝɐĄƋ"],["@@·ċͅǻõǉi}]ÏxÌIJgµƁAçyÛÅÅş¯ǻM±ĳÀ£ÃRƛĉɗxǳΉ§ƃ˛қë̙¼ǕʏÑܹ̹ÏɒȑØб؜ۑȆթƦò¬ÅÏƝȍŋֵ̭ƏVȑ̲ԭӊե[ֻʀЛǮ٣Υ֧εύ¯ЃŝŽćբǮʼÈԖŔňȫf¼ФąjàĒđۂ̿ی§˧ÆUϖǅЮĠ@ǧǦďࡢŁŨŢҤ̍ƧӔ̉ʲ¶̵ťˏ˫ǣȯɚŖ˕ҽɳ̽ϑó˺ƛɫȟO¥̬șɹԜɗΗǽß̬ಬΙ঎ÚRƧŸqͨĭ͙ȉńǳ˾˨ŋƤǞ͗ˮĄŘϩƂĵǱŅǼÆʬȧǙÀƎŽȈYɣͱиŧфŶŬʨőƊUЈOĪźB¦wǌďĚǦúŴé̞ŀˌŪ¤b ޴łÛȘf͢œȀϚìŸĮƎǮϰųİĪȲ˘ʾpŤàØ°E|kjČQʄŢƖࠪԶԚƀƍŰcD¢ǝɶeÚâƸò¾ʚȆĖjŎÚČĚƀ¾Nϴ˥ȤՕżĚǖëôڋ­ԅķĭüǫ˓ɷǅ_ŏɹǅç͍Żā©ʃƪəťˋծǚԼVƃǻžɽηҰĹöğ˃۫،ćpɧǨɷϨQЌʄºƿ"]],encodeOffsets:[[[100539,10172]],[[100567,11216]],[[100920,12027]],[[100881,12191]],[[100420,12688]],[[100776,12901]],[[100675,13414]],[[97081,16199]],[[96745,16329]],[[99917,16644]],[[95940,19133]],[[95964,20028]],[[95736,20370]],[[95243,20403]],[[103567,22086]]]},properties:{name:"Myanmar",childNum:15}},{geometry:{type:"Polygon",coordinates:["@@Ϡʉ֢˯ʑÉTǳɳÑőŸ̽ϥ¾ʭݿ׈ĠæáŖmǈb|z^Ŕ`CĆ¬ĚÚ¬ĐÀìM­¢NTÄąŞV~p`®Sª]TªP|Crë"],encodeOffsets:[[19680,44493]]},properties:{name:"Montenegro",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ܷ˵ԛӉߧˋēcշkџ୵ƅݷʛҭȇįå×Å¡ËiНÂ@Ȁǋʵ£ʉ՛ɊлðΗÆƷ¸ˁʆåpé^͹ZӕÆε®đNџğ቙ȆۏÍѳҲ˫֬ǙðrȨՙÖ৑ԀؓúǫqŽCɁvţϏP҅Šơkǹˢ˸іIÎ£ÔĀØВÙŔÒÏ~ëfǿʀÑȂßþa¶clĹtóÙŎÍR¡ái­FǻƬçrγuÛ¢­áZſÌę¦QĈ¥ÈēhēÌˣêäŸȓìõøŊĴ³äRUĸD¬nòÞǐφǖâXroUĐzÐ~nÂŸ_â¤ĖØdSƼΆǆԐňº ɘĠǲÈVNØC®̜ƠʦCôRƎƎÒ»ǚī°I¶xÌÞVîWƌƣ॰¡Ĕ˫ɔǕ¼H`ǲ@ƴĝΊoҘòȾć֞eȈŵŶVȖƜΐĒȺʎ|ȚœÇ£ǡ˸ɸоҌˊɆˈࡺ̥ĨeǐMȪGÊY܂ɕǄ^ɀʔËH«cTĝµjȃĐģyŏࡠ͓ˢ¿ø`ânɶmરːۮƛŴ\\ǦVŘ_ȖĭČġĒ­øĪEʆGʈ¤ʙψɏĬ¯üeԼXǼÚu֞ċȔ¦ʀÝĲp̈́ŚŎªþ[մèΒĞǠsĞbĞŠ¢ÜÔĖżÞńÊņÆ؊ɢϐɖăɬǃøÄ_ƆSňKàtŌǪºèCŔǚµŎąܥ਷{ĹJğUćū¿ĩ±üɋʀƿĄræàƀÌðD¾_ŔIŜtĞJŠa¨aĲ}ǺŝÆ]Ζ˰ؘGÎļķÎÃĶŘÄՊчƾʕƻĳkïCūnţYƛrǡĆħt­[É¯×TËSƧXă\\ŷïWˣůǍÐĝC_[čBo{Ћvʝĉ̋ͷ`X¥³ѡɿѥËȱWƱƭ{şƿɃŷñáǟÙȋŏÅcҍÄ˽ÖğćĀó ʣJãfœcзבѾҫ­œ"],encodeOffsets:[[114564,44729]]},properties:{name:"Mongolia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@èĞ¦Ïō"],encodeOffsets:[[149250,15497]]},properties:{name:"N. Mariana Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@MˎÃȨfɜĥ¼఺ƽӌɇΈɏࣤŢĒࡂࡄÛƊŜАр֦ǷԄÔʈųƎʘӦĭఐÒƞࡏʄס;ڡz̒Əո᠂ࠒκүبŤŌơחʛҁʂЩ;χƮśƯº£ÞGÒZdlSʐ§ƚ©ÆU\\ÚƺĮǸȬĠ| ČĐࣈuzgǊƁǦǛɞħŢŅƌȝɈͷǤÇȆEĜƹߎȼЌ®ĐƖZŐEȈHȤQðkºFÊhżŊłCƞéþÑ`½Ī֤ŞͦťƚƸĂǐʊӒĳиȸۢɊƠüЌ̚ŰǓĿēĢÅǍуň֟ЧĀţť̇ŎCvख़ĶûÍ˗ňİÎʟȏͭũ֕ߵǋÍ®šٓҋ߃ɧݳйʱɇ҇ٵş¨wţ͍ōݿۍʣĤĚĵ§յɸ˩ʊ܁¢طÊµÖ˶Öŏ׷ǣۭƞu©ȭлӭၽ۷̷ћɒɛĘƺkƙӟEe҃YŹzñK"],encodeOffsets:[[32884,-27483]]},properties:{name:"Mozambique",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÃćĐŒƀ}Ƈ"],["@@ŷډṿL³ƦSk£Bĭгíً¤ɃɫэЌʯǙËƱȽűǅ¹oiʭŦ˛Ȱ̵φʯЦ̅ĨĥqγζׅĆٷǉЃ ǝ˝ěmƯá@ϖÔ˄ζઌƵबʧ̞ǬŴŝȠيȁΦǉeɇϞĹ¥ȝ_þČβพD६BϪBȖ@Ȗ@Ŷ@QŐOĘQŢSŢՠ·˚ĸưŖöƀĔĴà¾hƾx̌ŲNц@΄@Ҝ@Ŗ@ɮ@΄@Ɍ൞@޴@̼@ƾ@Ǡ@@Ī@Ǝ@ȌAȎ@ǖ@̪ἢኑۋ@ˋA˟@ʳ@ǔก̶ᨛǚอîطzȻzȽ´ЩĴŃŲƅ"]],encodeOffsets:[[[-16766,20180]],[[-5488,16674]]]},properties:{name:"Mauritania",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Ó~ĖÁ"],encodeOffsets:[[-63640,17143]]},properties:{name:"Montserrat",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@˩¶ĈȲȮǎŔȇşɭ"],encodeOffsets:[[59035,-20976]]},properties:{name:"Mauritius",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ŏFƕYYÍȻЋƺߍFěÈȅ͸ǣȞɇņƋĨšǜɝƂǥȃďࣇċğ{ȫĭǷÙƹV[ªÅ¨ƙTʏckÑYÝH¹¤ ưƭŜͽψʁЪʜ҂טŋƢاţЧՄƕËƷːŃĊʠ̬PѰҌ̔ƟóǐªΠÑɰ\\Ĥȸñʲ̴ʤĝƌ_QĮǻǔtì\\üďĒďžŷeÙǸࠀəĚƦ˚ȣȾёĈҩ¹ʍƔɕĮ« Ínī"],encodeOffsets:[[35799,-11856]]},properties:{name:"Malawi",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ßnnˤ²̑"],["@@û²Ėŝ"],["@@ȡa¸þƪÛ"],["@@ćW°ƺþµ¥ī"],["@@ÐęƥăćžǞ "],["@@ȪÏǎʹӀϡˌҷpྕ̼̑΀ܛ˭ŕrŏǰTƙʟIǷĵĻǼՉʺளࡼJ̲ӭ״ä´Ʊ̎ɫഢȋϪŤȮìŏΆ÷ĴǷưEÑЅŎőϊɪĺŇǐ ȒΖ"],["@@ЉƖӯջmƳŽȋঃǩQŇŋɕĊģͣɭɩˋѹԟcɽǕԭǖÁŐϻOʑĵěʝɧōשԃǁ܏نīʀúŎȢɛРܾ˕ǍƌȪӨ¹ȪȢDÌ̤ఎΚ޾ࣨŞ̊Ӹүƾ̘ÿ˚ɾƴäѓƸųҠȠưƈœːƺǄŘÏŘæܺନĎų¿ȃ˺̨Đ{ÄəˆƑìƋ¥̉ţįфƚĦǅƱÙå͊ČȰǵՆƯĕůʳŗշÙƇ̈́˛[ĻґŇʽþĹơ"],["@@½«aŨǚüFŋĿ«"]],encodeOffsets:[[[114063,2474]],[[106723,2798]],[[120714,4287]],[[102696,5422]],[[102245,6621]],[[104552,6393]],[[120397,4271]],[[119954,7341]]]},properties:{name:"Malaysia",childNum:8}},{geometry:{type:"Polygon",coordinates:["@@ݨƈϪɦ§Ɏȋ̋yͅșʋ|եν͋ϰስˍJᵥࡃFᙵ@ᲃ@šυĻȏƃÉƙë܍¬ܧǂċǒVȜƝŘōĐĻµ·ùmŋµŇŝíؓնͅӤǝ݆Ɵǆŉઆ˯ۨๆࡗಂʁؚ׭੐ֵިɀRфƈnĤ¸ǘĘEPǄMՌȬʠËҔ̱ᅌfሼSҺ͹ਨ»Ҫſೠƶࢴǒ"],encodeOffsets:[[23942,-18064]]},properties:{name:"Namibia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@č_@ĈĎç"],["@@ņ]eƝŹsŷȼƤ²ný"],["@@˟ƎÚƂĴőêȰYĒΫ"],["@@ȞٌХЄл੾ەxțǑ­ʱĶಓ߼ُںğ˶Ťĕ"]],encodeOffsets:[[[171566,-23166]],[[172044,-21944]],[[171419,-21668]],[[168144,-20731]]]},properties:{name:"New Caledonia",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@ǠఉΦӋgȅ͂͗ȓωɕᠵङঃޛଵ¶ȷĎίƭEēϝȅǻĹǇȝ౉ɺЛȷ¥UӍϫΏVϛðʛŸ̡Țŝƕ^ؙ˱ɅĜщҨīJ̃Đ̅ĜÛ[­mĵáӝqѡɳǙֵʧȵ©۫ڑׂσƋp˙ˇΌźƂķȢґÇӟ΀D˖ǲMө̄ǁɦɰǿɄ®ΐؘÐ̒ʒොÎ¸ðώÑ`ń˖ȀɺրĨ՜Mᅬഞ˰൪୨␤ᕨౚ˳ؠһٜ̈́"],encodeOffsets:[[15339,23549]]},properties:{name:"Niger",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ƇoòŎÖĝ"],["@@Ɇěؚ˲Ɩ]Şվ͑ϜïΐUӎϬVȸ¦МొɹǈȞٮ̀ƮF˜ϑŎƯĄϹtƓô÷ȸ·Ďŭ¹փ̛ȋ¹gïGÙ÷ÑǉɡƏɥķηŧœÑЇɧř­ĻÍΕqËŉųȻÓýƧßŗǻ׋ǧȳÕĂŽǡƑÝ¿{ǉͭɑ¡hÕȬßẩʊǉƻĵAó^ilc oėÙƏı­go¯ġÅıƛħЯсʁܷǙˑɿƶº̋ձħŊȷěǩƚàǝșĻŽˬþ̏ȑ­ŖsœʓPļćŻǟ¼͏ʸŝʤÃƸþręCŤƴŘƍÓƽŎɎàŇĄǷÇɃ͔ί˔ࠗâɢƞʋÕāŅՇw|ȎdÈl¦k¼kæUńôK˞`xdlBçݨÔ֪ɨɾאɸȎͼŀRÀǄßƌʼk±´ŵǾFĖÂŐÄÎÆc٤ʨȶǚֶѢɴӞrĶâ®nÜ\\ڶǵъҧ"]],encodeOffsets:[[[7476,4525]],[[6968,13423]]]},properties:{name:"Nigeria",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@Ñōǥ§׷ʼɳč֥ȴƇŃྦྷེîàƊĹò¶ɺZ¦`úǺæ\\ÂJfz«˔OÂX¢tbľXȜg^ĀŊòĂ¾¤Z´íǔķPhNLdE²¤¨ЊˢŲɪǖȒǸűĞwݸȲĊĎĸɐ_wqÁĳÃöÍÛĪÝĤ΃ȋ˿Ż֩²ރĭ¢ɈƉǱØБñ½Ǖľ¬Ƶǹ˻Ȏ͏"],encodeOffsets:[[-85649,11180]]},properties:{name:"Nicaragua",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ũVĪĚį"],encodeOffsets:[[-173878,-19541]]},properties:{name:"Niue",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@£ħīɪƐƁ"],["@@˗ƭЁçŎ݂R"],["@@łù́¼ɀ~"],["@@ƩƪŮ@ĥ"],["@@ٷżʜ²ѾĿɧŀƮ\\ȣǚҊоʊՎʖhЄʸѾŚو͎ƃƑՍ˓ŹʌëʽʥÜħ܏Ƒɀ̑ËʫɭįǆĿ¯ŻʥrĒ͆ӧłƷǆگé"],["@@ŕLͤɍ©"]],encodeOffsets:[[[-69842,12437]],[[4328,52620]],[[4044,52982]],[[5004,54345]],[[4328,52620]],[[5454,54668]]]},properties:{name:"Netherlands",childNum:6,cp:[5.0752777,52.358465]}},{geometry:{type:"MultiPolygon",coordinates:[["@@Hıōɒņş"],["@@ƅCÀĤĆğ"],["@@ʣÜɨ¶|ő"],["@@ƷhВİlč˅"],["@@ЭJʀĞǮħ"],["@@ů­ȴɂăǓ"],["@@ȌܱȇÒƒӔĖ"],["@@^˛ۉ Ր˲Ɯµ"],["@@ӌˆǆȱҙȗ෽ǱॾΦÐάӆɒʍح"],["@@тù­ʵϳAͽƷɭ¶ǈʔ̠hŤǸ"],["@@ǅ{ÎŜĸğ"],["@@˃Yzńʘ`Mŉ"],["@@̒¡ɯǗҥȭջiȀǮ˚\\Ϫϴļƫ"],["@@Ȫŝ΁ǄƘ¥"],["@@ϥɡǿƌԘƠÎÉ"],["@@ʩIÀƼȪƱ"],["@@ԥɱЁu̩Ţ௒Ɔ"],["@@QȵֱĈýǟחœΟɵĵžЦʞǇǖ୧ͦԵƃԏRϟȉ˗םڳͫࣳǴѽƁލÒۉҮѷ¹@ơϋIы_ȚƟͅбඕǘ͗ӷӻŜғǫտϿɶ̷ࠗӅ¼Ʒ߅ƩÁۣ۟؁άįÂʓƱƅٍ¼ΉÙԯ͹ƧʯʮࡋŭӃ،̳ƣʕ΋µʚҩđ˿گѝİʫŽ̧ƟaéńҭŮȩӤΓى˱§ʇżČšఫۛঋķŃńʋ­ÎƔߟɖŵϜҚĕɞŊɝ£ǭŬÀǜ϶ȼਯ͓ÌͶȘŲʦ«ώƂУԴЬȌPǩЀ̠۽ƓࡍקºϘО͹èůȬіȰͻıŅÈě͸๨ĔɖǃDŜӄĴɑøĆŔɧɧӕľǻŽ޳́ðĕȶ˰¬·ȌDƘࣰù׸è௵ÈĽȊ٠ɎƦÉк¸Ħ¼ҳ»ǼǠદĩĞюĊ઻¥ǦǬՌƚѼOѮȵϹˆВƲɱƀǺĒҺOhőҔƒ˘ȝتÐƎժƲǏĀʂĖųͣŅjŵ݉ɏЧǎ࠾ײߪ˜ĠÎ˱¹ǌȆ֜Ǡ̊ã΂ȬлŽʃĂҰԼ̀°ȽŦੂǔޓÇþΈؼźʵĦϨǴ઴êࠉÌѪʮՎȏĈƢϋæ²Ǝϗď±ŪˮƐЦqʱĶ׊ƈʮ̇ĝμଌĠ࢏ĚೲԾƄ˂րœʧžӪɎѲåָ̛ѪɩԥζǮɆkįͤҔqɨľҖƭԳͰߺ̨Ģ֚͟sȊࣼдƁŀͨƦԜƃцT؋سലۦÛѽͼĐǎȜ̦¼ʽȚ̌Ũڜĭгʟ̾SáΛ՜Ԭހǻ˞²݈έֱű௫ڠīǈȽʞUŲŨǆŝψ¾"],["@@ҢūҩɣÖɬĞ"],["@@ߞ˴Aŕߛǝ"],["@@̝ļ˔HŃ"],["@@μeɌ̉ॸß˭ƃຈȡጇЩŌʊํÿ،϶஥Ұ୊İ"],["@@ܮͅ࠵ȘӁτ׊ʕ"],["@@ղMີ«ԺĬҊ±"],["@@ࢢęƓΏؔȀʀ˽৺ǥ׼¨ٺ̭෱ŋ᠏ၽይվ̵ɰטbȎƐᄨĞĳĎᛗŃ·ɎՄmఐ˒ਂүŒˬƈଫǅʢ̱ş˝ú§ʳѷť߯຅״ߪȩ̒щb̷ŻЃ͠Èɺ̄åҬĔӮěOĒஎîũਇũٺJגȗӂϢเۓѷצΰ̰Ҕţ"],["@@࢙UᅮĠओĉ"],["@@ୢǙƊ̒ҶÔĚʋশƤᓂǛ˴Ʌವч෋ǫ࢙Ʋ၉[؛üϡĐठƂႷXЁƚԎĜ߃Ěபṳ͞঒ȓ"]],encodeOffsets:[[[5208,61755]],[[5078,62551]],[[8298,64858]],[[8675,65196]],[[11501,66423]],[[13284,69504]],[[14206,69904]],[[15573,70598]],[[16139,70207]],[[17924,71267]],[[30676,71472]],[[21278,71772]],[[19718,71749]],[[20242,71902]],[[24183,72243]],[[24595,72261]],[[24004,72516]],[[31611,71459]],[[26201,72850]],[[-9168,72540]],[[19681,76177]],[[22127,80482]],[[11521,80498]],[[29745,80806]],[[17190,81825]],[[33307,82042]],[[21400,82176]]]},properties:{name:"Norway",childNum:27}},{geometry:{type:"Polygon",coordinates:["@@R¡ĲƃķJç¥ś³ſyYקmɫǐ˃ĵ׍ǶǳµõǂáVɵĉčtэɲ¨BĦ[¤Ň¦ɁäśÂəĩçfǏ¼ĕR¿i]ãҳŰmÞÞ¡\\ƫ_ƏîƧĞÙ£Z]¡qOֹЀӥ˄Í`m{a»Nÿ°ĉ´ŽĜgľĘrÂÐpļCĘÀŰîƄŮƜɪȂzjº¸Pǰşà®ƌȴȌ¦Ǵqǂƪə޼ϛάί̒ĆðuâvÁ¢ĵ®Ŀӊ̏¸MǶ´¶MUBióģ³øoǖaɤDæµæíæũ½cÎr^Ű¸æýĢ¿äĞĺ¼dÜOzq£Ƹ­ðĸ÷Ųa˨MȨÒȾ_Łأ"],encodeOffsets:[[90096,27786]]},properties:{name:"Nepal",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@§ÓėØƀC"],["@@lë̓ǲɨƔiǝ"],["@@ďÑǔŗ׿ǁɼ̐cǨƠJǄƕ"],["@@ĳŉ¸ð¼"],["@@ǡŁuĘĝoƶȫƳûĩäØƺʗzʂĚ͜o"],["@@őµƸǪ¥ų"],["@@ۦ̖ů̇ǜɺʬsɛȇ˨Śʧ˙\\ȭǘÏࢽਡԇʝĤéǩğƖjĨƩɢ±OǕӁmĮƷşɕƔŨǍ߃̱āկūBĪŅ΍էÚƽ̙Ï؛ԡ́Í߭`ǋȲ̅GʫǼƝý՗ƺȬɡëÌŸȍÙIŐѠĴǥÈǌĪɍWRÚƪ¼¥ĆʊċØĶǡƖȞÃĴǺŖ²ŋfǀʪƨĺÍ©ƐԎЂ؆İSŘ֐Ȭ΀̼ƀeýØʸ`óêŢ¢ÎËȢʾƕ`ǄʈȢƢ֔ϲɌǈӺтΰʮAǯqyĽʆƱńα"],["@@Ǔ¾ŞżǛ"],["@@ƮútđՌǑƁƬ®ɔҏƹW΀їãҁӞŷðǳƂJç؎ʾɑ˰އঔ̉آςѸŗɥܟʕƝÉѣ͕Ɣϑůř˩ƞıɣПܟࢱ֡ͭŧǌʅM_ǜȗÇѸ֘ü˨ĉƦūƎࣙϊƝǆæưҮƪǘƬǢݜńü˽צŰįǐŌŭŠʱDʋϘǴğQ̦ĿÜ]ïǻńĹǶFğȾʹĥաۊǶȊȿƳ¿¶ǓȦØǄСҼ˴vãęʲͱ"]],encodeOffsets:[[[173239,-53757]],[[170211,-51979]],[[172181,-47986]],[[170987,-46264]],[[-180405,-44790]],[[178089,-41844]],[[177271,-42269]],[[179757,-37149]],[[177428,-35773]]]},properties:{name:"New Zealand",childNum:9}},{geometry:{type:"MultiPolygon",coordinates:[["@@åO@ńȲ˾ÈƏȓʡ"],["@@ɄёОЩ൲ϵրܙͦŵmʏέ؅Ѝ͕ΟץɝdƦÙSʵ́ŭӇĈ։ࠣɛωٟݻŧȉɏhɝǯʁ࠷ϩȵѱĥछጊᠾ࠾֐၌ϣמ\\˦˨چÁĺѢĺ³ŸƕxՀǤðÂǷ˘Ȭ"],["@@Źn̚ñ`˨ʎĩי"]],encodeOffsets:[[[60132,20704]],[[57742,25579]],[[57650,26267]]]},properties:{name:"Oman",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@MΥ٫֕ۖߕÄ޽ںՓe˂ȕDƳ¦Ȟ_d[iűĩĒǖJ̆ƷáśīÉ_˧şĕ·ãÑ{­_©ÒǃZ·¹ǡaÙüÕ`NĻÙŇÇ@ˣ̻ġíaéÏR¹»ÝËΫƅГݽһɷ§¯ƍ̍Ʊƙ·ŉeí˟ý̛ʻįÛIęº¿Ƙȍôƅù§¥āŻŹȅ˟ʣć̵ըɋǛ£οƐǟ¼iľI´HÄjàHȱȎ̡ÖƟÐővÍuKÚšA}½¯Dgååa§O³Pão¬R°eɏ¿ǅËʗĹõNç¬Ù¢īDǫMīBËdÇ[ëhuC¡¦kMg_WuGʧȡFěaĉmıÑ£ēɋŲǇų̟̂řӨϿĖG̬̿͂ǉĝ˰£ළřıĻԋȀх¥ÃţྥqjbzêrʤĜSºNdÎªbnvŸ|Ɯ¼ʄŤĪWÔŒܚƦdƠ²xR^QǖÂ Gx²»{RΏZ~҈iͶܹ̂ا࠸ıĸǅǐ͌ğٶǿЎĹࣼöҀėʜŸל^ॖʴĮ߀МϮԼyʈĠƅƌӨʠξ@ɬƙΈʬиɔӲٔɦ̹؀ٞ¯ͮĆːŉƊվո£̨͗и¢âࡢԨ۸Ŋ"],encodeOffsets:[[74844,37750]]},properties:{name:"Pakistan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȽĸŜê|łʏ"],["@@¿ƌÞr]ƽ"],["@@ēƇʂѵ˽ͿȉŐśЁѩۨŒ~Ūʜ͎Ʌ˵̨ĽċƧĞUųĕɰӓ̴ΝwƯĳŇǱÆ׫͍Bŗϔӛսɱȟ¨ƍԼǡɱȣĄȉΔγ¶ÛĮϋVƽÙ[ƧůɢƔĮbUŪ½ĘÄżĤ¯ØĉÆ·H@͜^jX|~`ºlƂïäÐÂ­ŊāǿŶc³ƇƖąʢnĩƶҐ̟ѢĚװ˔Ҧ͜శ̥תӝ"]],encodeOffsets:[[[-83561,7509]],[[-80791,8473]],[[-79231,8867]]]},properties:{name:"Panama",childNum:3}},{geometry:{type:"Polygon",coordinates:["@@ԷσȕŗȳÏLŃo{iij{sªÖë°] {WýƶЃŶħgRI«°ñĊÅŐƏĆġHŃĵũĳũۤĉǖбۼ^ȊŘØͼ˺|^Èty©m­MÝଢ଼À~êß¸¦OªFÐbżÄĘ¬ĸEƒkĄFݦಧʙͅāګǠУЩՁ]ƗǞɯȽͻǢя̾ǃǃřXƓԓҷk¡ľşVÑ@@AÙÉĉÛƕ­¦ʋĽǹЯśޙ֎Ǐ͚޹Ӱ੕юୁڒίњͳɠω٪İºδԝ࡮ˏʐÉͬ΍͂đϜϙغӛఈԫڀԯࣈ७ײmƴȞ¤Ǧϡߺ¬̆پۜƮĞæǁ¦ˡeq³őv«i¹b¥JĎEùŃ·T°Cø ĄĘ¸^ÚĎ¿Ĳ±¢}ðRÖZ¼¾^ŋă²×ÎóÀ{æAĢl¾j²^Môf´¤ƨĔ˂ʬܐĖÙ͊Ь঴ΚӸΰѦԐŴӎZƄwS̤ƑƴÇƈÏ¤ÑLʊgǞü˰űlt­ÂÚ¾»¤¡¢¿êɩ¨ÝǊ·ÊÍºwÄÑǖ©Ƙύʦřϓƒ½¤¯؈MȠØªÄ¼Ä¾¨\\ǌÑƌġǚlêÊòh¸hɚŕ¶ÁÔYʀő¦¯äÌe՛ऻǤíEÄhJ}¶ÖƗŴģ¨×KÅu£KÙ ġ]ß°u¬½ŁcǅRß]ƥƩܷŻΉȳąĭīśĝùµŏw±yýљƵʡăuÍĊ̱"],encodeOffsets:[[-74892,-6621]]},properties:{name:"Peru",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@έƽ̀ɚîÛ"],["@@ɂŕĭÏΗêʄļ"],["@@őYŃȼȎÞɠśȗƣ"],["@@ōýbĦĬg"],["@@©Û·ôržêfFƻ"],["@@ËoKľØč"],["@@šUWĀźé"],["@@éœķöǢ"],["@@ƾĤ˙Ƒ̙Ȑģþɿo̵ŔŽXίͧ͝Eҗ̩ࡰŕÏʷӕǪȋâУˑ͉ĩЄʯǍ׷̜œƠýӶȆ͸ғΠơSďͳʛʘɅƝ©ǊƧЉہƫfȚˎض֘ǲŜɸ͒ɨΒɩ¥͑ͰƲǨ̶˜ŚΆɮēÌƄʐWwخ҈λ"],["@@ÉÔèȄĊɑħ"],["@@Ѕǁƽrĳǌ̚ˌƌrȮŏdȩ"],["@@ǏǢƠ˒pѳ"],["@@Ļ}¸ƺƀÏûë"],["@@ģ¡AƶƐŐ©ɣ"],["@@ŗIŅɖʯƎƋ˸ÒŜ͔ŀΖƔ͐ɰĜɈÏ¶ţͿޓWɑƞ˩ǃǫ"],["@@`Ѥո઴ܽʯɫˣ֭"],["@@¸ŏáBjŎ"],["@@ýÓŎ̄༾๜èиȺ˺u̡ƈϟˉơƫɡ·ŧ̅ևऽۇ"],["@@űč´Ŏþ"],["@@̘|ĆƉ[ΧɊБŁıŻƬ˭ȷŖLԨĽƲǻīԦȴǉ"],["@@ĿMĻưŴlĈǍ"],["@@˼g´ŻɜĂȽˇʟƓۇ͇Ų৖ƿǰĨϾɽ"],["@@ÿYëɚƦFǵ"],["@@ņ¬òǩʯGĿʖǸŏ"],["@@șŪƲ¨Ƶ"],["@@äǥǺŉԇè̙ƌǁхĄǕǒįǼÞǨң͚ŵΖߐ"],["@@˘ˑJǵӑ϶ˇʓâքЖʝ"],["@@ãȽùȎàɢŦ°§ʡ"],["@@HñƁʸźȅ"],["@@ðŷ·΀˘ɇ"],["@@мːʧdбū˳Ɓå˃ʖɫքʿȲÀĖʮ"],["@@ǚÝġɑƥľîǲ"],["@@ƭčŗŎƾΐǊǧÁȧ"],["@@č̋ÿ͐ǎ"],["@@شˏǌĞƆĲyħڙ̰ґ͑߃ґɃXɛǷ́ʮӳËŽŜ΍ϐȧÜÈóŶάƜʴŉƘοǐðnȎиȋSīɍÛɨ̓ƃ̜ÙéϿƵļÒȐՙņŭͮӋϺŃkǘЭÉǛȉ˞ԉΖɵăƁǋȽ~ɉǤǟãi͒ʲʰfŸ̛ȤJͯű{ǁ˸Ɨ¶ʹ୼¶ÒˢɻǬÀU౺ȰܶтĜ"],["@@ă«ĲƘmī"],["@@TùſîŬL"]],encodeOffsets:[[[123137,5383]],[[124068,6222]],[[125024,6583]],[[125888,7587]],[[119890,8073]],[[120172,8412]],[[127803,9363]],[[126667,9460]],[[129031,9545]],[[129085,10001]],[[127585,10023]],[[128707,10153]],[[122795,10738]],[[125594,10725]],[[126087,9282]],[[126332,9677]],[[126728,11555]],[[120127,8643]],[[122739,11802]],[[127565,11616]],[[127600,11769]],[[125437,11894]],[[122920,11985]],[[122983,12460]],[[125599,12605]],[[128246,12829]],[[126686,12583]],[[125025,12652]],[[126746,12753]],[[126241,13162]],[[123602,13803]],[[124841,13866]],[[127339,13960]],[[124963,15366]],[[124008,19063]],[[124848,19349]],[[124438,19827]]]},properties:{name:"Philippines",childNum:37}},{geometry:{type:"Polygon",coordinates:["@@áŦŔƾ±ˣ"],encodeOffsets:[[137826,7560]]},properties:{name:"Palau",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȌġǧɡĨéǌ˨ŷ"],["@@ƅÁćÞɎ["],["@@]ßĉĨ"],["@@ǺÂÅȧɫĒƷ͐ʰʻ"],["@@ɔÑĘȿϩÔöÑƨü\\"],["@@ȡŎĊžĤµtȕ"],["@@˒ġ^ŝϝǘĮ¨"],["@@dÑĳʀĦĘU˅"],["@@ɝĪɔoJù"],["@@ȵǘ\\Ŕɖĳ{Ƿ"],["@@ȧƧ̿ŢšΎϋ̈́}Ф̬Ƨ̼ѱ̘ȡŔʳ"],["@@ƝŀłĮȭ"],["@@ę˔üĆĂǡãǷ"],["@@ŕ¸Ħņpƽ"],["@@ǜìʐŅ¯Й̯ɅƆʁÇďǯę̍Zʉً̯˿ۏwɩǲʃٗϔĂǔުĥЈ¼ŌÜņμä·ćȧĢǷ׼ÞΪФ̂Þßֶ˔ă"],["@@qóđłĄ¬ù"],["@@AᇴħƔĨͦCᲘ@ǌྴׯԖġҶ̽ΊiԠѯȺζοkӣ໒ջȢɏ̇؏·ƑħȤҙ޾؍ĶϙǢşŐ̙ԬhÄϹؼǅȿıĨǧࠌȇ͹Ñǜǯ˝ŗʫÞəȌအʄكִ­ˢ˩Ğԇܾࢷɲġƞ̓Ä̯ǅЧʠʌНĝí˅zĄǙࣷķƩżşyɦƣ˖r˂ŇɠʍUǗ؁̭ΕƄअ©ƁĒ"],["@@ÕÛŷǒÑш͛Ҧ৳وˑøäƔ২֭ࠠܕĬȷƕͻ"],["@@ɫBǡƾɠøǞïPǇ"],["@@̶ĉșĻևuĠȠΌ\\"],["@@ȁèĲƺǙ"]],encodeOffsets:[[[157221,-11751]],[[157984,-11634]],[[154521,-10818]],[[154707,-10260]],[[154142,-9570]],[[153954,-9721]],[[156295,-9174]],[[154734,-8943]],[[147033,-8685]],[[151579,-5966]],[[159701,-6847]],[[150709,-5562]],[[158359,-5563]],[[149524,-4839]],[[155562,-4399]],[[156335,-3208]],[[144360,-9337]],[[156637,-4870]],[[154048,-2725]],[[150598,-2007]],[[153360,-1590]]]},properties:{name:"Papua New Guinea",childNum:21}},{geometry:{type:"Polygon",coordinates:["@@βছثНВȷ¡ѭºǩδοċÁĀɹıķɕ֥ГˣʗµÉX¯ºŉX·uĽŢ÷ʷQÅRϟņ͋ǞҹNǯēыÐʱǡʧpdƘ˧ȎʗǕˇĤɩ̲҅ƀŹÁȹŨÚǆʋ«҇ƢĠǅ̍œέ˒ǬŴřèɱ࡛͸UŅñqñEJZĔŘòy˸{zƱ¼]jzêŗǤŴȾÓƘÃzg`Ò¦ĈėİɕŘĿĄV°żĀÚâþDdDÊŽϒ˘ùsƸ̅ņဌ˸̾ɜ๜ʆμŻ˕¼ʹ̿٤øԖ࿮»ӂSN¶ÐKêoexIêcĦòìµǟ"],encodeOffsets:[[24049,55235]]},properties:{name:"Poland",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ūɸGŋw"],["@@тÁPś̍ɥ਍jÉ̶ĘŔࡼ¯"]],encodeOffsets:[[[-66995,18541]],[[-67716,18888]]]},properties:{name:"Puerto Rico",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ƈȝϛĳЕЃ¡ܗ̯ŋۣԃߋ̉ơӗ͢ĻӴϯ˯˅ߕqϥуɝĆɅŕ̇ȲΉɕĲ˓ôǾŴџ¢̈́άФň͕ĴȮО£ȨӯȚŗťɵ͞ѸϤऌϐوېǲȎȥࠀťŠȂȳ݆͊῭͒͠ǚҨ˾ęLŭɾǫ"],encodeOffsets:[[133660,43557]]},properties:{name:"Dem. Rep. Korea",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@мġ˙ăǩĖĐ"],["@@ϼGQÕҙAģŌǔ«"],["@@è͝GÿĢͶÇ"],["@@ǛÖŨ´ħ"],["@@ʻļɒpªū"],["@@ũYlĒľ÷"],["@@έƣٙĮͳõƸͰÉࡠǴmŋĀΏÏǬȖøȖ˨́˯ȃĻĎĘҒҌٸŸ՘ÏߒōÆĢƪіǒĨ˙ؾlɎŮѺÜɧˤş׹ѭĲ֓ȇƧŘũáȉţĭΗiҎԗ̃ԉȦɵŰNУϭң"]],encodeOffsets:[[[-17603,33658]],[[-26264,38750]],[[-28822,39376]],[[-29328,39450]],[[-27725,39571]],[[-31884,40353]],[[-7583,38072]]]},properties:{name:"Portugal",childNum:7,cp:[-8.7440694,39.9251454]}},{geometry:{type:"Polygon",coordinates:["@@lÕ\\±«{p¥pǉÂîʵĥڧYʻলŷ˞ƺ¬_ïĚñ²_ǖ@ŤwĄđNđňƃâޅjº¹`ė@Õxï¤ä[üYĨhĊp̜ƊƼõÎÍňÛɑŽۅĉřǳIţaίʭɋͥǝȓʑßq¹ËµFåËåµÙCƋúǳHɭțนɾνĲpÂͬМ˾ȨɈ͊Ӣɑ˴ଫӘףЀߕȢȳǜ׵ЌΓӎƃƤƙöíºB|sx̾ঘBцѦޘเ̈ޖVވѿj̅"],encodeOffsets:[[-59555,-20648]]},properties:{name:"Paraguay",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@đëì]~ɼɘ D_ƫȝ"],["@@ÐȠɆŮÛÊ×lÏkkNOdÔȺ°Ƭ°ĺņØĤkêi`æ£ÊKjƃķّӏģ"]],encodeOffsets:[[[35173,32044]],[[35718,32121]]]},properties:{name:"Palestine",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŨIĿƅŊȥE³ƞɌ¶Ɨ"],["@@°£Ə¢ĠB"],["@@ǒʳóĢŔ"],["@@ËÈÖIć"],["@@ŧemŎƴG]ğ"]],encodeOffsets:[[[-152905,-18114]],[[-146883,-17018]],[[-142360,-9927]],[[-143437,-9652]],[[-143434,-9124]]]},properties:{name:"Fr. Polynesia",childNum:5}},{geometry:{type:"Polygon",coordinates:["@@÷iíkÏ@³RlÓì©Ģ¼XýіȾӨɒƠʀȿ·ͅľЅƱ͓Ƈ½"],encodeOffsets:[[52499,25198]]},properties:{name:"Qatar",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ĘēŒ¯˲©MÎĦiˢĨƲbƐ£ŚġůΕёï Ǿǡ³ʱধ̧~˳Ǹϫ˵ŮܷƇ׿˱ᓝƐ§ĨƈŊ˗ƈaVǋƾºĘÆlæM^Yáŧ²ū}ųīěgƷŀɯħäƍCvP¶HàNZjƧøĞƲl՗ɴgʀ]R[SeUeE³ÑøȇĘįŒrȒĘŬĨ̤݆ਈ݄ψƮºìæÂEǤāȄLߚÃʹǧТƾȌlȂɈtÖÒ¤zúŘvƪ~̦ėՐۃϪ̥Ƙ˱Ƒ࢕Śů"],encodeOffsets:[[28890,46542]]},properties:{name:"Romania",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ýÎɚbƛï"],["@@̢µջ˯˝ɑ}ƱāǦظՄ"],["@@ֻ˝ɋ[ٓӕ̊Ϟ՜̶ƂŎķɤjШȒtŭȧ"],["@@ȭ£ѠήӺƾܫӇ"],["@@ɻËӆ˂ʉȵ"],["@@ǗcǶ̒]˭"],["@@ѱɕŻ¬qǢϲĒΖ̸ƧЁ"],["@@ȥØǬŊĤeéƻ"],["@@ӂறƙ݉ŦϛѢଋݮൣ֑ԠˇÀՃħѿृa˫ֈߋɦĂ͡ů˧űѾףŢсڃȷ҄Ǫׄ×ϔǾΨ˅ئɴیÛࢾŠӼПќ½ҌǐѪҞˌƀ͒¡ưϖ̷͔ΪĨ"],["@@Ļƣ˹~϶Ŧ"],["@@ɠ·С̵ɑǮȕé̂΀̨ĕ"],["@@۲ǙдIɐƿşʷGÏðŕԇFࡹಉÊ̶ϲҞÖ͊ʖ¶O̥ʟʹáǌ ˢ"],["@@IũݥԎѲdyū͸˛"],["@@ĵǒĚÛš"],["@@ƏÿʒьھǦ˯ࠗʁ"],["@@ǣȿƤʌ"],["@@̳ÀűƾӘ±±ǋ"],["@@ަƻƲǩԄĹƅɔÖӝȒ܆ɫ¿Ïሴҝ{ˑ̺äŸóÙ؍ΠïĠǋʺňhȱʔǤϩǔŪʼϵŮܶ°ѮÛƓĩÄĩÈź֢ХĦ৲ŏઊӵāāʬ¶ĿϺu­ŧ׫ŏŁȳىǂˆʣڧ_݃ƼҨȍÛƯ̑w͂ÔƁܹșʆuċƋоǷ˱AƏĨµǕ˅©ɀͷƥ۹̒ۗîϫǬȩϮ߳ŤεġޣOѵҌǊeȂ͚˹Ƿɳǂƹǳ̗lęʃπ͑կϙ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶBȶǜ"],["@@՛˛׹įЅÀĳ϶ѴȎ͊b࢒˙"],["@@͓ъ΢Ȟا"],["@@ܑìНȤвĬࡢőƣʩ"],["@@UǫګIœŪҥvεΦѺŤ୸ѳ"],["@@ʐűƛȹٯˈռä"],["@@ƫɼ૆δ@қख़Ɠ"],["@@ȻëխĚن¸Ťå"],["@@ذģԢʣཡȹӫÖ@Ҝ़"],["@@ٗt݆˄Ԯů؛Ǉ"],["@@ܱňҀȲ˲̹"],["@@ЕĐdŒٚʧǁ"],["@@ϿŷâԸ"],["@@ठěʵͧ׿ɍėԩং۟ঞͅЕŝٕŨĪƕڿŀ࣯W৽ǌʌǶТطǸDǄఉ¯ΩƢÒ΢֜¸ΆǨɊ˨˱ļڒŀıɢಬǢѠá"],["@@Ցµ˒ߎž־˷ߝá"],["@@঄˝Ğ˳༕ä޹Š݃ąતіऎ~"],["@@ؙh˨¼Ͳã"],["@@ԍßǹˆ܂Lyȱ"],["@@ԕʱ੻ɐ͂VǤƼબů"],["@@ͲDĿŷ֙Àͨô"],["@@ǍƟ˕¶ƎϠÂNă"],["@@൘ƄƩሜãƩǱࢣƟધxᅭͰ͐͜ɐǯ"],["@@йiȺϦЂȩȁǑ"],["@@٤Ǖ֜юসɯࡢ@ඤ˩૷У܋ÔχȄǴ͂ՑkğʣޮΡջűСƞกŧӱİӧʵࡍŠ१Ѻ˼niͶπTūǒծƆײèै̱"],["@@țſࠩþÎØॸU"],["@@®ƝҿƪђK"],["@@فWࡐŒɍĹ"],["@@㎅ޡ࣡ʵȌđ۝ʛιêǗǧыZêɫ܍ǳUȵϋÎȖƯӟʕ҅Í஡ƀקđҋΒ݊ǌזϮڞÞүŌޔˤׁƖȎÎ҈ăɰɆٚSϜ˒ۖǊ୮Ȯ֎qɔǮ๨రŢᧂՐ۬ÝϦȏ঩Ё"],["@@࡟O੒ƾȱƭ"],["@@̹ЊìďĹ"],["@@ƇȞđǈըƦǂАC׌ɯٮϸŞ;˾࣬ʟƬĎÔ̪ɀĢΨդʲࢰӮΎƽʶČȘ̹Ķۙɵ˗RνƃșțౝKȓʺÒ˔ɃɖBɒ̛דкη]̣ȎסϗȞ΂ɅŠ}̜͏ͤө੘׉ֲӗƊəÍৡΌᔹɗݡйuŻӴÇĀЃֵеݹ৏ƶŃïǱڷȇӟ˥৅ʼōĆǙ¶őéDǩ·ŋÝsŉLƅTÃ`÷ɫǄɕĄϏ؉ɣŅÅŃÉŻÝÓĕÛş¡ĝĝaǟtΑĝճçý\\ō©̓řıoɿÞęGĹ֝ČÙvǻԻWùfĭ°χɐ£ʚʇʅHĩF÷đ®ċĢȕĮŗ`ǥUų[ۭƜયˏϏ_ŗvÙnį\\࡟͔zŐďĤiȄ¶SĞdG¬ŏ|ƃȿǃ]܁ɖÉZȩHǏNħfǝĮۛȸɅˇҋˉɷнńŉÞǭ¤ÈÚWºo{șȷʍէɭŵUȇŸ֝dȽĈҗñΉpƳĞĳJýI_»G¥ÄǭŒēˬ९¢ƋƤëXÝUËµw¯J¡ŷàÑ¼¹[ēű͙M̛Ɵ­×DMÇUǱƷûßc¹ԍŇ·ǅTƻ×cĕá£ŷ`mÁÏ}ďyVqpWáǕυµÏgĿñ«mķC©FȷċÿRבВ¤ǶгɷߕĮȱϐ֕ƬͅҊӳȂԃďɣƑࡷXßǼˇX²ȈͣĒʋġqȥοƝᅁᐴିوÁňȞMƶʠ୳̑ǻǏ٥ȹċƅбŎϝƟčɔ΀ˮЛíԛƪƧǉɕ͒ƳĵމNþ͘ϕצұţৣȐ٩ȓ§Ʒᖭ̓͛ʃՃᒁοוÔɃͭҲĉʱÝ}ƃϰ¹΢ȇࢇɯʟȄ˵߷͹κʁࣺ˛ƓϵϓƑѣa̭ƞȷɥʏõÏņӍØѱ̴ѧxͭǝαƨѧڱν࢙ήñЍΑъکψ٣@̏ȒܿȟƱƠ̵èҟσػǥƥșוȩŒֹΣÏՉѪɵiґ։ñˣȖǻˡ́ͣͼƯȒЯǄÂּăږ޷͵caŵ׆ɥҡɁǃȱܓ̍ƛĄÈųƭʿե׵ԌͳžҡƺˢƷ܋ठ৅ځէЇêӋѾˍàǽĊӗǺG|þȬkpţȁKƵŪõfŇÓviSáŉáþ¡tř\\ƩȏñĉkyōJÅnknVYƅ¾ÅϿŨõ¼Qșàয¦ĵ´đ¶ɱšş¾Ź®Ӂh»ËųWॿۆ҉Ōˣɼ̗GʓɸӝƮ˂ŜȃèŪ²̈ŽθĘǀːξæÆĥĔƈʺIӡˈŭȖؠx½ŲܖʘćƎƟFăą́sǮĤҡƛżѦҀȶ݈Ʈ͎Ĺɰǅ¤ŮǼǰ\\ˉƾ΢Ȳy˚ʥIԗʆɍևȒǱōԽЮګǝхǘѳɻ֦Ȼƈ܋ªýΤɶĐ֍ӄથʿɍ̟¨IrÉĂ¡nqxPȄiȐ}ûÂ÷Òµ´xĚĺp|Vζ÷ʖ]˞ƮĞÈb¼Pɇˈȿņǩ`ƟIÇfÒŀXÆW~tƍ°ȋîĕĄĩƊġäĴE^}př ƻôOn\\°t®ŰŖ@g¦åðÁ²GzVpäÈLƢɿĆ͡ƮǇQėR±YµãsħeůÉÍ¹ºlżࣷİŗò®İS²mÒ·ļOǯǐUê|\\ƕkǈ̌P¬SpɏĨwà`ıH¢ŜŤŐȤÒɵ̎Ëӈ׼ӲśĠʢɶõƸƀΰiǘƞࠎŁ¦ìϛȦշEΧƸŉʪ׹şཤࡔ఺޺̆ͼ̑˖ৃѶњʊTƮЇȲ˔ϿǠȈƪǿĔĞ͂͘Đࢋঔޠٶեͦօņǵʤʪ̝̐ÂҪĲΠɶטŔþǠֲćRȶ֬ñϚĨYŦ࡮șýĵإÔǚǏԺQiđЎ¼ˁ̟ҘȮᆤı༼пט˯ड़ʅɊ[]þӒˍӰıͤчƛ͏࣯ѵௗșᥟ˞ׁǸ˻»Ď઩ǌȁȰࢇÚ๖׿ʛħلĕӢɯîƷ̵̹Ոߥ٢ĕӀ˩ࣞǃѶŖĀŤĝȔ٧öҹ˼÷ǂ̈Ȟᝂԃʦǎ͘PիӒfȼආѴؠͬ࡮ĕΜƑģŃʪfɖő˚ްիˈΠ࠾ܷΜ׸ĿༀËڤՋঋûՃ˿ֈȑ˖ʛԜù঎ƨȀԞ߬ĆáǸͶsᛶ֘͸ƽ˚Ŏͅľ௪͚ׄE׍íŒЇ֝Ɨ৺x͖ýҴ̮Հæ࣪āࢠ˰ݒĮ˂ɣɫʛՄûƜ̖ӾnώɐٙԖبɌ᪂ʿפʋᄚ̽଴ҹ٦՘ԇbҋњ͋ĖҹĠƗŝ͚঺šĊυeÁɚൊԐ૾તłą๚zાȇȧ֭ץү۲гŅဵ࡞УϝʧÓΏਁٓЙƤɹۃƏ˽êʸŦ΁¹ͿƆևaǡƲǭ४ȣࡦdҸħ;ðĄȔୀκʂΚ׎̐ͅռǂ˦౺Ȍ̐DټёÃׅԈǫॴh૫ƌÜςˤÎ˿զ൳˨ӣHԗůࠓ¬ɑֈ٠ٴ੍ܮӮʹૐʦǣ֖̮ӶҳϽ˳¸ԯആǵֈؚȥԸHŢÌзQ̿ɮ๻ʊͳ̞۶ĺހǑϤĮǻŞѯikĶوƼ৔F૸ʓݲ̻आ¢Ўăމ΃ƅ֋¶ǝծҸƊ̧̽̇ͰĽMƸ֌ɨӭҶ͒Ӥ˫ǆұ¨ҩ˸੡Ȉ^ϰΕʂƆ˴┰Ÿ්Ɣऍϗݔ˥ا̌঴ƄϚǒ࠿ζӍÔͨŒфĽ˨௃ʀΊƞϚő͞ĆΨȠѹ°ÊĐ֒ᑜϲ὞˒হE̴Ǆዎк±ΟǃܖĨWĩᆒ̐ञǵȕȗʼŎsǦࡧ̂ႌيï֛Ĳ¾θശѤ୼Ȇႜ˷༙ʍᘪÉШĝࡡΏસTϮǺ᧮§מǧŵċ֪Fˣ԰ǖʔ̟ʘ|ʏ̑फɘцɑʌОƉڧλᣭ׋}ŷഡЍޭÕӻʑЫm࢛ѿӄº٨ʬ੮೤˄Ѳ_࡚ɒউZҰɰڜßÚĪΚq˓»ƢşظĳհǼǒ£͒ɟɓǁˬħ̧џҌǑϗƠ֞Ғ́ƆໞǔᲄƑΏÕuǽૐɣᑔĉаvřĸҞÕϲȨōЊࢨîࢴʭրĎʢǵЖǴ׬Åଢ̳уǽΘmȞƕۧƛܨćňɫЍñ्̖Ł࣐ҫʤƊɀƩԯÛޚҙٴȑȂÐɞǻ࡜мԲֶ࢈Я࡜ܚȈҀT༌УăĀЂĊͩ¸ˆǲҞΰƹٲ ɕ̩ͦÈۢȪࡗwƔϮƔఔúɫʰ੆ƛ⇈ɻcû௫ԙĻŀÇᒌĒ׽̍ĮǊЅöCʇ׉]ŀȗݒĦৄѨሪƍѠɥ߿čãĕൎƝхʙܶżԬÿєɛˣغů↨ɒଐ­ૄȽվЗɷσ঴ɝŀяɲĭϡϋ׮̮{ЌՈȜࢊĒᴴǷࢊȔϒϥࡐǉʤʙެϪȂ΍ҎΟ˜КᚔʅƊļᐜ©ᬐՕؐɳ@ᾕకϵ٫Īܱ̪ҏג¡ƼřŻÙࡏƤ౗ɵ౎ȄʜǗǭĵઊƬLˋɈŝ̜ïƺŪŸē̎ӿʓ½ʬǯ¤ŪԄͥŇśʾˑϙ̭ໟɺ ƶ˅IŖǹᕩإݟěЯʹɱÀ¨ƁїŧEėງՃɍЁ̱ĐًѼࣷmއƕߡҧŗļǺь੣͗ŋɉέǾΉƍlð͡͇ȷûЕ्ܕƱ̷β̟ɚȚӔƃϑεXЛŌŷˬâϣʍǁǧlǱƔΈʒ̯ťȕϋƝ̡ӽ͎سЙȣ܏tו̑șͽƴջρĞ۹ˡɯľŘƅĭЫ͛ӕ੍ڭċȏΊſैɇ̚ЫှÅОάଆܮԄņƨŭ˂ԸhǺȄԞU޼є՘Ԟྀࡲ˄˄ൢϚſĠϞˌǛİͺۦ͠ƬԢąǬÖ࠽ɐࣱŹˁևȪǇƟŇȕŒϳൃރӽīǦ͚ӵÍѦ߀ٍƥ̧ǮळƧԍ͓Ľ଱࠱صʱ֫җťʯےáǄɓםvϓşˇŲ˫UҗʍлĖțĵٕǣǨड़Šދ˴ܩÇƸ¾ࡳǶӝŝŞţ΁­ƅȄIȥġЁƀرūࠏǂЧʉеȲጥԣŉຑ޽˿Щ຅܉ࠃۛᎯ৑IǯԀůߒßۇξd]̢ѴĐ˝ƷжŹӥͳה¶Ӟ̘şˍʛǜZȾ˪ή֎ė͚ìֱּ࠘ʭǉɷ˻ÔΔȹĻͻ̒ɏıɏηʧ΋ۍĔ׽ƋƝ°˅࣓̅೫௻Ƚћշ؋ಗૣɣīر܇षӟ܍ɁϙƮͽPJβωǿÔǨٽ֧ϗ~ŀőŭȃ"],["@@ǵÕࣇè੾Q"],["@@ЅΙ୚˂նɥ׎½ƖˍӑƇ࿏ŵ೽Hෟǹჸା֊ÿźƪЖƭ"],["@@ૺű߃O͵Ƃ"],["@@ળŴŭǐᓘŁवȁ"],["@@ો܂ĨЊų"],["@@٧|ՀŒŨƍ"],["@@mͯߎʖ௸ɳ͉ϟ՝}ݚ˧ౣƣᝋʼѕک̌७ĀྔԐʜÇ፤ņ"],["@@зì˞ÒƚŽ"],["@@ûɻথ`ǴɈࢮT"],["@@ফzіǄ࠼œ˥é"],["@@Խɏ˰ᆲųܛqχǏ"],["@@ԓFÆňҎō"],["@@ࡈ¡ȨơࠓŎೃˋƟļࣃᒌȲ"],["@@ûǽࡱǕٯÜՅÁµ͖ᓚd"],["@@நȩᝣ˫ƖǇਭåƀƂݷ±̅İ੄ȔৈYƂʲࢄĘ"],["@@ޭĴŰࣀUɅď"],["@@ࢿ¤ୈĖˇŹ"],["@@ๆįञȱීŃ৷ĢԻŐ֤ȴ"],["@@ʶǭէÇࣙɄ۶ĐӖÝ"],["@@ٿźᇮ̀ՔɟჁș"],["@@˿Ý૓Ěඔ{"],["@@૾ʿ܁ȑɰəᵥɛᅋ̌ศζ֛UĲüᏘͰՠTؐǣ"],["@@وŅף§õǕႭfȿļጀȢ"],["@@ಛÐഔP·ß"],["@@ƉĦॆvĂāࢽ"]],encodeOffsets:[[[150236,44794]],[[149717,45566]],[[152166,46406]],[[153281,46738]],[[155651,48023]],[[158526,50496]],[[159664,51510]],[[160159,51874]],[[146188,55700]],[[140471,56423]],[[141252,56415]],[[21746,56591]],[[170650,56156]],[[154205,60436]],[[167563,60010]],[[36676,66747]],[[71702,68099]],[[-184113,70595]],[[51472,70847]],[[165343,70555]],[[173262,71251]],[[61902,71614]],[[54174,73078]],[[183155,72527]],[[141271,73224]],[[-183169,73295]],[[79496,74027]],[[81410,74468]],[[76453,74623]],[[123148,74844]],[[56648,75068]],[[72371,74850]],[[145598,75670]],[[85555,75850]],[[144395,75776]],[[116109,76187]],[[88733,76781]],[[84145,77230]],[[150319,77180]],[[139212,77220]],[[143410,77649]],[[98850,78109]],[[115178,78460]],[[152730,78500]],[[69392,78068]],[[98597,78876]],[[91663,79042]],[[133824,43318]],[[110281,80007]],[[105354,81157]],[[78079,81563]],[[94908,81598]],[[52644,81863]],[[61122,81875]],[[100019,82083]],[[51254,81997]],[[58449,82280]],[[54806,82110]],[[59348,82047]],[[55722,82405]],[[48581,82795]],[[63660,82775]],[[51485,82870]],[[81948,82789]],[[62609,82894]],[[56033,83063]],[[60030,82987]],[[64895,82637]],[[93765,83089]],[[98844,83022]],[[59198,83504]],[[65179,83568]],[[59695,83677]]]},properties:{name:"Russia",childNum:73}},{geometry:{type:"Polygon",coordinates:["@@aM¡Ýľƅà{ª½¨ĕÂӣkĹuÕÇ¡PµSÁoEŧòʓēƿÞ¿̓ƛßʵ]ʍǴóĽĵîcȢɊǤÆЌ͊˨Ⱦ¬Ėœΰͪ¬X¶EA"],encodeOffsets:[[31243,-1092]]},properties:{name:"Rwanda",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ÔôĈț̙ǪºȊńʋ"],["@@ݶęȨϧ٬T̮իWƟφș¿¯Ȗɍضѥš`Ǧ̵·ǩĽVѶࡱĞĻ¸ÿâãľǍk´QÐ@îløjÐÖNďȗɒ­pǩߴ३ᒤʽèèϤם֏။ᠽ࠽ុΑܵΥӽשř˱ʣƑƕNȻʾ৉͙ŀਙđлǈȑƁu֛̫ˉыࣂҙϚѧژЃ֭ࣞі̑ľϝӬƵ˰®Ǭƅ̦ØװԇऴқЊ́Ě̥ѺîŠį˦࿿ᘲϩĄćÅ˜઎लŷǶżǌŞĮƠĤƒª׶ňlbÀŒäƘbdhdǌĂİ´сѐ̽̈ūŘɎÄɺÎԲžɜÈӲŮZŰİȊ˰£˖¡˼±ĠഄڿෘਙߊսൠŉƦ"]],encodeOffsets:[[[42996,17117]],[[47649,29795]]]},properties:{name:"Saudi Arabia",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@²·˦БAÍęÄSĹªܣɺધड़ۃƿƳsWwWuµmi[ЃŃȡőµƯƋIá_ĝh©C[gŻFÇùƧt˟̇޹ŝȕlǉpǟ¬ЗͯఽϣőҷڳƱߝƇıǗŒȑȅϽȝؕǥü̘³ˎٵӄ³ܢłԤБL^ǵ֑EɢʝèԷ৏ઑЁËكҠͯǳōʝбƥŕɥڛFƙɰڳXΑŉةּ½ȦիÝŧɿѥɇݙ͓ȅԟŴÍʤżȎpМډआÀΨ˥ȠUΈĝàĵӾΣdđĦ͸ҐĹЂζ̦Ɓ͜ʐƠɘτD̸ƞƜܮfRṴ@о࠾NBဲᢴ@ᢲAƘPŞǚð¯©ŷ⯀B"],encodeOffsets:[[37757,22525]]},properties:{name:"Sudan",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Iޓĳď֡Mʁҋݼ͟ƊʃլӅɰګʆ̫ƷƱǥǝȧȟɓɉǟǛǛǗȟȡơơá³Яŀ֋ƣǗƽ˳ʂɁĿͩĞˁʛåŒƝ@ßǰˁŬѣԖǩtȳȁлĨʥƳȡvͻʜ͓϶ɑԪՉ̄ǥ͘®ưࣩږćŊhɂ̇ˢҽżŧ͔̾ȆɈݚʀѦŨլÞ¾ȥتֻΒŊڴWƚɯڜEŖɦвƦŎʞͰǴلҟЂÌ৐઒çԸɡʞ֒F]ǶВKŁԣ´ܡٶӃ´ˍû̗Ǧ"],encodeOffsets:[[34896,9689]]},properties:{name:"S. Sudan",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@¬̍ǬɃ¸˥ÿȯȈˉǒ®ȶΫBҋࡓÃҁǊŉkŦի˯BʅB܅HƵùǑĉɝ«ʯhć]ƥÙĕgŕb¯S£ƞˊìŽĘũŉgДĪøۄFjƘѸÒŖƈݼˏΜƠųŖέםʸˍíçşࢫBǣˊŲŖƣ̓ՖƫöĉÝùĔ͜Ɩʮ̺ɮφĔânưĜǞ˞ЄٸǊ׆ąδεĦr̆ħʰХ̶υ˜ȯņã"],encodeOffsets:[[-12575,15165]]},properties:{name:"Senegal",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ˍKƘĸŶī"],encodeOffsets:[[106465,1364]]},properties:{name:"Singapore",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@Ͳ´ŻːVѺїʋēڧѸصƠZŀͯސµ"],encodeOffsets:[[-37993,-55363]]},properties:{name:"S. Geo. and S. Sandw. Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ùMÚĊ`û"],encodeOffsets:[[-5828,-16381]]},properties:{name:"Saint Helena",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@őaϧːӺʭ"],["@@ȕÿĥÈȜļĠă"],["@@͞Çɦ̳ӱĘȽŶ§ǢǉVĺΈƵ"],["@@NŧŧôˢƸɭ"],["@@ȂƇ͔X϶χƛÅ܅ƒǅʘ\\Ɔŀ"],["@@ȪŧʫºÂî"],["@@ŷ¤þèĊÿ"],["@@ƛ«yƞǐ|Fŭ"],["@@ƩŰƖŨTʗ"],["@@ȼʡ«ƿǶƋǬձԃծµΤĽƖƆ¸"],["@@ŔɝßėșƔ}ƨɋÁíÐɰʢɮɵ"],["@@ǳĀÆŬƌÕ]ƕ"],["@@ƩǺ¦ŒȼűķǙ"],["@@޻дУиɶ¹הΥΌʡǩ"],["@@ƋP¾ĮĎĽ"],["@@ā˷ĐկּӠɇƌɥʚƛ"]],encodeOffsets:[[[164431,-12081]],[[170121,-11015]],[[165597,-10636]],[[165425,-9856]],[[163585,-9495]],[[164013,-9211]],[[163010,-9342]],[[161903,-8892]],[[161167,-8922]],[[164608,-8513]],[[161550,-8439]],[[160944,-8302]],[[160449,-8113]],[[163717,-8739]],[[159580,-7267]],[[161267,-7506]]]},properties:{name:"Solomon Is.",childNum:16}},{geometry:{type:"MultiPolygon",coordinates:[["@@ΧŔ˲ÈĒ¯[ū"],["@@ÚăIy½śFwh[ĤmĬ̷ƩʋÅt[R¤UG¾ĒĴ^ÞUE{ţĻǯįÝʽȗȃ͝ʱȩ˛ࠓЖL̰ǽŹĒė˜ǉÎĽǺǀKǈǤʍ«qɢŮȝƘǸjĴǌǠĢǔ˦ŊǌʊmȚİ՘HÌer«Œśʐ͵"]],encodeOffsets:[[[-12826,7615]],[[-11016,9611]]]},properties:{name:"Sierra Leone",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ȰԞ͡P]N¹^§ErŐÊŀƈĝĊ`øIÐ£byÇʕű˹ىĐƤćક͂ʓƪ Ɩт˴uŰǰt"],encodeOffsets:[[-91507,14762]]},properties:{name:"El Salvador",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@įehɼĈɕ"],encodeOffsets:[[-57617,47963]]},properties:{name:"St. Pierre and Miquelon",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŝ¯©ƊȀƬÀƉ÷Ļ"],["@@ýìĄRŋ"]],encodeOffsets:[[[6820,124]],[[7602,1606]]]},properties:{name:"São Tomé and Principe",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@tƱ­ăĿƣ_ŧcĳO³»ĕũɃőıAMWQBqèŻR¥ ¨U¤uGÅQ×Pć¡·U¡̃ȏĪmuĕsyoQÄm®á¶¿ ±K¿O÷ùϳČȅĂбۈėѲ˿b΁תǪӈÑŸǦƜ͌|ĸƨğŞľǴȌώؠě˴ƻWǌɘþۄFټƱuʱͱ֓ňځˈΥ"],encodeOffsets:[[-55331,3717]]},properties:{name:"Suriname",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@]œƃÿƿŷįWƍ̩É˅Ƕ߱sſș͏ů˙Ü۫ȇÉǳ߱cԫȤɿ͌òǲƶȰԼ ˞ƪÚǊ֠Ɉˈģʘǖ˨ȍcƗʨoʲǢьÏǰĔҺM͌ǝϠŅÆQ"],encodeOffsets:[[23080,50251]]},properties:{name:"Slovakia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@õręVǷŷйǭaJàĿoĹ̿ŇÞÕÏãPZćuŋTſ¤ƉkťĀ·âmLiyãíµqЭ«ʧöɢÜYòƗĤÁǂùKkZOnN~¾¦ÌfrEhǯkĘƎĈØ\\j¶܌ĵ̀ǦࣄÒŖƼǆKȜ̛"],encodeOffsets:[[16913,47616]]},properties:{name:"Slovenia",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@će˚Ԧٶзࢯ"],["@@əŇĀʷٗБŞƎűЊͶɰ̨îƨã"],["@@Ïµ¤Įǒeƥ"],["@@ࢭÍכłūɝׁǃūǕ´Ǝǉλˇٍ͎̃ԃᅿ׃ʙƳŴčʗęɛĈŌʋǟćΣLȈɳɑ̭úƵɥÇůĸܿΆƑʜ®ݮӁİɥࡋͯԄɱʇવϣٛc׬ťɫ·@޷ʫړѭӭ࢛wŇ̑±ƽŧłʯƗŋઋ^ô˲хҖˤuŧƪǜXtƒϱʐࠅ৲eȆƵzďԶ¤øǊêŃƠbž̨įʬڰўḔʙҪΌ¶Ƥʖ؋̴Ůӄʭࡌƨʰ԰ͺΊÚَ»ƲƆÁʔΫİۤ؂Â۠߆ƪ»Ƹ࠘ӆɵ̸րЀҔǬӼś͘ӸඖǗ͆вșƠь`ୀџܚŹڈ΍ƹгɼýʙ̈ˋʍҷϤϓ"]],encodeOffsets:[[[16926,57642]],[[19535,59224]],[[19617,59313]],[[24736,67385]]]},properties:{name:"Sweden",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@Ħ»eɛÄȧNˍóz}MwţkǳZŏǹGɯ^Ǐ´ǯłĿǔ¯ļÛNYlR̎ʈζĴŚņô ZGьȇvX"],encodeOffsets:[[32715,-26580]]},properties:{name:"Swaziland",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@DýƅƪÔ¦îő"],encodeOffsets:[[56874,-4805]]},properties:{name:"Seychelles",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ӏї̹éĵŋ¶رƅܷǩ˷ᇳࢳ࿥ࢱϑÐӫ̈łǸМƔź£Ɩ͈òñðʴʞãǰƥÊ°Ƅ΃yÕڔśŶÚɸ®ÊØMƈßvDǌƜzƘɖÀJ|ēǎR¤¨ǐÜ~rĲSƒ±æ¥̶SôǒÆƾ¨ʈĜӘǫŠDǜ]ȾBŨlƺˤòׄɮ঴¸Ƣ¤ĜêR_jIķ"],encodeOffsets:[[43376,38e3]]},properties:{name:"Syria",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǂ·ǇFþ"],encodeOffsets:[[-74068,22376]]},properties:{name:"Turks and Caicos Is.",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@QṳܭeƝƛC̷ɗσʏƟƂ͛ε̥ĺЁͷҏĒĥΤcĶӽĞßV·˦ȟ¿Χ̭Þ؇̓ó̓އݑαɹ୕ǁÏđȈƱқԡޑ½ܩεȩ˄ƕƵΝƧБbÎɜη٨ڃլ̗Шɢʎஊx͇̌ťʖđϸªؚȟւ͕Ѩǻ²ƱBōư˛ϒčΰµȸޜଶच঄ɖᠶȔΐ͘hȆΥӌǟఊࡊϖ←ႱỨལ"],encodeOffsets:[[24556,19965]]},properties:{name:"Chad",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@řԛӈ͝²ՓǸʽrႫÿIȺוŽßλŃϙ̨ǯͰĞцœǊƾڸˁͼĮüҢʗÄĠŠßĮլϻ͎Ą̈ßĂҾƉ΄"],encodeOffsets:[[923,11258]]},properties:{name:"Togo",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĥŁt͠ĨåuƷ"],["@@ĝƑmŜŌv"],["@@ĿOqƞŲƍ"],["@@O¹tWƬŠǞǩĹΟĬǟזIT½oƅö̍ȩ҇FòĵNťȡҹ Ų½ÀfȸȂŢĀRRļÌôŨ´eÔòôÈ MǢƁĚ½ĀgÄō_hL̸ǤĠ¶ì¨ÂhbvFà^ĸIŢƎÅĚk¨pĊđŮȑńơĘįʾȥÜƉ³ȉ_ǉNȣÎƳȒʱĐÉƴ±Ú¥MƃȊŉfCÏoćĿț@ŇïZğoõsɅk»­·ã¯ĉ£»k[S±«­ʛǜೡăʑǏ̧ҩǭsƎݝɌȳe˱ǔ͏˷и­ÿףҀ޿\\Äٺ̟Ŗ̯éȵȭČǕŁ̗rѧە།öࢯӦpżחŞƉäĮȫɠ࢓ę®·ɖąTwȊăƧɚΉԂ˝ЖJԔԻȑΕǏĹňωɩōŒÒІƯFĳǸ΅øëŐţȭΡκrȖƕĨŘȧbăȸƻČuƜəƠíǒĽôƃƓĭ¢ÁҖϰ஠°ЄζώΦ֨ǭ٤ɿМ\\ּӉզ̱ԮUȒ̮ƐֶȎŌÐƞ«Æƥñȅժ؛ے×вɑȒ̺ÐÒܺǖʐ̚»ҜìƄ˜Ί¨wǴɘƜĊÄQ¤Ĵ¿"]],encodeOffsets:[[[100771,8092]],[[102473,9817]],[[104886,12277]],[[102526,20805]]]},properties:{name:"Thailand",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĕÃÏÔMh^@Î_ĈW"],["@@̟ɝՏȔлƳF}åÇ·ly§ù¬ʩৢÀʢǉ֞Ǭk\\yWCȔ± ũɜØÀ§ê«ΈƮЀqłZĐ¨~êdƊWJ©{ƗǖɕğĩĘȹȌÉɄĶ҆ǗèܟȌǹȑŹ_TċÒÑʻr÷E±ΗćăPuløÌb[ÁX©`ĽtćQƟ­˅šȧȧ࠯˧œŰćʂŲڂ}pÃAćsÏIb®ɄÝŘѧĬˋ̅ǟŵ]²ķGč¿çÍœnƏǏ_őÑÇkó~ĝ]é»µ¥Qí¨ȁƔ£RuK}Ua[]Y·T­Sʁķó£]©oo£RŧÓġnĻüÙĞÔ`ȰҊ،əɘϢοÊŘʑîÌȾʘƀشíƨʪȖÎÁŤƖ˻Þը~Ë̴Ŵǚ̚ġׂ͆̌ʿ͉˳ʀƷʲ"]],encodeOffsets:[[[72361,40812]],[[72662,41205]]]},properties:{name:"Tajikistan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@¥GקȌǭˉɃIǵQřŕ½ÕƯщŃ¯ñ˝Ǉˑŗ؛ƓƗĥțÝĹ¹ƛā͉íǿǬϿ¬ɵǔçSSȼċĠºǶýϞٹKɹ˚ԝʒŹɐСƢүcށʶƇȲمƙƙݟ{ЙɯǙʵڇŃചƏɔ̱ŎƯÛầ̰½ŋĸ^Ȯнà¢ǵșɾÏ̂Ǯ՞ǜǵЄKɈƛѐµŢ̬fǖԝϖʓԊ՝oǍıŽɝѕ̙ӤӀ̰ࣄǀ؞̵Ӥ֙Ҙt࢔·ĎòŻю˜ɢѰÈǸʢϐǁ˓ˢ˚ĦĮٞϣՌĥȧɒƛĿ\\̟̬ƭڎɈò΀ƵӤय઀ۅҞƷબا̞LՔɏãǛ]ƽAşXġ"],encodeOffsets:[[68119,38245]]},properties:{name:"Turkmenistan",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@΄ŶƋȧȷò"],["@@ěʤŞp¤ŮǱU]ĢɌʜǠÔਨĮ̆Ŧˤĝ͋ʓ౏һ˷ȣ"],["@@ÇƟÓŜŔ"]],encodeOffsets:[[[127014,-9565]],[[128070,-9740]],[[128662,-8335]]]},properties:{name:"Timor-Leste",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@êßőǥƀǜ¿"],["@@īAĎÚ^×"]],encodeOffsets:[[[-179365,-21677]],[[-178128,-19086]]]},properties:{name:"Tonga",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ݥÅ΀ǘlˮơĬ؞ĺĭƝl҇"],encodeOffsets:[[-62476,10378]]},properties:{name:"Trinidad and Tobago",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ȡbpŴɮÅ»ď"],["@@ŻÑŎŜnÉ"],["@@ƇȅĐ֯ſǟŅŽ́ƃʛ२ÁȼĭϜׯЄȃјȡİ˽Ҟiؚ̦պȶĘèĴÛϜ״šŶͦ˄qĔतͺŴOƣĴ˒£ĆΣĴ¥բ˺ÔǕձחĪʍΎɅĮͥίҿӓͯÍȉɌ˟΄TƥȢĦʤˉ¯¹ʪÉCuǅOËKɇäıD©}¹ŭËǃõƍëƭû¯¹ƍûŏǋǛ§"]],encodeOffsets:[[[11221,34532]],[[11549,35588]],[[10522,32446]]]},properties:{name:"Tunisia",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʩ@ɀĐªď"],["@@N£ʂ͙ŷȥĆ̗ԼïД˱¤«ȕĲṶ̈̄̅ȾғvϙŶ©ȧΩ͈ǓaɳȄŧ{ůp½PÁFǡıÛ¡JÎNŴa hďXƩùƇHӫŠŽƋ SėĥƯķągĸ iL^Qěéơ£঳·ɉõιƷˣñƹŧkȽAǛ^şCӗǬʇěƽ§ǑÅóğHŝRķEã¦²ƑıT}qÛ§ǏQ£Ċȉɕ¿yƗũÅ¡ĕuCƇà×Nçͦ͆̊ŝɄտ˯׃ȰࡑՓݳūΕŰ̗֛̐ɠשÄǕԃٍħϹƘɇ֑͠ĆʇƫÆİՋҪĴȦǔࠕ©ŲȠϻдƀÊRɈ߉ʢŴ̪ȞʱЂĮȥ~ťȒɂƬǗØżƟƪǼɎډçWĐäΞҴΈҠ²ǆŕɆRĶ¬ĭĎŤĬowĵ࢜jȁŦƞĆݠŊءƬʄᄚħǠǲ܊Έࣚʎ଴½ɌĚŰŗƦƋɖāв¢̖΁̺öʎƯ૆ɓ࢜ƶ۶ũیʦ˦ƌĄĀǈà}QĒÂҒ±ĎĴpXbPÚNÔM]ÑîsŴĩüng}mXy¬Ȓ"],["@@ҐnƸΑܠ˗čȅڅÔ֡ěȭʉУǃӍΟ¨ȪҐʾֽ_ÉĮʘȒAʆʚƎǘɕĬîŶtÐ~¨dɨvêƶd¨b¨[ưŏ"]],encodeOffsets:[[[26594,41100]],[[44476,42144]],[[28135,42954]]]},properties:{name:"Turkey",childNum:3}},{geometry:{type:"MultiPolygon",coordinates:[["@@ĝʮʌǏ˟"],["@@ÜǳûÇʣʀńϚǀϝ"],["@@īҍđÚvψǈl"],["@@Ḯ႗ϝപ৏ΕୃÎɗ֠׉ɏгCɧŢsZǕŗεŮнǄȿìڵبϵЋ̙ƟûۡɉзȷӑĴǏʉƷāƙͥŦ֡ŝī_¾ýÒƝêŁDŻŉÉgũfȡRȉGmĬÎĭ¬ƓɖºʎćҪȽђ˙Ȥęƥ߿ɚƏîہɦqĦhËjŧMįĔěŶć ɱIĝ¼ÛÞ½öğʀ˃զÿɎčƔęĺŧĦƍĤõÚĳȈ¥äŢuŮVºĘǄV¬YÔ©ŶǙѢeìDÂà˶A ˆKȔŰϠպ͈͠jƄ}ŎÑPėõd¹rmfQ¨¤ň£¬dzüǀhvFÂp¸T OÈvÖlĺWĊÞKͼ§Ė©¾ß|ĽƆÞN¢bTHŸXÎÊZ^GlG౶@ಀ@"]],encodeOffsets:[[[40665,-8168]],[[40445,-6322]],[[40822,-5023]],[[34717,-1026]]]},properties:{name:"Tanzania",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@BµF«WίͩĕŔȽ«ŠతǼʹRː઺਎ÛȎϓƼİ͢ûǎŸ̰Ëè˂ʜͪĝɂŀ˴ʁǘƾ֌ƤаĿâ´ƢƢȠȢƀ˥®gk³ĒãłHǋP¯ǍϪַm¿æ̗ZǙAţƫЋˇǝÑƥȿəǽγধ౿@౷@iF]JÉYÍÕeáNSG"],encodeOffsets:[[31243,-1092]]},properties:{name:"Uganda",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ś£ӯĒ¯Įцƛ"],["@@֝aؽ̡ȡ¤؛śڿѥɠƤ¥Ɗ͉ɁƢЩκ͓״Řͼ¹Ƴ˟ѭ¹ͯþ͓ʝԯåһ˫ϫƔĖҜ࢟ʲঀҘÏŲƏȑİ؍ûթǖƪŰϟľڲáǼŠ҃vʇӐĨҿ˹^ĦƇůԙÛӝֻӹŧÞϱřĢƏ¤Ʊaˡħĥj]ol˱ªő°ėĔ¬^Ǆh^°mþÐÐĘ¶¾¸TîĢĊÒrÞ¤¿Ħ[ÖEÀǀÌE^eHŁhEȠÞ͈ēTǔd²ǧĬVðPČq¸ʱŖĭˠˏǔSЌםƶéEړˬˏę˟@­`ǧýkƩ}ɻȥɇsȁȋkСƽͳǨߙÄȁKǥĂÁFəŝěƌƽrˡɰķCVƎŸİĀǀŔƄ^ʸRšø³̰¶Êˤʘ֦ДɖĲĸHðćǊČÂγπ§ǸþĮîGÖ[ðxLŰÖźĢèþத²ࠨŷƮaĸNÌQżŽͦqTāƆĪ֢}Êg¤ïcKĲĜàl¨Tx¢vDȴȵۄĄʐǡƶæiªSÄ¼yÄ¨þìŀôæú¶ŔĀȦHņ°ȒFǄM̠§ˀɎદ֎ӃɵďþΣ܌©ȼƇɼ֥ѴцǗڬǞԾЭǲŎֈȑɎԘʅʦJz˙Ρȱˊƽǯ[ŭǻǆ£ĺɯƭ͍݇ѿȵŻѥ"]],encodeOffsets:[[[32781,47313]],[[39132,48222]]]},properties:{name:"Ukraine",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@½ɤĄĴĤ¾öJÌ´Õ˴mxfÈĸʎΦ˹Ά͝gŻ\\óŌTȸǲrNs͒͹è²ϖǥ̵̰Ϫǝƈ̃А˫õëăęíéó·{g¿@ПƊñ£«Ï¿Ɨǩțŋ͏ʑ؝ə٫ƂӛĿޝϖօqӏӄؘʀʎŘǆĂàŴHÖÂYÈjÊGÄyÀlªŀĔìǆjàŠȄrücƖÚà"],encodeOffsets:[[-59198,-31599]]},properties:{name:"Uruguay",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@ʥ¸ƕ֮ȔɞWɘՐɿͨЁٷљ"],["@@Ľ_ÝžƜOō"],["@@ǬhʎǍΙŷÑǒǽŮĦðĊđ"],["@@т»ŭĉα´ÞĒ"],["@@ƐűЋXƍɢʼĮƎȵ"],["@@ȣmƱŎǮƴȒGiʋ"],["@@ýMǨ¤ĩ"],["@@Ǖƿ˖ͤĿǣ"],["@@ș֊`͂Ǻࢋ"],["@@b×ɡժɀӑ"],["@@ǳĠŌèş"],["@@ǫU͊ČƝõ"],["@@ıkƂĘë"],["@@¨ÕůJĽŮȆá"],["@@ǩĄưZzĝ"],["@@˪©ɓ»ÕĦ"],["@@ũeź¶Ьˏãǫ"],["@@įŵŦǼuÅ"],["@@ÏÃ֬Şઓ΁ۑÓŖǮʲņߖÔ̐Ɗȣƕ"],["@@ɉlǈĢÂō"],["@@ˍcǶĊĘå"],["@@ĕmĪƺSƋ"],["@@ȋĦƌĦĽ"],["@@ĭpŌþÿ"],["@@Ǆȝ̝ʪĨƆð÷ŻÅľÓ"],["@@úśüķ٦ŕŨåˤúĴXΠ»˰ŏðƃÈ@˾tԲȳ̀ŖǠNÍૼœࣞʴՔȯҊǳ҈ǱࡪΓӨȫǎãǮ̙ȌˊHŪΗ̦ŬĹĻƫ֢ʣ̲ƝÈɛ̆ౙ©ą̗܋Ӄ̽ɱϞʧɂ@ϸǶϼǶЖŨپĲࣘ͐ɐƈÅÔöę̢Ɯ¼Ƃ´ŀɘNܦEٶ@ՒԪ̰ȎΘʮͼǖȠ|ĊJᥬFǄʄϴgӌՔʐڬٞيǊĨǷלŔήɛJଗ̴ĽÈίȰGŚ˻ǡŷկĉǽǉāĲʣJçȽɻæ¦Țϵӫʛ÷ðÇđ{ĨŽȅƁêǵõҭבăȳǺǝηʕʶđˀЅΦÎȩɞŎYŌį|ʅשţưϽȋhɌĹÃĳĪŏΓ୵ÿࢿ҅Ĭʮĉǎ˭˱͕ʖŇěԣ^Ǣؕ࠭Ƈ©¶ǐՃ̂Đʦ̊ǎ˝ŷƽǅǐҡʮ˅ĉƽŰƑݩੱȸˆҲǇdO͠ǉçǵƀBƐȺtǑŐŅ£ƢŦƉČǎŊčĠêļɸ¼ŅŌĎïØˋə­æ÷ƭųŦţŋ½ƐבʃȲR×˞ϙѵʬmćģŸșǞКȕʏYȻȐJڂϵãǽůNԱОҾзȴćǷř|«ĥʭȚЊϟį»ȗȘԳĜӠſƺɵШ`Ϻࣿ΍۸ƹƢ̣˟ƔCŏķ×˧čƥǶPɫրZ[ɻȖɨĂį]ǑͱʗˇóŖƏďʡĆѶɏɟɻʓƐĂŉȘëʎ¤Ă­ßýܙȫĭņǡ̷ȯƫ́sȖ¹ɏͣLλǋ̑Еƈ¥ɧѻ̇ŅnOţΟƕɫXƈ÷ėœȇƈĞțΙ˱ ùǋȽìMǥƭþõŹÃ×ͭɢࡑ؎વ½ǵň̷ŹɶF̄ñƫJȞűƮǿזೕÛࠋ̝ԓՁûsƠǐơĔɁ϶̍ŶȱюŊǔǯœvΆȕĥǕǰɯτʸ̨ɧĎÄƽōÉčŘǈ࢔ࢗ࢐̋ƬɟÕƁ޻ȑāò@ÚĊëİ˓ȸÔƒŵĵחȜ˦NőòߍŹǺüWŜơġǗǏxČƣŇ͑Ǻ¼ȃ͸Ľ˝٧¤ΓÏɣƯҋǠǥùåřȦģπŦÖ±ųğƸēȘŤ ȏ̯ǙפΕŝƻãÄşčÇǴ׹̀ĘǛƅșƕǆ̹ƏҏƂŞ|ćȸɟQ͇ʀȯŗ¨ęƩޏȆյ­]Ɋ£ʓܳʯȞƐɃAǞɿŔ˧͕Ϳ߯ЍȊŦοǇĪȀɁɉĭćäÅȏˉ§`éĚĝ̝ůŤƕų˻ˡňÚƛǪ¥ÍɩĴЙʐѱȕ÷ปӚ̉Ԣ£ЮړټϩܖֻԂۡẴĳɷ҉ɵǽ߉͚ͥʔЋࠀঙڰʡˊ๟XEϙᛟIẗসĢǨ፹Ƴ˵٘ԧΪˣlăɰՙĂϱʴܿ¬ƏĞ[ҘǕòǺ͑ɂӿռÐѪӳ̚ĕˮ®Ɍ̀ˏ˃МÒ ڐ¤ܱöŅˋΉȔÇÇúǪڗװōܲѱԂʈࣶϽଔ݈͠Ȃཔ»դ٨ÅȵİԛRz˚Ċơ´ȒȉǠɨĎɥÔwåȥעʉˆ¡΀ؠǱࡄāǐÂĺɋĹţ°ˉ΁ǼlŧOfâѠφţʳĈˍǅÙ»ĲǗǓ˜ÿɖ¡ΎƈȐɳŰĞŒɕƠƢaƐ£ĞĽb¸ÇŞ୎@෤@Ϊ@Ψ@ܒ@੼@。@。@　@੼@ܒ@Ϊ@ܒ@ȤAN͆ʨÅM¶ɋ"],["@@Á¹ÁĜń¡"],["@@ƯnÔüƳŜѲÛȡƩ"],["@@ѭ_ҼȔǳ"],["@@Šŋёōɚ͎Ęĳ"],["@@ȉØļ¨ĎĿ"],["@@ƑjΚǚɇȃ"],["@@Ѿ³ڿƁÚτZ"],["@@ŽBŲĬƀ·ųµ"],["@@ԱYࠪǎŇĎɢĔļ«Ùțҳč"],["@@ˏ̼ú«ŕ"],["@@ԾƉсċυƼˊÚ"],["@@िћͲͪʺ´þǼϮPŗƍ"],["@@ȲĈŢÅ˃ǧǆ«зȃޯŷըȐĶƠǨ«ÊÊ̩ČÌň̪Ä¶ė"],["@@ǹa}Ĭǎǚęů{"],["@@VŰŤóŹ»"],["@@ŕìƜ¬ŗ"],["@@ĆƑʞūɱÈ௹ˇÁǂ΄ʤ֠Ť˦Ë"],["@@đāÔƚ~×"],["@@TǇəŚvȨȐƹ"],["@@̕ǥ°ǚʈŴ^ŧ"],["@@ȴCóǩ؉Զ˨ùȢˍ"],["@@[ßƣØǀH"],["@@ŎÆÆǏʵÒɔ÷"],["@@́ɱñȒδ "],["@@ƟRŦĂzē"],["@@ǫʁɓǞ˃ȱëɂȆΒ̘ľɬȑfȩ"],["@@̨gĚȕоǏΦΏ˵ĨĵķǶTǰɑȘ_õеࢭԪƈÌÙǌիǐςŖŉĬ̷Ñǲƴǌ"],["@@ɉĀŐĦɮųƏ"],["@@iƓŻ[̹ŲɾΜˀɇŕ"],["@@ħ²ǰćó"],["@@ʀƃ£Ļø"],["@@ǛĘȒɲǿƭ¥"],["@@ɂǍǯѯȫ§Ę͊ʏ͎ȘĀźñ"],["@@̶ÕɅÙ³ʙǬƞ˫˛еҶԦK"],["@@̯ÓöŐ̈́ĉy"],["@@̌Տ½уʣʬĈƈϓŤŌǤɉȈ̛ȫUɬ̾ɈДƷ"],["@@ЀD­ĹɢŃǑĹѹɘŹԁĳϫƣøû͓ƵȠǲϙźăȇ˫ѴҶǤά̃ŹҶ̔ōɪÄ´ƪʼÙ¡Õ"],["@@İɅɢŐ͢ğ_Ǖ̱¡̠¢ȱՏƼŅȷǿvփѴȺȺƬķ¦Č̪ "],["@@φcΖџЁΔ͌׉ԕʹ|τνܼȲǋ"],["@@ϊ¥āōǗÖįʏzˣƙϟĀ;ǮǢeÍŚΦ³"],["@@ų´Ȭà÷œ"],["@@ǱüΔńǡǿ"],["@@ȿWǊĊ¶ñ"],["@@ŌӲΐƊs׹ѧ"],["@@;ÍŚͳҳűࠫȴʟǖԌV̢ƒ˺B"],["@@ʖѡřëŔʸ"],["@@ŇɭēĸȜŶ"],["@@іƃͻ|ΉȪʰġ"],["@@ή¯آĂضʳ۴¿ćԓʽǷţƔࡻ˔ڃÿī̐ʄ¿"],["@@@݁@௯@݃@௯@݃@௯@݃@ӫȪȦÖæЖĭʠŪψVžH@Áµě¡õˈřҨ˭،͓ÔʻèYƊîŶ¬˂ĠȠDĦʶǂjŀԴľˮ^ˈƑĜʑɢõʆǅÂÍĤ÷֠̅ɬɽɰɱϜϗĜýŢŋÎÝ¡­·ÅƴŀkÕąȨÃǝ̒ۖʗƠÂĝˆ[ìƃǙޥ̣ɋɱǓ̌ʤƈ͇դĂņفǱǗ˻ơÄ©ż̨΀ʘ ˱ʙƮգՖաĮƵЂ҂ÛΙɢ˺̩ ƍãʷȒżϒ˧ʇӉȄӳߺśǻΌߧЙƔ˛WũΠǼÜǅqŏƦÛʃٙɨÏƉϐÃŊǇɒ_Ɛűҟǫ޽˴ࠃӬ੏̤ɔƞBɌȎ˽ÆǬȞ`ϋƪࠧʩࠩǊ@Ǹɗŭੳń৛åŔ׹ƺǮˬҵʏճĈȊƢݩàƮèȷðƀ˄ºങȇĩàɈɂӹƅCǥǱwʦŵ͑ƻѪîž÷ϻзۯTŅĜǟ˯ĭŲñƳǡ ǉǽ΅G˝ˁȽ¨үģǱÜÆĸРŊ̔Ɍ͹Ĺ͹ŎϨвϖޒʨମŭࠓʜԶˢҗȃՕl࠙ˑߓ׷П~̬ʡҩŽĲŏҹ¿ѳЭٔǑgǣ܍ϙŧٕť٩ϕփǩǋ̋ງӗřĻɶįȓőñĺǕǓ؝ƩŗƹģǺؓʭݏƓ½ŢȰ~˅ÚҳЕʿñȳǎȿǅɉĢWůǡÝ´ʂ̺Ø৬װМĪˈwęęǞŏĆĮΒÅȻǜȦʶ୒ӌȲó^ȶ˸ɒЌȖ͒kȟƢð̺ΖŤʛºƘҤ˄ƔͰ˩ɍࢣɛʿȤàŲ̂m˻ĦɋƇŋj҃Ƌ؁ьȿùωȚݑɃĩŉڅsΞŴäˆ˱ŸϊӽאϬΌ؇ΩĪɻटǁϳĄݑԔ˝Ҥ̎Фķ­ƭ̼ƤɨƧʸƖСĆː¤ƍÈȵĕवÌȸƮΉ¶LĘʕơʡȞfǜʵT_Ė̠ɧĜϺÈāȘњ̼ξpƚǴǟïMʜΒĦqƺϺ˜ĹķğȞøǼ¹֔Ȃ˶ɚʸÛܾĘ˒ɖǫζхƶҸŨÜƪɱƜՇğࢡχͫɸºȓӍƒ੟œএň˳ŪÆǖљȘ٬ňਹŘֹȢහФ٦Yũǀ૆ɨ۔[ɋBŝ̡˴ō๘ДȪΞýïŪڝÞՃͦƴŤ٪ЧଠŇǊх¶҅ıϫŰŘːຽèӿшᖉن΀ÆƞϮঔEনżဤજǉƛࣞŤ݊ʌɂʿ¨Ȁάx׍ĢʹŶ̮üÂŉૼĤ௄Ң@ĭݠƝӉǉƤïڴɎࠆʡ߲Ōذ§ɐÑƓǃՊ»Ƨĝᖨ¤ೂʃཐµՀŵဖĞіéદ͉;E@݃"]],encodeOffsets:[[[-159315,19469]],[[-160613,21272]],[[-160242,21435]],[[-160986,21725]],[[-161586,21972]],[[-163197,22459]],[[-82989,25311]],[[-82311,25746]],[[-99502,26788]],[[-82111,27934]],[[-93996,30209]],[[-86945,30355]],[[-91365,30807]],[[-121188,34187]],[[-122924,34733]],[[-122759,34898]],[[-77357,36086]],[[-75912,40634]],[[-74250,41970]],[[-71657,42256]],[[-72202,42370]],[[-72951,42488]],[[-69823,45397]],[[-125331,48533]],[[-125514,49313]],[[-97078,50179]],[[-180517,53036]],[[-182148,52890]],[[-181399,52958]],[[-180831,53112]],[[184042,53152]],[[181674,53128]],[[-177718,53388]],[[-176603,53527]],[[-178869,53284]],[[177893,53617]],[[176960,54286]],[[-171995,54626]],[[-170614,55195]],[[-169821,55369]],[[-169534,55436]],[[-166193,56164]],[[-167399,56301]],[[-163343,56476]],[[-134491,56402]],[[-163709,56452]],[[-136050,56212]],[[-164177,56666]],[[-164541,56643]],[[-136504,56877]],[[-159299,57161]],[[-134122,56821]],[[-136771,57692]],[[-135966,57598]],[[-135283,57456]],[[-157909,57872]],[[-173829,57995]],[[-135932,57883]],[[-137205,58210]],[[-136567,58372]],[[-156679,58496]],[[-138209,58728]],[[-156567,59212]],[[-138987,59643]],[[-137912,59558]],[[-156074,59761]],[[-156145,59889]],[[-164781,59983]],[[-151574,61507]],[[-151281,61249]],[[-170122,61833]],[[-149907,61901]],[[-151202,61902]],[[-176888,61909]],[[-175578,65168]],[[-144386,70425]]]},properties:{name:"United States",childNum:76}},{geometry:{type:"MultiPolygon",coordinates:[["@@§QûD«TæBbëĄÂfE´ÍŰmſ"],["@@d´fĂèhiGo࢟ӹҬƝńƧɀÓǂ@Ā{`ZZǦƺt¸Ƥó´s]ÆđjĭäOĀmÂn¤[b¯LývWŴ|ʜƣЊѹʫǝªYųɏXρʋ͛Ŕˁ_ʱɿƸ͊˴̋ˀׁ̙ͅĢųǙÌ̳է}˼ÝƕÂţȕÍƧʩسîʗſËȽʒí ŗπÉϡɚɗ҉؋_ȯÓMx«xýI÷ÙQĹ£ĽtŃČȭʱoWĢBŠ^ƾäǜՓɐ̝KફبҝƸ੿ۆӣरͿƶɇñڍ̫Ʈ[̠ŀɑƜȨՋĦٝϤĥĭ˙˔ˡϏǂǷʡѯÇ˛ɡżэčñ࢓¸AᶢᓢҼᏠউࠜݷৼŘਢÝϴƎӺͻʴεʠĨùࠡЪUǰۅਐdƪƗÅȁȴŹʀXɈӎҤຘۖ"]],encodeOffsets:[[[72916,40850]],[[72650,43263]]]},properties:{name:"Uzbekistan",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ÿŊňÒǛ"],encodeOffsets:[[-62642,13474]]},properties:{name:"St. Vin. and Gren.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@Ñäźļ®ķŕç"],["@@ķǦĈíÅ"],["@@ËȳСĂǄĖƺíưŊ"],["@@|SwÌǷͯΏɷeғˏ˧ĉɏ¸ʩśŧΥЙַ̎]Ɲǔ͑\\ǱŖĴɛϖΥƦ࣭ւùɋӛȋǑ͵ݱΟ̳ΕéEžƃŠ͇ǕʋeѻϦ˫খ΃ͺȫ@ҢԺ̍ϖǋզ~ٚ̎ֈOɀ̓ĠԧŏߣםۤԛŘ͡ē݅Ǜ˴ɝźèٚɳ˺ŋКɗŴʵÅ̠ԄŘמừψ̤ʒЂ՜ǐ՗ʕĸ͉ǌƩõeŘ˱ѥۻв٣͆Ħƀǀ̜ω۞tδਤ΄ŖŮʖWǖ́¡ÿɘìǲǖä̼וڮ¡ήɫĒЅƀǑཤŞͪ̿؈ƿɼz֌̠Ϧџ§þ᎚ĘсǍ҃]Ȓȯ¯ȝǆŨȖΗČČÊ»CƂâG˺˿}ƶƬäڞ҃ȗǥȋү̷E˄ƽцƴՒrŴÉƼȱcµĭ³s}ĝЗȫǣɷĤǷuğ¦±¼W¶nÖC ]h_H}÷³˕ƫΫÕµęnÙ~ÇA½pƝÅßãóġ^ǬțǶȥǲȡ"]],encodeOffsets:[[[-62461,9081]],[[-62280,9358]],[[-65381,11399]],[[-62199,5327]]]},properties:{name:"Venezuela",childNum:4}},{geometry:{type:"Polygon",coordinates:["@@Ƽʷ£ļþ"],encodeOffsets:[[-66320,18222]]},properties:{name:"U.S. Virgin Is.",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@̥ƙ˼Ǹj"],["@@ĹmŸŊ}ě"],["@@ǗĽÔƨń©"],["@@ҿȉ±ȕǃęЙªÐɟǟǩnœӵϟ̥ࠇɢϵԢұgȑĝx௴ணǒRڔߟМ౫ӝŸ˗j̗ğŶĭėðɉĉrOׅƅŏ«ɋݡσÿƩث˓ɉɚ·ɕȃŖķÏŖi`űʗF˒Ƴǅɍϫ̦άэãſչψˠͿTǓ֗ʭ͕ϵ́łŲÝ²vڮȪ͞ʁǨśȥȮΤļǒƖAǮɨÇúĚ̌ĈŁʼÍEȲʯɎI˺žļͤÑ^ɘʊ~њ˚ƲĨĖ֔Ŋ΂ɯׂǀӠIĨV®iqÄÚÞ¾ÒhÆ°µæĕØķĂ·¸ĩƸpƠê~HüϹʺĲeV©éġƄYƜO²oÞțɜɛǖ˃˔ēȸÏĀ¹Ü˿Ʉwú¶ĶD੉ռHtĄ°ÀWæêfzFǔNʊ×PžŖ¶è\\ÊĨĪBÄòűFkh_ÂIĹĕVqbÒ®t¨üȟƤŻþÿϹȽƟêɅ¼ęªȁʼÂĊΒĕ®{ÔcQwõÝCáȔϣЌ¤¼ªƜȮÄіʫ̂˔ƔƳņǌ˒ȭǜɔȔąˆĲƬ˄ΊǬӊΡʰ¢Ōĥɚ¨ȨŉȕɷĨѭʶ¯͊˅΄Ǵū"]],encodeOffsets:[[[106562,10641]],[[110102,21429]],[[110186,21727]],[[110564,22025]]]},properties:{name:"Vietnam",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ŧéŉŮ~ŌȴǏ"],["@@̇Ì|ȒņZǆʷ"],["@@ŞŹ»đ̭ôĪƄƢT"],["@@ɟsƖʾš"],["@@̯ĜȠŮŐɉ"],["@@Τ̓͗ėčʹǓØ¢ǐŖÞƯ"],["@@ȥ_ˠƚùŹ"],["@@Ä˥ɠȆŀэęř˯§ŃȎÁٜƬƹ"],["@@ŻgĈĄ²àĳ"],["@@ąĲöâPǓ"]],encodeOffsets:[[[173560,-20009]],[[173399,-19394]],[[172489,-17963]],[[172490,-17181]],[[172336,-16728]],[[171431,-16482]],[[171942,-15806]],[[170748,-15182]],[[171607,-14603]],[[171509,-14240]]]},properties:{name:"Vanuatu",childNum:10}},{geometry:{type:"MultiPolygon",coordinates:[["@@ϧœŨϊmŲƕ"],["@@ƀȁ¡ĳʻZȱɲϐª"]],encodeOffsets:[[[-175569,-14383]],[[-176469,-13788]]]},properties:{name:"Samoa",childNum:2}},{geometry:{type:"MultiPolygon",coordinates:[["@@Τv˘ġ͍ǉ·͹ǶȀƶȔß"],["@@ÇĖþ½"],["@@ÿÌºtą"],["@@ُ̕Ź˱ʧݧίဇӳֳӳ֭Cӧ͗ԳǑोŃԳѭΝBԥǫ̷Řūɋӌ¨ΨǋˌŹެãǎǕČŢĀçˠĺ̈́˸̬ˊv֜ȒƂмǇਚĒ͚Ŀ৊ȼʽƖMʤƒŚ˲ӾתܶΦូΒजጉ"]],encodeOffsets:[[[55054,12941]],[[43783,14034]],[[43815,14307]],[[54360,17048]]]},properties:{name:"Yemen",childNum:4}},{geometry:{type:"MultiPolygon",coordinates:[["@@ɡǘÐÊę"],["@@ƾӋÃ౑ӯǶŅóĳřʇεH̹ÜM°ĻŀǓǰŁǐ³ɰ]ǺHYŐlǴxŤ~NôyòLźyΤVĠD̏଍ȽΟߙٍ଩࿋౫ફହݫկȧԻnșʣӑ¾ƩǏșIݭƴίõ׵Òʷ·ϧʭੑùё˓؇ƞĺțŤɡ[áʀɃuȧğƄæІӧݞĪĴƆǜȴīٚܧઢͭ࢔ǭͨʕ͢ʶƒ¶nŌü¶¶ļŎďƞŗöέܨǁ܎«ìÊƚȐƄφļ@Ţ@ᲄϜ̵̦٥ŷ۝ĊęߤP¨ĆȈØä²łǈɈƜÞ¦ɾ֦ɪƚȬEъʹÚsȊMŚğݐ[ʰĀͦޒĶČɠ¶°͒˼ɀ֎ֶήͮΐՊǴĘðÊĮİÆȠhZBʈ Ȭʎěɨɂ̦Uļú³ɐࣣɈ·","@@Ɯ˳͞ˑʮÒĚɜ̈́ɊlϜǨȀŶŒ²ŀĺíȖ֧ђYģkȩïůßĿÿȉÇχӡȥęŘ˅"]],encodeOffsets:[[[38766,-48070]],[[32563,-24465],[27847,-30659]]]},properties:{name:"South Africa",childNum:2}},{geometry:{type:"Polygon",coordinates:["@@ĐŽĐđ[ûuëǾǓRį`ĞƋ̳ʣòʱģȷ[Mįàſ©ΟôǏƠҋ̓Oѯʟ̫ńĉƸˏƖÌ®Ó᠁ࠑƐշޅ­ӗʓŷҙ̩۟މࢿȭéϑĦ˳إƪɍȌɥ¨ϩݧƇঽ࡚ǵ֢A౞@˒@˒@ڠȘ@൒@ĶZåǄH²pĜØފcܔͲɑXʋފǤ¼Ή֪ɡڢÙˮ͖Βխ۶ʓŜˋƮõʆϋǀ{̒ŲȄǃjંʋÓmǅΟÎӥҌċȶɘࡢܸǟϢЀτzʦ༔ʖâǇ¾õÜÝĞ»ɰJĊð¹lûİēȶFÝlۂɥƎíÜǷŸf"],encodeOffsets:[[33944,-9834]]},properties:{name:"Zambia",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ǵḀ̄TɁ}ɩʍĜȩʇYA¥ßàǍ¾aȄࡗȲ́ЬTҼͯrđ͆ࡓӀȕԌבࠂ`ƨئƩ˴ϒĥȮêފࣀ̪۠ŸҚӘʔކ®̑ڢyעͽࡐʃÑƝĮఏʗӥŴƍÓʇǸԃп֥śЏÜƉࡁࡃšđ"],encodeOffsets:[[32039,-22939]]},properties:{name:"Zimbabwe",childNum:1}},{geometry:{type:"Polygon",coordinates:["@@ڽը¿ުەߖ٬֖NΦxHޠцǒŴ\\ǔéº`Ęfú[ǜ¹~}¢ũYĨĀcĖÌ£¢áfÁnÛ½˩ƄÇÞŻ~eÖBŒvİ¤RXĩÌĄ§a÷Îŕ÷ĸȣ¡ıǽûsmQ}«»ď§řjʅõōDđ³Û«ŷ³அɘŅĭāuƕɳ`«Ī¢§NÙéõʠ{ɩɥƤǵšɇ"],encodeOffsets:[[75785,34052]]},properties:{name:"",childNum:1}},{geometry:{type:"MultiPolygon",coordinates:[["@@͙̄͟ƹիԠύfʛϋӻýģлʫ@˭ƪǕIđmɜ\\cȝ`¥CƴˁȖƈʊƣǶɪɦʟ|öÜêO¡¨ĩ_¬ƖɴĂxĮņஆɗŸ´Ü¬Ĕ´ŌCʆöŚiĐ¨®¼P~tnǾü~Ðd¢̀ǊŰÜŀÄĒ¬Ȳ_́êǁƘ˹ҎǹÒĽȱǷ´ǡæͅìíƐĵn­ĵ§rчɃŝƑŢa¸ȵw"]],encodeOffsets:[[[80376,33312]]]},properties:{name:"",childNum:1}}],UTF8Encoding:!0}):r("ECharts Map is not loaded"):r("ECharts is not Loaded")}))},"620a":function(e,t,r){"use strict";(function(e){var i,n=r("3db9"),a={supportWebGL:function(){if(null==i)try{var e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");if(!t)throw new Error}catch(r){i=!1}return i}};a.Int8Array="undefined"===typeof Int8Array?Array:Int8Array,a.Uint8Array="undefined"===typeof Uint8Array?Array:Uint8Array,a.Uint16Array="undefined"===typeof Uint16Array?Array:Uint16Array,a.Uint32Array="undefined"===typeof Uint32Array?Array:Uint32Array,a.Int16Array="undefined"===typeof Int16Array?Array:Int16Array,a.Float32Array="undefined"===typeof Float32Array?Array:Float32Array,a.Float64Array="undefined"===typeof Float64Array?Array:Float64Array;var o={};"undefined"!==typeof window?o=window:"undefined"!==typeof e&&(o=e),a.requestAnimationFrame=o.requestAnimationFrame||o.msRequestAnimationFrame||o.mozRequestAnimationFrame||o.webkitRequestAnimationFrame||function(e){setTimeout(e,16)},a.createCanvas=function(){return document.createElement("canvas")},a.createImage=function(){return new o.Image},a.request={get:n["a"].get},a.addEventListener=function(e,t,r,i){e.addEventListener(t,r,i)},a.removeEventListener=function(e,t,r){e.removeEventListener(t,r)},t["a"]=a}).call(this,r("c8ba"))},7037:function(e,t,r){function i(t){return"function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?e.exports=i=function(e){return typeof e}:e.exports=i=function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(t)}r("a4d3"),r("e01a"),r("d28b"),r("d3b7"),r("3ca3"),r("ddb0"),e.exports=i},"90de":function(e,t,r){var i,n,a;r("7037");(function(o,s){n=[t,r("313e")],i=s,a="function"===typeof i?i.apply(t,n):i,void 0===a||(e.exports=a)})(0,(function(e,t){var r=function(e){"undefined"!==typeof console&&console&&console.error&&console.error(e)};t?t.registerMap?t.registerMap("china",{type:"FeatureCollection",features:[{type:"Feature",id:"710000",properties:{id:"710000",cp:[121.509062,24.044332],name:"台湾",childNum:6},geometry:{type:"MultiPolygon",coordinates:[["@@°Ü¯Û"],["@@ƛĴÕƊÉɼģºðʀ\\ƎsÆNŌÔĚänÜƤɊĂǀĆĴĤǊŨxĚĮǂƺòƌâÔ®ĮXŦţƸZûÐƕƑGđ¨ĭMó·ęcëƝɉlÝƯֹÅŃ^Ó·śŃǋƏďíåɛGɉ¿@ăƑ¥ĘWǬÏĶŁâ"],["@@\\p|WoYG¿¥Ij@¢"],["@@¡@V^RqBbAnTXeRz¤L«³I"],["@@ÆEEkWqë @"],["@@fced"],["@@¯ɜÄèaì¯ØǓIġĽ"],["@@çûĖëĄhòř "]],encodeOffsets:[[[122886,24033]],[[123335,22980]],[[122375,24193]],[[122518,24117]],[[124427,22618]],[[124862,26043]],[[126259,26318]],[[127671,26683]]]}},{type:"Feature",id:"130000",properties:{id:"130000",cp:[114.502461,38.045474],name:"河北",childNum:3},geometry:{type:"MultiPolygon",coordinates:[["@@o~Z]ªrºc_ħ²G¼s`jÎŸnüsÂłNX_M`Ç½ÓnUKĜēs¤­©yrý§uģcJe"],["@@U`Ts¿mÂ"],["@@oºƋÄdeVDJj£J|ÅdzÂFt~KŨ¸IÆv|¢r}èonb}`RÎÄn°ÒdÞ²^®lnÐèĄlðÓ×]ªÆ}LiĂ±Ö`^°Ç¶p®đDcŋ`ZÔ¶êqvFÆN®ĆTH®¦O¾IbÐã´BĐɢŴÆíȦpĐÞXR·nndO¤OÀĈƒ­QgµFo|gȒęSWb©osx|hYhgŃfmÖĩnºTÌSp¢dYĤ¶UĈjlǐpäìë|³kÛfw²Xjz~ÂqbTÑěŨ@|oMzv¢ZrÃVw¬ŧĖ¸f°ÐTªqs{S¯r æÝlNd®²Ğ ǆiGĘJ¼lr}~K¨ŸƐÌWöÆzR¤lêmĞLÎ@¡|q]SvKÑcwpÏÏĿćènĪWlĄkT}J¤~ÈTdpddʾĬBVtEÀ¢ôPĎƗè@~kü\\rÊĔÖæW_§¼F´©òDòjYÈrbĞāøŀG{ƀ|¦ðrb|ÀH`pʞkvGpuARhÞÆǶgĘTǼƹS£¨¡ù³ŘÍ]¿ÂyôEP xX¶¹ÜO¡gÚ¡IwÃé¦ÅBÏ|Ç°N«úmH¯âDùyŜŲIÄuĐ¨D¸dɂFOhđ©OiÃ`ww^ÌkÑH«ƇǤŗĺtFu{Z}Ö@U´ʚLg®¯Oı°Ãw ^VbÉsmAê]]w§RRl£ȭµu¯b{ÍDěïÿȧuT£ġěŗƃĝQ¨fVƋƅn­a@³@ďyÃ½IĹÊKŭfċŰóxV@tƯJ]eR¾fe|rHA|h~Ėƍl§ÏlTíb ØoÅbbx³^zÃĶ¶Sj®AyÂhðk`«PËµEFÛ¬Y¨Ļrõqi¼Wi°§Ð±´°^[À|ĠO@ÆxO\\ta\\tĕtû{ġȧXýĪÓjùÎRb^ÎfK[ÝděYfíÙTyuUSyŌŏů@Oi½éŅ­aVcř§ax¹XŻácWU£ôãºQ¨÷Ñws¥qEHÙ|šYQoŕÇyáĂ£MÃ°oťÊP¡mWO¡v{ôvîēÜISpÌhp¨ jdeŔQÖjX³àĈ[n`Yp@UcM`RKhEbpŞlNut®EtqnsÁgAiúoHqCXhfgu~ÏWP½¢G^}¯ÅīGCÑ^ãziMáļMTÃƘrMc|O_¯Ŏ´|morDkO\\mĆJfl@cĢ¬¢aĦtRıÒ¾ùƀ^juųœK­UFyƝīÛ÷ąV×qƥV¿aȉd³BqPBmaËđŻģmÅ®V¹d^KKonYg¯XhqaLdu¥Ípǅ¡KąÅkĝęěhq}HyÃ]¹ǧ£Í÷¿qáµ§g¤o^á¾ZE¤i`ĳ{nOl»WÝĔįhgF[¿¡ßkOüš_ūiǱàUtėGyl}ÓM}jpEC~¡FtoQiHkk{Ãmï"]],encodeOffsets:[[[119712,40641]],[[121616,39981]],[[116462,37237]]]}},{type:"Feature",id:"140000",properties:{id:"140000",cp:[111.849248,36.857014],name:"山西",childNum:1},geometry:{type:"Polygon",coordinates:["@@ÞĩÒSra}ÁyWix±Üe´lèßÓǏokćiµVZģ¡coTSË¹ĪmnÕńehZg{gtwªpXaĚThȑp{¶Eh®RćƑP¿£Pmc¸mQÝWďȥoÅîɡųAďä³aÏJ½¥PG­ąSM­EÅruµéYÓŌ_dĒCo­Èµ]¯_²ÕjāK~©ÅØ^ÔkïçămÏk]­±cÝ¯ÑÃmQÍ~_apm~ç¡qu{JÅŧ·Ls}EyÁÆcI{¤IiCfUcƌÃp§]ě«vD@¡SÀµMÅwuYY¡DbÑc¡h×]nkoQdaMç~eDÛtT©±@¥ù@É¡ZcW|WqOJmĩl«ħşvOÓ«IqăV¥D[mI~Ó¢cehiÍ]Ɠ~ĥqX·eƷn±}v[ěďŕ]_œ`¹§ÕōIo©b­s^}Ét±ū«³p£ÿ·Wµ|¡¥ăFÏs×¥ŅxÊdÒ{ºvĴÎêÌɊ²¶ü¨|ÞƸµȲLLúÉƎ¤ϊęĔV`_bªS^|dzY|dz¥pZbÆ£¶ÒK}tĦÔņƠPYznÍvX¶Ěn ĠÔzý¦ª÷ÑĸÙUȌ¸dòÜJð´ìúNM¬XZ´¤ŊǸ_tldI{¦ƀðĠȤ¥NehXnYGR° ƬDj¬¸|CĞKqºfƐiĺ©ª~ĆOQª ¤@ìǦɌ²æBÊTŸʂōĖĴŞȀÆÿȄlŤĒötÎ½î¼ĨXh|ªM¤Ðz"],encodeOffsets:[[116874,41716]]}},{type:"Feature",id:"150000",properties:{id:"150000",cp:[111.670801,41.818311],name:"内蒙古",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@¯PqFB|S³C|kñHdiÄ¥sŉÅPóÑÑE^ÅPpy_YtShQ·aHwsOnŉÃs©iqjUSiº]ïW«gW¡ARë¥_sgÁnUI«m]jvV¼euhwqAaW_µj»çjioQR¹ēÃßt@r³[ÛlćË^ÍÉáGOUÛOB±XkÅ¹£k|e]olkVÍ¼ÕqtaÏõjgÁ£§U^RLËnX°ÇBz^~wfvypV ¯ƫĉ˭ȫƗŷɿÿĿƑ˃ĝÿÃǃßËőó©ǐȍŒĖM×ÍEyxþp]ÉvïèvƀnÂĴÖ@V~Ĉv¦wĖtējyÄDXÄxGQuv_i¦aBçw˛wD©{tāmQ{EJ§KPśƘƿ¥@sCTÉ}ɃwƇy±gÑ}T[÷kÐç¦«SÒ¥¸ëBX½HáÅµÀğtSÝÂa[ƣ°¯¦Pï¡]£ġÒk®G²èQ°óMq}EóƐÇ\\@áügQÍu¥FTÕ¿Jû]|mvāÎYua^WoÀa·­ząÒot×¶CLƗi¯¤mƎHǊ¤îìɾŊìTdåwsRÖgĒųúÍġäÕ}Q¶¿A[¡{d×uQAMxVvMOmăl«ct[wº_ÇÊjbÂ£ĦS_éQZ_lwgOiýe`YYLq§IÁǳ£ÙË[ÕªuƏ³ÍTs·bÁĽäė[b[ŗfãcn¥îC¿÷µ[ŏÀQ­ōĉm¿Á^£mJVmL[{Ï_£F¥Ö{ŹA}×Wu©ÅaųĳƳhB{·TQqÙIķËZđ©Yc|M¡LeVUóK_QWk_ĥ¿ãZ»X\\ĴuUèlG®ěłTĠğDŃOrÍdÆÍz]±ŭ©Å]ÅÐ}UË¥©TċïxgckfWgi\\ÏĒ¥HkµEë{»ÏetcG±ahUiñiWsɁ·cCÕk]wȑ|ća}wVaĚá G°ùnM¬¯{ÈÐÆA¥ÄêJxÙ¢hP¢ÛºµwWOóFÁz^ÀŗÎú´§¢T¤ǻƺSėǵhÝÅQgvBHouʝl_o¿Ga{ïq{¥|ſĿHĂ÷aĝÇqZñiñC³ª»E`¨åXēÕqÉû[l}ç@čƘóO¿¡FUsAʽīccocÇS}£IS~ălkĩXçmĈŀÐoÐdxÒuL^T{r@¢ÍĝKén£kQyÅõËXŷƏL§~}kq»IHėǅjĝ»ÑÞoå°qTt|r©ÏS¯·eŨĕx«È[eM¿yupN~¹ÏyN£{©għWí»Í¾səšǅ_ÃĀɗ±ąĳĉʍŌŷSÉA±åǥɋ@ë£R©ąP©}ĹªƏj¹erLDĝ·{i«ƫC£µsKCGS|úþXgp{ÁX¿ć{ƱȏñZáĔyoÁhA}ŅĆfdŉ_¹Y°ėǩÑ¡H¯¶oMQqð¡Ë|Ñ`ƭŁX½·óÛxğįÅcQs«tȋǅFù^it«Č¯[hAi©á¥ÇĚ×l|¹y¯YȵƓñǙµïċĻ|Düȭ¶¡oŽäÕG\\ÄT¿Òõr¯LguÏYęRƩɷŌO\\İÐ¢æ^Ŋ ĲȶȆbÜGĝ¬¿ĚVĎgª^íu½jÿĕęjık@Ľ]ėl¥ËĭûÁėéV©±ćn©­ȇÍq¯½YÃÔŉÉNÑÅÝy¹NqáʅDǡËñ­ƁYÅy̱os§ȋµʽǘǏƬɱàưN¢ƔÊuľýľώȪƺɂļxZĈ}ÌŉŪĺœĭFЛĽ̅ȣͽÒŵìƩÇϋÿȮǡŏçƑůĕ~Ç¼ȳÐUfdIxÿ\\G zâɏÙOº·pqy£@qþ@Ǟ˽IBäƣzsÂZÁàĻdñ°ŕzéØűzșCìDȐĴĺf®Àľưø@ɜÖÞKĊŇƄ§͑těï͡VAġÑÑ»d³öǍÝXĉĕÖ{þĉu¸ËʅğU̎éhɹƆ̗̮ȘǊ֥ड़ࡰţાíϲäʮW¬®ҌeרūȠkɬɻ̼ãüfƠSצɩςåȈHϚÎKǳͲOðÏȆƘ¼CϚǚ࢚˼ФÔ¤ƌĞ̪Qʤ´¼mȠJˀƲÀɠmǐnǔĎȆÞǠN~ʢĜ¶ƌĆĘźʆȬ˪ĚĒ¸ĞGȖƴƀj`ĢçĶāàŃºēĢĖćYÀŎüôQÐÂŎŞǆŞêƖoˆDĤÕºÑǘÛˤ³̀gńƘĔÀ^ªƂ`ªt¾äƚêĦĀ¼ÐĔǎ¨Ȕ»͠^ˮÊȦƤøxRrŜH¤¸ÂxDÄ|ø˂˜ƮÐ¬ɚwɲFjĔ²Äw°ǆdÀÉ_ĸdîàŎjÊêTĞªŌŜWÈ|tqĢUB~´°ÎFCU¼pĀēƄN¦¾O¶łKĊOjĚj´ĜYp{¦SĚÍ\\T×ªV÷Ší¨ÅDK°ßtŇĔK¨ǵÂcḷ̌ĚǣȄĽFlġUĵŇȣFʉɁMğįʏƶɷØŭOǽ«ƽū¹Ʊő̝Ȩ§ȞʘĖiɜɶʦ}¨֪ࠜ̀ƇǬ¹ǨE˦ĥªÔêFxúQEr´Wrh¤Ɛ \\talĈDJÜ|[Pll̚¸ƎGú´P¬W¦^¦H]prRn|or¾wLVnÇIujkmon£cX^Bh`¥V¦U¤¸}xRj[^xN[~ªxQ[`ªHÆÂExx^wN¶Ê|¨ìMrdYpoRzNyÀDs~bcfÌ`L¾n|¾T°c¨È¢ar¤`[|òDŞĔöxElÖdHÀI`Ď\\Àì~ÆR¼tf¦^¢ķ¶eÐÚMptgjɡČÅyġLûŇV®ÄÈƀĎ°P|ªVVªj¬ĚÒêp¬E|ŬÂc|ÀtƐK f{ĘFĒƌXƲąo½Ę\\¥o}Ûu£ç­kX{uĩ«āíÓUŅßŢqŤ¥lyň[oi{¦LńðFȪȖĒL¿Ìf£K£ʺoqNwğc`uetOj×°KJ±qÆġmĚŗos¬qehqsuH{¸kH¡ÊRǪÇƌbȆ¢´äÜ¢NìÉʖ¦â©Ġu¦öČ^â£ĂhĖMÈÄw\\fŦ°W ¢¾luŸDw\\̀ʉÌÛMĀ[bÓEn}¶Vcês"]],encodeOffsets:[[[129102,52189]]]}},{type:"Feature",id:"210000",properties:{id:"210000",cp:[123.429096,41.796767],name:"辽宁",childNum:16},geometry:{type:"MultiPolygon",coordinates:[["@@L@@sa"],["@@MnNm"],["@@dc"],["@@eÀC@b"],["@@fXwkbrÄ`qg"],["@@^jtWQ"],["@@~ Y]c"],["@@G`ĔN^_¿ZÃM"],["@@iX¶BY"],["@@YZ"],["@@L_{Epf"],["@@^WqCT\\"],["@@\\[§t|¤_"],["@@m`n_"],["@@Ïxǌ{q_×^Giip"],["@@@é^BntaÊU]x ¯ÄPĲ­°hʙK³VÕ@Y~|EvĹsÇ¦­L^pÃ²ŸÒG Ël]xxÄ_fT¤Ď¤cPC¨¸TVjbgH²sdÎdHt`B²¬GJję¶[ÐhjeXdlwhðSČ¦ªVÊÏÆZÆŶ®²^ÎyÅÎcPqńĚDMħĜŁH­kçvV[ĳ¼WYÀäĦ`XlR`ôLUVfK¢{NZdĒªYĸÌÚJRr¸SA|ƴgŴĴÆbvªØX~źB|¦ÕE¤Ð`\\|KUnnI]¤ÀÂĊnŎR®Ő¿¶\\ÀøíDm¦ÎbŨabaĘ\\ľãÂ¸atÎSƐ´©v\\ÖÚÌǴ¤Â¨JKrZ_ZfjþhPkx`YRIjJcVf~sCN¤ EhæmsHy¨SðÑÌ\\\\ĐRZk°IS§fqŒßýáĞÙÉÖ[^¯ǤŲê´\\¦¬ĆPM¯£»uïpùzExanµyoluqe¦W^£ÊL}ñrkqWňûPUP¡ôJoo·U}£[·¨@XĸDXm­ÛÝºGUCÁª½{íĂ^cjk¶Ã[q¤LÉö³cux«zZf²BWÇ®Yß½ve±ÃCý£W{Ú^q^sÑ·¨ÍOt¹·C¥GDrí@wÕKţÃ«V·i}xËÍ÷i©ĝɝǡ]{c±OW³Ya±_ç©HĕoƫŇqr³Lys[ñ³¯OSďOMisZ±ÅFC¥Pq{Ã[Pg}\\¿ghćOk^ģÁFıĉĥM­oEqqZûěŉ³F¦oĵhÕP{¯~TÍlªNßYÐ{Ps{ÃVUeĎwk±ŉVÓ½ŽJãÇÇ»Jm°dhcÀffdF~ĀeĖd`sx² ®EżĀdQÂd^~ăÔH¦\\LKpĄVez¤NP ǹÓRÆąJSh­a[¦´ÂghwmBÐ¨źhI|VV|p] Â¼èNä¶ÜBÖ¼L`¼bØæKVpoúNZÞÒKxpw|ÊEMnzEQIZZNBčÚFÜçmĩWĪñtÞĵÇñZ«uD±|Əlĳ¥ãn·±PmÍada CLǑkùó¡³Ï«QaċÏOÃ¥ÕđQȥċƭy³ÃA"]],encodeOffsets:[[[123686,41445]],[[126019,40435]],[[124393,40128]],[[126117,39963]],[[125322,40140]],[[126686,40700]],[[126041,40374]],[[125584,40168]],[[125453,40165]],[[125362,40214]],[[125280,40291]],[[125774,39997]],[[125976,40496]],[[125822,39993]],[[125509,40217]],[[122731,40949]]]}},{type:"Feature",id:"220000",properties:{id:"220000",cp:[125.3245,43.886841],name:"吉林",childNum:1},geometry:{type:"Polygon",coordinates:["@@pä³PClFbbÍzwBGĭZÅi»lY­ċ²SgkÇ£^Sqd¯R©é£¯S\\cZ¹iűƏCuƍÓXoR}M^o£R}oªU­FuuXHlEÅÏ©¤ÛmTþ¤D²ÄufàÀ­XXÈ±AeyYw¬dvõ´KÊ£\\rµÄlidā]|î©¾DÂVH¹Þ®ÜWnCķ W§@\\¸~¤Vp¸póIO¢VOŇürXql~òÉK]¤¥Xrfkvzpm¶bwyFoúvð¼¤ N°ąO¥«³[éǡű_°Õ\\ÚÊĝþâőàerR¨­JYlďQ[ ÏYëÐ§TGztnß¡gFkMāGÁ¤ia ÉÈ¹`\\xs¬dĆkNnuNUuP@vRY¾\\¢GªóĄ~RãÖÎĢùđŴÕhQxtcæëSɽŉíëǉ£ƍG£nj°KƘµDsØÑpyĆ¸®¿bXp]vbÍZuĂ{n^IüÀSÖ¦EvRÎûh@â[ƏÈô~FNr¯ôçR±­HÑlĢ^¤¢OðævxsŒ]ÞÁTĠs¶¿âÆGW¾ìA¦·TÑ¬è¥ÏÐJ¨¼ÒÖ¼ƦɄxÊ~StD@Ă¼Ŵ¡jlºWvÐzƦZÐ²CH AxiukdGgetqmcÛ£Ozy¥cE}|¾cZk¿uŐã[oxGikfeäT@SUwpiÚFM©£è^Ú`@v¶eňf heP¶täOlÃUgÞzŸU`l}ÔÆUvØ_Ō¬Öi^ĉi§²ÃB~¡ĈÚEgc|DC_Ȧm²rBx¼MÔ¦ŮdĨÃâYxƘDVÇĺĿg¿cwÅ\\¹¥Yĭl¤OvLjM_a W`zļMž·\\swqÝSAqŚĳ¯°kRē°wx^ĐkǂÒ\\]nrĂ}²ĊŲÒøãh·M{yMzysěnĒġV·°G³¼XÀ¤¹i´o¤ŃÈ`ÌǲÄUĞd\\iÖmÈBĤÜɲDEh LG¾ƀÄ¾{WaYÍÈĢĘÔRîĐj}ÇccjoUb½{h§Ǿ{KƖµÎ÷GĀÖŠåưÎs­lyiē«`å§H¥Ae^§GK}iã\\c]v©ģZmÃ|[M}ģTɟĵÂÂ`ÀçmFK¥ÚíÁbX³ÌQÒHof{]ept·GŋĜYünĎųVY^ydõkÅZW«WUa~U·SbwGçǑiW^qFuNĝ·EwUtW·Ýďæ©PuqEzwAVXRãQ`­©GMehccďÏd©ÑW_ÏYƅ»é\\ɹ~ǙG³mØ©BšuT§Ĥ½¢Ã_Ã½L¡ýqT^rme\\PpZZbyuybQefµ]UhĿDCmûvaÙNSkCwncćfv~YÇG"],encodeOffsets:[[130196,42528]]}},{type:"Feature",id:"230000",properties:{id:"230000",cp:[128.642464,46.756967],name:"黑龙江",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@UµNÿ¥īèçHÍøƕ¶Lǽ|g¨|a¾pVidd~ÈiíďÓQġėÇZÎXb½|ſÃH½KFgɱCģÛÇAnjÕc[VĝǱÃËÇ_ £ń³pj£º¿»WH´¯U¸đĢmtĜyzzNN|g¸÷äűÑ±ĉā~mq^[ǁÑďlw]¯xQĔ¯l°řĴrBÞTxr[tŽ¸ĻN_yX`biNKuP£kZĮ¦[ºxÆÀdhĹŀUÈƗCwáZħÄŭcÓ¥»NAw±qȥnD`{ChdÙFć}¢A±Äj¨]ĊÕjŋ«×`VuÓÅ~_kŷVÝyhVkÄãPsOµfgeŇµf@u_Ù ÙcªNªÙEojVxT@ãSefjlwH\\pŏäÀvlY½d{F~¦dyz¤PÜndsrhfHcvlwjF£G±DÏƥYyÏu¹XikĿ¦ÏqƗǀOŜ¨LI|FRĂn sª|C˜zxAè¥bfudTrFWÁ¹Am|ĔĕsķÆF´N}ćUÕ@Áĳſmuçuð^ÊýowFzØÎĕNőǏȎôªÌŒǄàĀÄ˄ĞŀƒʀĀƘŸˮȬƬĊ°Uzouxe]}AyÈW¯ÌmKQ]Īºif¸ÄX|sZt|½ÚUÎ lk^p{f¤lºlÆW A²PVÜPHÊâ]ÎĈÌÜk´\\@qàsĔÄQºpRij¼èi`¶bXrBgxfv»uUi^v~J¬mVp´£´VWrnP½ì¢BX¬hðX¹^TjVriªjtŊÄmtPGx¸bgRsT`ZozÆO]ÒFôÒOÆŊvÅpcGêsx´DR{AEOr°x|íb³Wm~DVjºéNNËÜ˛ɶ­GxŷCSt}]ûōSmtuÇÃĕNāg»íT«u}ç½BĵÞʣ¥ëÊ¡MÛ³ãȅ¡ƋaǩÈÉQG¢·lG|tvgrrf«ptęŘnÅĢrI²¯LiØsPf_vĠdxM prʹL¤¤eËÀđKïÙVY§]Ióáĥ]ķK¥j|pŇ\\kzţ¦šnņäÔVĂîĪ¬|vW®l¤èØrxm¶ă~lÄƯĄ̈́öȄEÔ¤ØQĄĄ»ƢjȦOǺ¨ìSŖÆƬyQv`cwZSÌ®ü±Ǆ]ŀç¬B¬©ńzƺŷɄeeOĨSfm ĊƀP̎ēz©ĊÄÕÊmgÇsJ¥ƔŊśæÎÑqv¿íUOµªÂnĦÁ_½ä@êí£P}Ġ[@gġ}gɊ×ûÏWXá¢užƻÌsNÍ½ƎÁ§čŐAēeL³àydl¦ĘVçŁpśǆĽĺſÊQíÜçÛġÔsĕ¬Ǹ¯YßċġHµ ¡eå`ļrĉŘóƢFìĎWøxÊkƈdƬv|I|·©NqńRŀ¤éeŊŀàŀU²ŕƀBQ£Ď}L¹Îk@©ĈuǰųǨÚ§ƈnTËÇéƟÊcfčŤ^XmHĊĕË«W·ċëx³ǔķÐċJāwİ_ĸȀ^ôWr­°oú¬ĦŨK~ȰCĐ´Ƕ£fNÎèâw¢XnŮeÂÆĶ¾¾xäLĴĘlļO¤ÒĨA¢Êɚ¨®ØCÔ ŬGƠƦYĜĘÜƬDJg_ͥœ@čŅĻA¶¯@wÎqC½Ĉ»NăëKďÍQÙƫ[«ÃígßÔÇOÝáWñuZ¯ĥŕā¡ÑķJu¤E å¯°WKÉ±_d_}}vyõu¬ï¹ÓU±½@gÏ¿rÃ½DgCdµ°MFYxw¿CG£Rƛ½Õ{]L§{qqą¿BÇƻğëܭǊË|c²}Fµ}ÙRsÓpg±QNqǫŋRwŕnéÑÉK«SeYRŋ@{¤SJ}D Ûǖ֍]gr¡µŷjqWÛham³~S«Þ]"]],encodeOffsets:[[[134456,44547]]]}},{type:"Feature",id:"320000",properties:{id:"320000",cp:[119.767413,33.041544],name:"江苏",childNum:1},geometry:{type:"Polygon",coordinates:["@@cþÅPi`ZRu¥É\\]~°Y`µÓ^phÁbnÀşúòaĬºTÖŒbe¦¦{¸ZâćNp©Hr|^mjhSEb\\afv`sz^lkljÄtg¤D­¾X¿À|ĐiZȀåB·î}GL¢õcßjayBFµÏC^ĭcÙt¿sğH]j{s©HM¢QnDÀ©DaÜÞ·jgàiDbPufjDk`dPOîhw¡ĥ¥GP²ĐobºrYî¶aHŢ´ ]´rılw³r_{£DB_Ûdåuk|Ũ¯F Cºyr{XFye³Þċ¿ÂkĭB¿MvÛpm`rÚã@Ę¹hågËÖƿxnlč¶Åì½Ot¾dJlVJĂǀŞqvnO^JZż·Q}êÍÅmµÒ]ƍ¦Dq}¬R^èĂ´ŀĻĊIÔtĲyQŐĠMNtR®òLhĚs©»}OÓGZz¶A\\jĨFäOĤHYJvÞHNiÜaĎÉnFQlNM¤B´ĄNöɂtpŬdfåqm¿QûùŞÚb¤uŃJŴu»¹ĄlȖħŴw̌ŵ²ǹǠ͛hĭłƕrçü±Yxcitğ®jű¢KOķCoy`å®VTa­_Ā]ŐÝɞï²ʯÊ^]afYǸÃĆēĪȣJđ͍ôƋÄÄÍīçÛɈǥ£­ÛmY`ó£Z«§°Ó³QafusNıǅ_k}¢m[ÝóDµ¡RLčiXyÅNïă¡¸iĔÏNÌŕoēdōîåŤûHcs}~Ûwbù¹£¦ÓCtOPrE^ÒogĉIµÛÅʹK¤½phMü`oæŀ"],encodeOffsets:[[121740,32276]]}},{type:"Feature",id:"330000",properties:{id:"330000",cp:[120.153576,29.287459],name:"浙江",childNum:45},geometry:{type:"MultiPolygon",coordinates:[["@@E^dQ]K"],["@@jX^j"],["@@sfbU"],["@@qP\\xz[ck"],["@@R¢FX}°[s_"],["@@Cb\\}"],["@@e|v\\la{u"],["@@v~u}"],["@@QxÂF¯}"],["@@¹nvÞs¯o"],["@@rSkUEj"],["@@bi­ZP"],["@@p[}INf"],["@@À¿"],["@@¹dnb"],["@@rSBnR"],["@@g~h}"],["@@FlEk"],["@@OdPc"],["@@v[u\\"],["@@FjâL~wyoo~sµL\\"],["@@¬e¹aN"],["@@\\nÔ¡q]L³ë\\ÿ®QÖ"],["@@ÊA­©[¬"],["@@Kxv­"],["@@@hlIk]"],["@@pW{o||j"],["@@Md|_mC"],["@@¢X£ÏylD¼XtH"],["@@hlÜ[LykAvyfw^E¤"],["@@fp¤MusR"],["@@®_ma~LÁ¬Z"],["@@iMxZ"],["@@ZcYd"],["@@Z~dOSo|A¿qZv"],["@@@`EN¡v"],["@@|TY{"],["@@@n@m"],["@@XWkCT\\"],["@@ºwZRkĕWO¢"],["@@X®±GrÆª\\ÔáXq{"],["@@ůTG°ĄLHm°UC"],["@@¤aÜx~}dtüGæţŎíĔcŖpMËÐjē¢·ðĄÆMzjWKĎ¢Q¶À_ê_Bıi«pZgf¤Nrq]§ĂN®«H±yƳí¾×ŸīàLłčŴǝĂíÀBŖÕªÁŖHŗŉåqûõi¨hÜ·ñt»¹ýv_[«¸mYL¯QªmĉÅdMgÇjcº«ę¬­K­´B«Âącoċ\\xKd¡gěŧ«®á[~ıxu·ÅKsËÉc¢Ù\\ĭƛëbf¹­ģSĜkáƉÔ­ĈZB{aMµfzŉfåÂŧįƋǝÊĕġć£g³ne­ą»@­¦S®\\ßðChiqªĭiAuA­µ_W¥ƣO\\lċĢttC¨£t`PZäuXßBsĻyekOđġĵHuXBµ]×­­\\°®¬F¢¾pµ¼kŘó¬Wät¸|@L¨¸µrºù³Ù~§WIZW®±Ð¨ÒÉx`²pĜrOògtÁZ}þÙ]¡FKwsPlU[}¦Rvn`hq¬\\nQ´ĘRWb_ rtČFIÖkĦPJ¶ÖÀÖJĈĄTĚòC ²@PúØz©Pî¢£CÈÚĒ±hŖl¬â~nm¨f©iļ«mntuÖZÜÄjL®EÌFª²iÊxØ¨IÈhhst"],["@@o\\VzRZ}y"],["@@@°¡mÛGĕ¨§Ianá[ýƤjfæØLäGr"]],encodeOffsets:[[[125592,31553]],[[125785,31436]],[[125729,31431]],[[125513,31380]],[[125223,30438]],[[125115,30114]],[[124815,29155]],[[124419,28746]],[[124095,28635]],[[124005,28609]],[[125e3,30713]],[[125111,30698]],[[125078,30682]],[[125150,30684]],[[124014,28103]],[[125008,31331]],[[125411,31468]],[[125329,31479]],[[125626,30916]],[[125417,30956]],[[125254,30976]],[[125199,30997]],[[125095,31058]],[[125083,30915]],[[124885,31015]],[[125218,30798]],[[124867,30838]],[[124755,30788]],[[124802,30809]],[[125267,30657]],[[125218,30578]],[[125200,30562]],[[124968,30474]],[[125167,30396]],[[124955,29879]],[[124714,29781]],[[124762,29462]],[[124325,28754]],[[123990,28459]],[[125366,31477]],[[125115,30363]],[[125369,31139]],[[122495,31878]],[[125329,30690]],[[125192,30787]]]}},{type:"Feature",id:"340000",properties:{id:"340000",cp:[117.283042,31.26119],name:"安徽",childNum:3},geometry:{type:"MultiPolygon",coordinates:[["@@^iuLX^"],["@@e©Ehl"],["@@°ZÆëĎµmkǀwÌÕæhºgBĝâqÙĊzÖgņtÀÁĂÆáhEz|WzqD¹°Eŧl{ævÜcA`¤C`|´qxĲkq^³³GšµbíZ¹qpa±ď OH¦Ħx¢gPícOl_iCveaOjChß¸iÝbÛªCC¿mRV§¢A|t^iĠGÀtÚsd]ĮÐDE¶zAb àiödK¡~H¸íæAǿYj{ď¿À½W®£ChÃsikkly]_teu[bFaTign{]GqªoĈMYá|·¥f¥őaSÕėNµñĞ«Im_m¿Âa]uĜp Z_§{Cäg¤°r[_YjÆOdý[I[á·¥Q_nùgL¾mvˊBÜÆ¶ĊJhpc¹O]iŠ]¥ jtsggJÇ§w×jÉ©±EFË­KiÛÃÕYvsm¬njĻª§emná}k«ŕgđ²ÙDÇ¤í¡ªOy×Où±@DñSęćăÕIÕ¿IµĥOjNÕËT¡¿tNæŇàåyķrĕq§ÄĩsWÆßF¶X®¿mwRIÞfßoG³¾©uyHį{Ɓħ¯AFnuPÍÔzVdàôº^Ðæd´oG¤{S¬ćxã}ŧ×Kǥĩ«ÕOEÐ·ÖdÖsƘÑ¨[Û^Xr¢¼§xvÄÆµ`K§ tÒ´Cvlo¸fzŨð¾NY´ı~ÉĔēßúLÃÃ_ÈÏ|]ÂÏFlg`ben¾¢pUh~ƴĖ¶_r sĄ~cƈ]|r c~`¼{À{ȒiJjz`îÀT¥Û³]u}fïQl{skloNdjäËzDvčoQďHI¦rbtHĔ~BmlRV_ħTLnñH±DL¼Lªl§Ťa¸ĚlK²\\RòvDcÎJbt[¤D@®hh~kt°ǾzÖ@¾ªdbYhüóZ ň¶vHrľ\\ÊJuxAT|dmÀO[ÃÔG·ĚąĐlŪÚpSJ¨ĸLvÞcPæķŨ®mÐálwKhïgA¢ųÆ©Þ¤OÈm°K´"]],encodeOffsets:[[[121722,32278]],[[119475,30423]],[[119168,35472]]]}},{type:"Feature",id:"350000",properties:{id:"350000",cp:[118.306239,26.075302],name:"福建",childNum:18},geometry:{type:"MultiPolygon",coordinates:[["@@zht´]"],["@@aj^~ĆG©O"],["@@ed¨C}}i"],["@@@vPGsQ"],["@@sBzddW]Q"],["@@S¨Q{"],["@@NVucW"],["@@qptBAq"],["@@¸[mu"],["@@Q\\pD]_"],["@@jSwUadpF"],["@@eXª~"],["@@AjvFso"],["@@fT_Çí\\v|ba¦jZÆy°"],["@@IjJi"],["@@wJIx«¼AoNe{M­"],["@@K±¡ÓČäeZ"],["@@k¡¹Eh~c®wBkUplÀ¡I~Māe£bN¨gZý¡a±Öcp©PhI¢QqÇGj|¥U g[Ky¬ŏv@OptÉEF\\@ åA¬V{XģĐBycpě¼³Ăp·¤¥ohqqÚ¡ŅLs^Ã¡§qlÀhH¨MCe»åÇGD¥zPO£čÙkJA¼ßėuĕeûÒiÁŧSW¥Qûŗ½ùěcÝ§SùĩąSWó«íęACµeRåǃRCÒÇZÍ¢ź±^dlstjD¸ZpuÔâÃH¾oLUêÃÔjjēò´ĄWƛ^Ñ¥Ħ@ÇòmOw¡õyJyD}¢ďÑÈġfZda©º²z£NjD°Ötj¶¬ZSÎ~¾c°¶ÐmxO¸¢Pl´SL|¥AȪĖMņĲg®áIJČĒü` QF¬h|ĂJ@zµ |ê³È ¸UÖŬŬÀEttĸr]ðM¤ĶĲHtÏ AĬkvsq^aÎbvdfÊòSD´Z^xPsĂrvƞŀjJd×ŘÉ ®AÎ¦ĤdxĆqAZRÀMźnĊ»İÐZ YXæJyĊ²·¶q§·K@·{sXãô«lŗ¶»o½E¡­«¢±¨Y®Ø¶^AvWĶGĒĢPlzfļtàAvWYãO_¤sD§ssČġ[kƤPX¦`¶®BBvĪjv©jx[L¥àï[F¼ÍË»ğV`«Ip}ccÅĥZEãoP´B@D¸m±z«Ƴ¿å³BRØ¶Wlâþäą`]Z£Tc ĹGµ¶Hm@_©k¾xĨôȉðX«½đCIbćqK³ÁÄš¬OAwã»aLŉËĥW[ÂGIÂNxĳ¤D¢îĎÎB§°_JGs¥E@¤ućPåcuMuw¢BI¿]zG¹guĮck\\_"]],encodeOffsets:[[[123250,27563]],[[122541,27268]],[[123020,27189]],[[122916,27125]],[[122887,26845]],[[122808,26762]],[[122568,25912]],[[122778,26197]],[[122515,26757]],[[122816,26587]],[[123388,27005]],[[122450,26243]],[[122578,25962]],[[121255,25103]],[[120987,24903]],[[122339,25802]],[[121042,25093]],[[122439,26024]]]}},{type:"Feature",id:"360000",properties:{id:"360000",cp:[115.592151,27.676493],name:"江西",childNum:1},geometry:{type:"Polygon",coordinates:["@@ĢĨƐgļ¼ÂMD~ņªe^\\^§ý©j×cZØ¨zdÒa¶lÒJìõ`oz÷@¤uŞ¸´ôęöY¼HČƶajlÞƩ¥éZ[|h}^U  ¥pĄžƦO lt¸Æ Q\\aÆ|CnÂOjt­ĚĤdÈF`¶@Ðë ¦ōÒ¨SêvHĢûXD®QgÄWiØPÞìºr¤ǆNĠ¢lĄtZoCƞÔºCxrpĠV®Ê{f_Y`_eq®Aot`@oDXfkp¨|s¬\\DÄSfè©Hn¬^DhÆyøJhØxĢĀLÊƠPżċĄwȠĚ¦G®ǒĤäTŠÆ~Ħw«|TF¡nc³Ïå¹]ĉđxe{ÎÓvOEm°BƂĨİ|Gvz½ª´HàpeJÝQxnÀW­EµàXÅĪt¨ÃĖrÄwÀFÎ|ňÓMå¼ibµ¯»åDT±m[r«_gmQu~¥V\\OkxtL E¢Ú^~ýêPóqoě±_Êw§ÑªåƗā¼mĉŹ¿NQYBąrwģcÍ¥B­ŗÊcØiIƝĿuqtāwO]³YCñTeÉcaubÍ]trluīBÐGsĵıN£ï^ķqss¿FūūVÕ·´Ç{éĈýÿOER_đûIċâJh­ŅıNȩĕB¦K{Tk³¡OP·wnµÏd¯}½TÍ«YiµÕsC¯iM¤­¦¯P|ÿUHvhe¥oFTuõ\\OSsMòđƇiaºćXĊĵà·çhƃ÷Ç{ígu^đgm[×zkKN¶Õ»lčÓ{XSÆv©_ÈëJbVkĔVÀ¤P¾ºÈMÖxlò~ªÚàGĂ¢B±ÌKyáV¼Ã~­`gsÙfIƋlę¹e|~udjuTlXµf`¿Jd[\\L²"],encodeOffsets:[[116689,26234]]}},{type:"Feature",id:"370000",properties:{id:"370000",cp:[118.000923,36.275807],name:"山东",childNum:13},geometry:{type:"MultiPolygon",coordinates:[["@@Xjd]{K"],["@@itbFHy"],["@@HlGk"],["@@TGy"],["@@K¬U"],["@@WdXc"],["@@PtOs"],["@@LnXhc"],["@@ppVu]Or"],["@@cdzAUa"],["@@udRhnCI"],["@@oIpR"],["@@Ľč{fzƤîKÎMĮ]ZF½Y]â£ph¶¨râøÀÎǨ¤^ºÄGz~grĚĜlĞÆLĆǆ¢Îo¦cvKbgr°WhmZp L]LºcUÆ­nżĤÌĒbAnrOA´ȊcÀbƦUØrĆUÜøĬƞEzVL®öØBkŖÝĐĖ¹ŧ̄±ÀbÎÉnb²ĦhņBĖįĦåXćì@L¯´ywƕCéÃµė ƿ¸lµ¾Z|ZWyFY¨Mf~C¿`à_RÇzwƌfQnny´INoƬèôº|sTJULîVjǎ¾ĒØDz²XPn±ŴPè¸ŔLƔÜƺ_TüÃĤBBċÈöA´faM¨{«M`¶d¡ôÖ°mȰBÔjj´PM|c^d¤u¤Û´ä«ƢfPk¶Môl]Lb}su^ke{lCMrDÇ­]NÑFsmoõľHyGă{{çrnÓEƕZGª¹Fj¢ïWuøCǷë¡ąuhÛ¡^KxC`C\\bÅxì²ĝÝ¿_NīCȽĿåB¥¢·IŖÕy\\¹kxÃ£Č×GDyÃ¤ÁçFQ¡KtŵƋ]CgÏAùSedcÚźuYfyMmhUWpSyGwMPqŀÁ¼zK¶G­Y§Ë@´śÇµƕBm@IogZ¯uTMx}CVKï{éƵP_K«pÛÙqċtkkù]gTğwoɁsMõ³ăAN£MRkmEÊčÛbMjÝGuIZGPģãħE[iµBEuDPÔ~ª¼ęt]ûG§¡QMsğNPŏįzs£Ug{đJĿļā³]ç«Qr~¥CƎÑ^n¶ÆéÎR~Ż¸YI] PumŝrƿIā[xeÇ³L¯v¯s¬ÁY~}ťuŁgƋpÝĄ_ņī¶ÏSR´ÁP~¿Cyċßdwk´SsX|t`Ä ÈðAªìÎT°¦Dda^lĎDĶÚY°`ĪŴǒàŠv\\ebZHŖR¬ŢƱùęOÑM­³FÛWp["]],encodeOffsets:[[[123806,39303]],[[123821,39266]],[[123742,39256]],[[123702,39203]],[[123649,39066]],[[123847,38933]],[[123580,38839]],[[123894,37288]],[[123043,36624]],[[123344,38676]],[[123522,38857]],[[123628,38858]],[[118260,36742]]]}},{type:"Feature",id:"410000",properties:{id:"410000",cp:[113.665412,33.757975],name:"河南",childNum:1},geometry:{type:"Polygon",coordinates:["@@ýLùµP³swIÓxcŢĞð´E®ÚPtĴXØxÂ¶@«ŕŕQGYfa[şußǩđš_X³ĳÕčC]kbc¥CS¯ëÍB©÷³­Si_}mYTt³xlàcČzÀD}ÂOQ³ÐTĨ¯ƗòËŖ[hłŦv~}ÂZ«¤lPÇ£ªÝŴÅR§ØnhctâknÏ­ľŹUÓÝdKuķI§oTũÙďkęĆH¸Ó\\Ä¿PcnS{wBIvÉĽ[GqµuŇôYgûZca©@½Õǽys¯}lgg@­C\\£asIdÍuCQñ[L±ęk·ţb¨©kK»KC²òGKmĨS`UQnk}AGēsqaJ¥ĐGRĎpCuÌy ã iMcplk|tRkðev~^´¦ÜSí¿_iyjI|ȑ|¿_»d}q^{Ƈdă}tqµ`Ƴĕg}V¡om½faÇo³TTj¥tĠRyK{ùÓjuµ{t}uËRivGçJFjµÍyqÎàQÂFewixGw½Yŷpµú³XU½ġyłåkÚwZX·l¢Á¢KzOÎÎjc¼htoDHr|­J½}JZ_¯iPq{tę½ĕ¦Zpĵø«kQĹ¤]MÛfaQpě±ǽ¾]u­Fu÷nčÄ¯ADp}AjmcEÇaª³o³ÆÍSƇĈÙDIzËčľ^KLiÞñ[aA²zzÌ÷D|[íÄ³gfÕÞd®|`Ć~oĠƑô³ŊD×°¯CsøÀ«ìUMhTº¨¸ǡîSÔDruÂÇZÖEvPZW~ØÐtĄE¢¦Ðy¸bô´oŬ¬²Ês~]®tªapŎJ¨Öº_Ŕ`Ŗ^Đ\\Ĝu~m²Ƹ¸fWĦrƔ}Î^gjdfÔ¡J}\\n C¦þWxªJRÔŠu¬ĨĨmFdM{\\d\\YÊ¢ú@@¦ª²SÜsC}fNècbpRmlØ^gd¢aÒ¢CZZxvÆ¶N¿¢T@uC¬^ĊðÄn|lGlRjsp¢ED}Fio~ÔN~zkĘHVsǲßjŬŢ`Pûàl¢\\ÀEhİgÞē X¼Pk|m"],encodeOffsets:[[118256,37017]]}},{type:"Feature",id:"420000",properties:{id:"420000",cp:[113.298572,30.684355],name:"湖北",childNum:3},geometry:{type:"MultiPolygon",coordinates:[["@@AB"],["@@lskt"],["@@¾«}{ra®pîÃ\\{øCËyyB±b\\òÝjKL ]ĎĽÌJyÚCƈćÎT´Å´pb©ÈdFin~BCo°BĎÃømv®E^vǾ½Ĝ²RobÜeN^ĺ£R¬lĶ÷YoĖ¥Ě¾|sOr°jY`~I¾®I{GqpCgyl{£ÍÍyPLÂ¡¡¸kWxYlÙæŁĢz¾V´W¶ùŸo¾ZHxjwfxGNÁ³Xéæl¶EièIH ujÌQ~v|sv¶Ôi|ú¢FhQsğ¦SiŠBgÐE^ÁÐ{čnOÂÈUÎóĔÊēĲ}Z³½Mŧïeyp·uk³DsÑ¨L¶_ÅuÃ¨w»¡WqÜ]\\Ò§tƗcÕ¸ÕFÏǝĉăxŻČƟOKÉġÿ×wg÷IÅzCg]m«ªGeçÃTC«[t§{loWeC@ps_Bp­rf_``Z|ei¡oċMqow¹DƝÓDYpûsYkıǃ}s¥ç³[§cY§HK«Qy]¢wwö¸ïx¼ņ¾Xv®ÇÀµRĠÐHM±cÏdƒǍũȅȷ±DSyúĝ£ŤĀàtÖÿï[îb\\}pĭÉI±Ñy¿³x¯No|¹HÏÛmjúË~TuęjCöAwě¬Rđl¯ Ñb­ŇTĿ_[IčĄʿnM¦ğ\\É[T·k¹©oĕ@A¾wya¥Y\\¥Âaz¯ãÁ¡k¥ne£ÛwE©Êō¶˓uoj_U¡cF¹­[WvP©whuÕyBF`RqJUw\\i¡{jEPïÿ½fćQÑÀQ{°fLÔ~wXgītêÝ¾ĺHd³fJd]HJ²EoU¥HhwQsƐ»Xmg±çve]DmÍPoCc¾_hhøYrŊU¶eD°Č_N~øĹĚ·`z]Äþp¼äÌQv\\rCé¾TnkžŐÚÜa¼ÝƆĢ¶ÛodĔňÐ¢JqPb ¾|J¾fXƐîĨ_Z¯À}úƲN_ĒÄ^ĈaŐyp»CÇÄKñL³ġM²wrIÒŭxjb[n«øæà ^²­h¯ÚŐªÞ¸Y²ĒVø}Ā^İ´LÚm¥ÀJÞ{JVųÞŃx×sxxƈē ģMřÚðòIfĊŒ\\Ʈ±ŒdÊ§ĘDvČ_Àæ~Dċ´A®µ¨ØLV¦êHÒ¤"]],encodeOffsets:[[[113712,34e3]],[[115612,30507]],[[113649,34054]]]}},{type:"Feature",id:"430000",properties:{id:"430000",cp:[111.782279,28.09409],name:"湖南",childNum:3},geometry:{type:"MultiPolygon",coordinates:[["@@nFTs"],["@@ßÅÆá½ÔXrCOËRïÿĩ­TooQyÓ[ŅBE¬ÎÓXaį§Ã¸G °ITxpúxÚĳ¥ÏĢ¾edÄ©ĸGàGhM¤Â_U}Ċ}¢pczfþg¤ÇòAVM"],["@@©KA·³CQ±Á«³BUƑ¹AtćOwD]JiØSm¯b£ylXHËÑ±H«C^õľAÅ§¤É¥ïyuǙuA¢^{ÌC´­¦ŷJ£^[ª¿ĕ~ƇN skóā¹¿ï]ă~÷O§­@Vm¡Qđ¦¢Ĥ{ºjÔª¥nf´~Õo×ÛąMąıuZmZcÒ ĲĪ²SÊǄŶ¨ƚCÖŎªQØ¼rŭ­«}NÏürÊ¬mjr@ĘrTW ­SsdHzƓ^ÇÂyUi¯DÅYlŹu{hT}mĉ¹¥ěDÿë©ıÓ[Oº£¥ótł¹MÕƪ`PDiÛU¾ÅâìUñBÈ£ýhedy¡oċ`pfmjP~kZaZsÐd°wj§@Ĵ®w~^kÀÅKvNmX\\¨aŃqvíó¿F¤¡@ũÑVw}S@j}¾«pĂrªg àÀ²NJ¶¶DôK|^ª°LX¾ŴäPĪ±£EXd^¶ĲÞÜ~u¸ǔMRhsRe`ÄofIÔ\\Ø  ićymnú¨cj ¢»GČìƊÿÐ¨XeĈĀ¾Oð Fi ¢|[jVxrIQ_EzAN¦zLU`cªxOTu RLÄ¢dVi`p˔vŎµªÉF~Ød¢ºgİàw¸Áb[¦Zb¦z½xBĖ@ªpºlS¸Ö\\Ĕ[N¥ˀmĎăJ\\ŀ`ňSÚĖÁĐiOĜ«BxDõĚivSÌ}iùÜnÐºG{p°M´wÀÒzJ²ò¨ oTçüöoÛÿñőĞ¤ùTz²CȆȸǎŪƑÐc°dPÎğË¶[È½u¯½WM¡­ÉB·rínZÒ `¨GA¾\\pēXhÃRC­üWGġuTé§ŎÑ©ò³I±³}_EÃħg®ęisÁPDmÅ{b[RÅs·kPŽƥóRoOV~]{g\\êYƪ¦kÝbiċƵGZ»Ěõó·³vŝ£ø@pyö_ëIkÑµbcÑ§y×dYØªiþ¨[]f]Ņ©C}ÁN»hĻħƏĩ"]],encodeOffsets:[[[115640,30489]],[[112543,27312]],[[116690,26230]]]}},{type:"Feature",id:"440000",properties:{id:"440000",cp:[113.280637,23.125178],name:"广东",childNum:24},geometry:{type:"MultiPolygon",coordinates:[["@@QdAua"],["@@lxDLo"],["@@sbhNLo"],["@@Ă ā"],["@@WltO[["],["@@Kr]S"],["@@eI]y"],["@@I|Mym"],["@@Û³LS¼Y"],["@@nvºBëui©`¾"],["@@zdÛJw®"],["@@°¯"],["@@a yAª¸ËJIxØ@ĀHAmÃV¡ofuo"],["@@sŗÃÔėAƁZÄ ~°ČPäh"],["@@¶ÝÌvmĞh­ıQ"],["@@HdSjĒ¢D}waru«ZqadYM"],["@@el\\LqqU"],["@@~rMo\\"],["@@f^C"],["@@øPªoj÷ÍÝħXČx°Q¨ıXNv"],["@@gÇƳo[~tly"],["@@EÆC¿"],["@@OP"],["@@wđógĝ[³¡VÙæÅöMÌ³¹pÁaËýý©D©ÜJŹƕģGą¤{ÙūÇO²«BƱéAÒĥ¡«BhlmtÃPµyU¯ucd·w_bŝcīímGO|KPȏŹãŝIŕŭŕ@Óoo¿ē±ß}ŭĲWÈCőâUâǙIğŉ©IĳE×Á³AówXJþ±ÌÜÓĨ£L]ĈÙƺZǾĆĖMĸĤfÎĵlŨnÈĐtFFĤêk¶^k°f¶g}®Faf`vXŲxl¦ÔÁ²¬Ð¦pqÊÌ²iXØRDÎ}Ä@ZĠsx®AR~®ETtĄZƈfŠŠHâÒÐAµ\\S¸^wĖkRzalŜ|E¨ÈNĀňZTpBh£\\ĎƀuXĖtKL¶G|»ĺEļĞ~ÜĢÛĊrOÙîvd]n¬VÊĜ°RÖpMƂªFbwEÀ©\\¤]ŸI®¥D³|Ë]CöAŤ¦æ´¥¸Lv¼¢ĽBaôF~®²GÌÒEYzk¤°ahlVÕI^CxĈPsBƒºV¸@¾ªR²ĨN]´_eavSivc}p}Đ¼ƌkJÚe th_¸ ºx±ò_xNË²@ă¡ßH©Ùñ}wkNÕ¹ÇO½¿£ĕ]ly_WìIÇª`uTÅxYĒÖ¼kÖµMjJÚwn\\hĒv]îh|ÈƄøèg¸Ķß ĉĈWb¹ƀdéĘNTtP[öSvrCZaGubo´ŖÒÇĐ~¡zCIözx¢PnÈñ @ĥÒ¦]ƞV}³ăĔñiiÄÓVépKG½ÄÓávYoC·sitiaÀyŧÎ¡ÈYDÑům}ý|m[węõĉZÅxUO}÷N¹³ĉo_qtăqwµŁYÙǝŕ¹tïÛUÃ¯mRCºĭ|µÕÊK½Rē ó]GªęAx»HO£|ām¡diď×YïYWªŉOeÚtĐ«zđ¹TāúEá²\\ķÍ}jYàÙÆſ¿Çdğ·ùTßÇţʄ¡XgWÀǇğ·¿ÃOj YÇ÷Qěi"]],encodeOffsets:[[[117381,22988]],[[116552,22934]],[[116790,22617]],[[116973,22545]],[[116444,22536]],[[116931,22515]],[[116496,22490]],[[116453,22449]],[[113301,21439]],[[118726,21604]],[[118709,21486]],[[113210,20816]],[[115482,22082]],[[113171,21585]],[[113199,21590]],[[115232,22102]],[[115739,22373]],[[115134,22184]],[[113056,21175]],[[119573,21271]],[[119957,24020]],[[115859,22356]],[[116561,22649]],[[116285,22746]]]}},{type:"Feature",id:"450000",properties:{id:"450000",cp:[108.320004,22.82402],name:"广西",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@H TQ§A"],["@@ĨÊªLƊDÎĹĐCǦė¸zÚGn£¾rªŀÜt¬@ÖÚSx~øOŒŶÐÂæȠ\\ÈÜObĖw^oÞLf¬°bI lTØBÌF£Ć¹gñĤaYt¿¤VSñK¸¤nM¼JE±½¸ñoÜCƆæĪ^ĚQÖ¦^f´QüÜÊz¯lzUĺš@ìp¶n]sxtx¶@~ÒĂJb©gk{°~c°`Ô¬rV\\la¼¤ôá`¯¹LCÆbxEræOv[H­[~|aB£ÖsºdAĐzNÂðsÞÆĤªbab`ho¡³F«èVlo¤ÔRzpp®SĪº¨ÖºNĳd`a¦¤F³ºDÎńĀìCĜº¦Ċ~nS|gźvZkCÆj°zVÈÁƔ]LÊFZgčP­kini«qÇczÍY®¬Ů»qR×ō©DÕ§ƙǃŵTÉĩ±ıdÑnYYĲvNĆĆØÜ Öp}e³¦m©iÓ|¹ħņ|ª¦QF¢Â¬ʖovg¿em^ucà÷gÕuíÙćĝ}FĻ¼Ĺ{µHKsLSđƃrč¤[AgoSŇYMÿ§Ç{FśbkylQxĕ]T·¶[BÑÏGáşşƇeăYSs­FQ}­BwtYğÃ@~CÍQ ×WjË±rÉ¥oÏ ±«ÓÂ¥kwWűmcih³K~µh¯e]lµélEģEďsmÇŧē`ãògK_ÛsUʝćğ¶höO¤Ǜn³c`¡y¦CezYwa[ďĵűMę§]XÎ_íÛ]éÛUćİÕBƣ±dy¹T^dûÅÑŦ·PĻþÙ`K¦¢ÍeĥR¿³£[~äu¼dltW¸oRM¢ď\\z}Æzdvň{ÎXF¶°Â_ÒÂÏL©ÖTmu¼ãlīkiqéfA·Êµ\\őDc¥ÝFyÔćcűH_hLÜêĺĐ¨c}rn`½Ì@¸¶ªVLhŒ\\Ţĺk~Ġið°|gtTĭĸ^xvKVGréAébUuMJVÃO¡qĂXËSģãlýà_juYÛÒBG^éÖ¶§EGÅzěƯ¤EkN[kdåucé¬dnYpAyČ{`]þ¯TbÜÈk¡ĠvàhÂƄ¢Jî¶²"]],encodeOffsets:[[[111707,21520]],[[107619,25527]]]}},{type:"Feature",id:"460000",properties:{id:"460000",cp:[109.83119,19.031971],name:"海南",childNum:1},geometry:{type:"Polygon",coordinates:["@@¦Ŝil¢XƦƞòïè§ŞCêɕrŧůÇąĻõ·ĉ³œ̅kÇm@ċȧŧĥĽʉ­ƅſȓÒË¦ŝE}ºƑ[ÍĜȋ gÎfǐÏĤ¨êƺ\\Ɔ¸ĠĎvʄȀÐ¾jNðĀÒRZǆzÐŘÎ°H¨Ƣb²_Ġ "],encodeOffsets:[[112750,20508]]}},{type:"Feature",id:"510000",properties:{id:"510000",cp:[104.065735,30.659462],name:"四川",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@LqKr"],["@@[ĻéV£_ţġñpG réÏ·~ąSfy×Í·ºſƽiÍıƣıĻmHH}siaX@iÇ°ÁÃ×t«­T¤JJJyJÈ`Ohß¦¡uËhIyCjmÿwZGTiSsOB²fNmsPa{M{õE^Hj}gYpaeu¯oáwHjÁ½M¡pMuåmni{fk\\oÎqCwEZ¼KĝAy{m÷LwO×SimRI¯rKõBS«sFe]fµ¢óY_ÆPRcue°Cbo×bd£ŌIHgtrnyPt¦foaXďxlBowz_{ÊéWiêEGhÜ¸ºuFĈIxf®Y½ĀǙ]¤EyF²ċw¸¿@g¢§RGv»áW`ÃĵJwi]t¥wO­½a[×]`Ãi­üL¦LabbTÀåc}ÍhÆh®BHî|îºÉk­¤Sy£ia©taį·Ɖ`ō¥UhOĝLk}©Fos´JmµlŁuønÑJWÎªYÀïAetTŅÓGË«bo{ıwodƟ½OġÜÂµxàNÖ¾P²§HKv¾]|BÆåoZ`¡Ø`ÀmºĠ~ÌÐ§nÇ¿¤]wğ@srğu~Io[é±¹ ¿ſđÓ@qg¹zƱřaí°KtÇ¤V»Ã[ĩǭƑ^ÇÓ@áťsZÏÅĭƋěpwDóÖáŻneQËq·GCœýS]x·ýq³OÕ¶Qzßti{řáÍÇWŝŭñzÇWpç¿JXĩè½cFÂLiVjx}\\NŇĖ¥GeJA¼ÄHfÈu~¸Æ«dE³ÉMA|bÒćhG¬CMõƤąAvüVéŀ_VÌ³ĐwQj´·ZeÈÁ¨X´Æ¡Qu·»ÕZ³ġqDoy`L¬gdp°şp¦ėìÅĮZ°Iähzĵf²å ĚÑKpIN|Ñz]ń·FU×é»R³MÉ»GM«kiér}Ã`¹ăÞmÈnÁîRǀ³ĜoİzŔwǶVÚ£À]ɜ»ĆlƂ²ĠþTº·àUȞÏʦ¶I«dĽĢdĬ¿»Ĕ×h\\c¬ä²GêëĤł¥ÀǿżÃÆMº}BÕĢyFVvwxBèĻĒ©ĈtCĢɽŠȣ¦āæ·HĽîôNÔ~^¤Ɗu^s¼{TA¼ø°¢İªDè¾Ň¶ÝJ®Z´ğ~Sn|ªWÚ©òzPOȸbð¢|øĞŒQìÛÐ@ĞǎRS¤Á§di´ezÝúØã]HqkIþËQÇ¦ÃsÇ¤[E¬ÉŪÍxXƒ·ÖƁİlƞ¹ª¹|XÊwnÆƄmÀêErĒtD®ċæcQE®³^ĭ¥©l}äQtoŖÜqÆkµªÔĻĴ¡@Ċ°B²Èw^^RsºTĀ£ŚæQPJvÄz^Đ¹Æ¯fLà´GC²dt­ĀRt¼¤ĦOðğfÔðDŨŁĞƘïPÈ®âbMüÀXZ ¸£@Å»»QÉ­]dsÖ×_Í_ÌêŮPrĔĐÕGĂeZÜîĘqBhtO ¤tE[h|YÔZśÎs´xº±Uñt|OĩĠºNbgþJy^dÂY Į]Řz¦gC³R`Āz¢Aj¸CL¤RÆ»@­Ŏk\\Ç´£YW}z@Z}Ã¶oû¶]´^NÒ}èNªPÍy¹`S°´ATeVamdUĐwʄvĮÕ\\uÆŗ¨Yp¹àZÂmWh{á}WØǍÉüwga§áCNęÎ[ĀÕĪgÖÉªXøx¬½Ů¦¦[NÎLÜUÖ´òrÙŠxR^JkĳnDX{U~ET{ļº¦PZcjF²Ė@pg¨B{u¨ŦyhoÚD®¯¢ WòàFÎ¤¨GDäz¦kŮPġqË¥À]eâÚ´ªKxīPÖ|æ[xÃ¤JÞĥsNÖ½I¬nĨY´®ÐƐmDŝuäđđEbee_v¡}ìęǊē}qÉåT¯µRs¡M@}ůaa­¯wvƉåZw\\Z{åû^"]],encodeOffsets:[[[108815,30935]],[[110617,31811]]]}},{type:"Feature",id:"520000",properties:{id:"520000",cp:[106.713478,26.578343],name:"贵州",childNum:3},geometry:{type:"MultiPolygon",coordinates:[["@@G\\lY£in"],["@@q|mc¯tÏVSÎ"],["@@hÑ£IsNgßHHªķÃh_¹¡ĝÄ§ń¦uÙùgS¯JH|sÝÅtÁïyMDč»eÕtA¤{b\\}G®u\\åPFqwÅaDK°ºâ_£ùbµmÁÛĹM[q|hlaªāI}Ñµ@swtwm^oµDéĽŠyVky°ÉûÛR³e¥]RÕěħ[ƅåÛDpJiVÂF²I»mN·£LbÒYbWsÀbpkiTZĄă¶Hq`ĥ_J¯ae«KpÝx]aĕÛPÇȟ[ÁåŵÏő÷Pw}TÙ@Õs«ĿÛq©½m¤ÙH·yǥĘĉBµĨÕnđ]K©œáGçş§ÕßgǗĦTèƤƺ{¶ÉHÎd¾ŚÊ·OÐjXWrãLyzÉAL¾ę¢bĶėy_qMĔąro¼hĊw¶øV¤w²Ĉ]ÊKx|`ź¦ÂÈdrcÈbe¸`I¼čTF´¼Óýȃr¹ÍJ©k_șl³´_pĐ`oÒh¶pa^ÓĔ}D»^Xy`d[KvJPhèhCrĂĚÂ^Êƌ wZL­Ġ£ÁbrzOIlMMĪŐžËr×ÎeŦtw|¢mKjSǘňĂStÎŦEtqFT¾Eì¬¬ôxÌO¢ K³ŀºäYPVgŎ¦ŊmŞ¼VZwVlz¤£Tl®ctĽÚó{G­AÇge~Îd¿æaSba¥KKûj®_Ä^\\Ø¾bP®¦x^sxjĶI_Ä Xâ¼Hu¨Qh¡À@Ëô}±GNìĎlT¸`V~R°tbÕĊ`¸úÛtÏFDu[MfqGH·¥yAztMFe|R_GkChZeÚ°tov`xbDnÐ{E}ZèxNEÞREn[Pv@{~rĆAB§EO¿|UZ~ìUf¨J²ĂÝÆsªB`s¶fvö¦Õ~dÔq¨¸º»uù[[§´sb¤¢zþF¢ÆÀhÂW\\ıËIÝo±ĭŠ£þÊs}¡R]ěDg´VG¢j±®èºÃmpU[Áëº°rÜbNu¸}º¼`niºÔXĄ¤¼ÔdaµÁ_ÃftQQgR·Ǔv}Ý×ĵ]µWc¤F²OĩųãW½¯K©]{LóµCIµ±Mß¿h©āq¬o½~@i~TUxŪÒ¢@£ÀEîôruńb[§nWuMÆLl¿]x}ĳ­½"]],encodeOffsets:[[[112158,27383]],[[112105,27474]],[[112095,27476]]]}},{type:"Feature",id:"530000",properties:{id:"530000",cp:[101.512251,24.740609],name:"云南",childNum:1},geometry:{type:"Polygon",coordinates:["@@[ùx½}ÑRHYīĺûsÍniEoã½Ya²ė{c¬ĝgĂsAØÅwďõzFjw}«Dx¿}Uũlê@HÅ­F¨ÇoJ´Ónũuą¡Ã¢pÒÅØ TF²xa²ËXcÊlHîAßËŁkŻƑŷÉ©hW­æßUËs¡¦}teèÆ¶StÇÇ}Fd£jĈZĆÆ¤Tč\\D}O÷£U§~ŃGåŃDĝ¸Tsd¶¶Bª¤u¢ŌĎo~t¾ÍŶÒtD¦ÚiôözØX²ghįh½Û±¯ÿm·zR¦Ɵ`ªŊÃh¢rOÔ´£Ym¼èêf¯ŪĽncÚbw\\zlvWªâ ¦gmĿBĹ£¢ƹřbĥkǫßeeZkÙIKueT»sVesbaĕ  ¶®dNĄÄpªy¼³BE®lGŭCǶwêżĔÂepÍÀQƞpC¼ŲÈ­AÎô¶RäQ^Øu¬°_Èôc´¹ò¨PÎ¢hlĎ¦´ĦÆ´sâÇŲPnÊD^¯°Upv}®BPÌªjǬxSöwlfòªvqĸ|`H­viļndĜ­Ćhňem·FyÞqóSį¯³X_ĞçêtryvL¤§z¦c¦¥jnŞklD¤øz½ĜàĂŧMÅ|áƆàÊcðÂFÜáŢ¥\\\\ºİøÒÐJĴîD¦zK²ǏÎEh~CD­hMn^ÌöÄ©ČZÀaüfɭyœpį´ěFűk]Ôě¢qlÅĆÙa¶~ÄqêljN¬¼HÊNQ´ê¼VØ¸E^ŃÒyM{JLoÒęæe±Ķygã¯JYÆĭĘëo¥Šo¯hcK«z_prC´ĢÖY¼ v¸¢RÅW³Â§fÇ¸Yi³xR´ďUË`êĿUûuĆBƣöNDH«ĈgÑaB{ÊNF´¬c·Åv}eÇÃGB»If¦HňĕM~[iwjUÁKE¾dĪçWIèÀoÈXòyŞŮÈXâÎŚj|àsRyµÖPr´þ ¸^wþTDŔHr¸RÌmfżÕâCôoxĜƌÆĮÐYtâŦÔ@]ÈǮƒ\\Ī¼Ä£UsÈ¯LbîƲŚºyhr@ĒÔƀÀ²º\\êpJ}ĠvqtĠ@^xÀ£È¨mËÏğ}n¹_¿¢×Y_æpÅA^{½Lu¨GO±Õ½ßM¶wÁĢÛPƢ¼pcĲx|apÌ¬HÐŊSfsðBZ¿©XÏÒKk÷Eû¿SrEFsÕūkóVǥŉiTL¡n{uxţÏhôŝ¬ğōNNJkyPaqÂğ¤K®YxÉƋÁ]āęDqçgOgILu\\_gz]W¼~CÔē]bµogpÑ_oď`´³Țkl`IªºÎȄqÔþ»E³ĎSJ»_f·adÇqÇc¥Á_Źw{L^É±ćxU£µ÷xgĉp»ĆqNē`rĘzaĵĚ¡K½ÊBzyäKXqiWPÏÉ¸½řÍcÊG|µƕƣGË÷k°_^ý|_zċBZocmø¯hhcæ\\lMFlư£ĜÆyHF¨µêÕ]HAàÓ^it `þßäkĤÎT~Wlÿ¨ÔPzUCNVv [jâôDôď[}z¿msSh¯{jïğl}šĹ[őgK©U·µË@¾m_~q¡f¹ÅË^»f³ø}Q¡ÖË³gÍ±^Ç\\ëÃA_¿bWÏ[¶ƛé£F{īZgm@|kHǭƁć¦UĔť×ë}ǝeďºȡȘÏíBÉ£āĘPªĳ¶ŉÿy©nď£G¹¡I±LÉĺÑdĉÜW¥}gÁ{aqÃ¥aıęÏZï`"],encodeOffsets:[[104636,22969]]}},{type:"Feature",id:"540000",properties:{id:"540000",cp:[89.132212,30.860361],name:"西藏",childNum:1},geometry:{type:"Polygon",coordinates:["@@ÂhľxŖxÒVºÅâAĪÝȆµę¯Ňa±r_w~uSÕňqOj]ɄQ£ZUDûoY»©M[L¼qãË{VÍçWVi]ë©Ä÷àyƛhÚU°adcQ~Mx¥cc¡ÙaSyFÖk­uRýq¿ÔµQĽ³aG{¿FµëªéĜÿª@¬·K·àariĕĀ«V»ŶĴūgèLǴŇƶaftèBŚ£^âǐÝ®M¦ÁǞÿ¬LhJ¾óƾÆºcxwf]Y´¦|QLn°adĊ\\¨oǀÍŎ´ĩĀd`tÊQŞŕ|¨C^©Ĉ¦¦ÎJĊ{ëĎjª²rÐl`¼Ą[t|¦Stè¾PÜK¸dƄı]s¤î_v¹ÎVòŦj£Əsc¬_Ğ´|Ł¦Av¦w`ăaÝaa­¢e¤ı²©ªSªÈMĄwÉØŔì@T¤Ę\\õª@þo´­xA sÂtŎKzó´ÇĊµ¢r^nĊ­Æ¬×üG¢³ {âĊ]G~bÀgVjzlhǶfOfdªB]pjTOtĊn¤}®¦Č¥d¢¼»ddY¼t¢eȤJ¤}Ǿ¡°§¤AÐlc@ĝsªćļđAçwxUuzEÖġ~AN¹ÄÅȀŻ¦¿ģŁéì±Hãd«g[Ø¼ēÀcīľġ¬cJµÐʥVȝ¸ßS¹ý±ğkƁ¼ą^ɛ¤Ûÿb[}¬ōõÃ]ËNm®g@Bg}ÍF±ǐyL¥íCIĳÏ÷Ñį[¹¦[âšEÛïÁÉdƅß{âNÆāŨß¾ě÷yC£k­´ÓH@Â¹TZ¥¢į·ÌAÐ§®Zcv½Z­¹|ÅWZqgW|ieZÅYVÓqdqbc²R@c¥Rã»GeeƃīQ}J[ÒK¬Ə|oėjġĠÑN¡ð¯EBčnwôɍėª²CλŹġǝʅįĭạ̃ūȹ]ΓͧgšsgȽóϧµǛęgſ¶ҍć`ĘąŌJÞä¤rÅň¥ÖÁUětęuůÞiĊÄÀ\\Æs¦ÓRb|Â^řÌkÄŷ¶½÷f±iMÝ@ĥ°G¬ÃM¥n£Øąğ¯ß§aëbéüÑOčk£{\\eµª×MÉfm«Ƒ{Å×Gŏǩãy³©WÑăû··Qòı}¯ãIéÕÂZ¨īès¶ZÈsæĔTŘvgÌsN@îá¾ó@ÙwU±ÉTå»£TđWxq¹Zobs[×¯cĩvėŧ³BM|¹kªħ¥TzNYnÝßpęrñĠĉRS~½ěVVµõ«M££µBĉ¥áºae~³AuĐh`Ü³ç@BÛïĿa©|z²Ý¼D£àč²ŸIûI āóK¥}rÝ_Á´éMaň¨~ªSĈ½½KÙóĿeƃÆB·¬ën×W|Uº}LJrƳlŒµ`bÔ`QÐÓ@s¬ñIÍ@ûws¡åQÑßÁ`ŋĴ{ĪTÚÅTSÄ³Yo|Ç[Ç¾µMW¢ĭiÕØ¿@MhpÕ]jéò¿OƇĆƇpêĉâlØwěsǩĵ¸cbU¹ř¨WavquSMzeo_^gsÏ·¥Ó@~¯¿RiīB\\qTGªÇĜçPoÿfñòą¦óQīÈáPābß{ZŗĸIæÅhnszÁCËìñÏ·ąĚÝUm®ó­L·ăUÈíoù´Êj°ŁŤ_uµ^°ìÇ@tĶĒ¡ÆM³Ģ«İĨÅ®ğRāðggheÆ¢zÊ©Ô\\°ÝĎz~ź¤PnMĪÖB£kné§żćĆKĒ°¼L¶èâz¨u¦¥LDĘz¬ýÎmĘd¾ßFzhg²Fy¦ĝ¤ċņbÎ@yĄæm°NĮZRÖíJ²öLĸÒ¨Y®ƌÐVàtt_ÚÂyĠz]ŢhzĎ{ÂĢXc|ÐqfO¢¤ögÌHNPKŖUú´xx[xvĐCûĀìÖT¬¸^}Ìsòd´_KgžLĴÀBon|H@Êx¦BpŰŌ¿fµƌA¾zǈRx¶FkĄźRzŀ~¶[´HnªVƞuĒ­È¨ƎcƽÌm¸ÁÈM¦x͊ëÀxǆBú^´W£dkɾĬpw˂ØɦļĬIŚÊnŔa¸~J°îlɌxĤÊÈðhÌ®gT´øàCÀ^ªerrƘd¢İP|Ė ŸWªĦ^¶´ÂLaT±üWƜǀRÂŶUńĖ[QhlLüAÜ\\qRĄ©"],encodeOffsets:[[90849,37210]]}},{type:"Feature",id:"610000",properties:{id:"610000",cp:[108.948024,34.263161],name:"陕西",childNum:1},geometry:{type:"Polygon",coordinates:["@@p¢ȮµûGĦ}Ħðǚ¶òƄjɂz°{ºØkÈęâ¦jªBg\\ċ°s¬]jú EȌǆ¬stRÆdĠİwÜ¸ôW¾ƮłÒ_{Ìû¼jº¹¢GǪÒ¯ĘZ`ºŊecņą~BÂgzpâēòYǠȰÌTÎ¨ÂW|fcă§uF@N¢XLRMº[ğȣſï|¥Jkc`sŉǷY¹W@µ÷Kãï³ÛIcñ·VȋÚÒķø©þ¥yÓğęmWµÎumZyOŅƟĥÓ~sÑL¤µaÅY¦ocyZ{y c]{Ta©`U_Ěē£ωÊƍKùK¶ȱÝƷ§{û»ÅÁȹÍéuĳ|¹cÑdìUYOuFÕÈYvÁCqÓTǢí§·S¹NgV¬ë÷Át°DØ¯C´ŉƒópģ}ċcEËFéGU¥×K§­¶³BČ}C¿åċ`wġB·¤őcƭ²ő[Å^axwQOÿEËßŚĤNĔwƇÄńwĪ­o[_KÓª³ÙnKÇěÿ]ďă_d©·©Ýŏ°Ù®g]±ßå¬÷m\\iaǑkěX{¢|ZKlçhLtŇîŵœè[É@ƉĄEtƇÏ³­ħZ«mJ×¾MtÝĦ£IwÄå\\Õ{OwĬ©LÙ³ÙgBƕŀrÌĢŭO¥lãyC§HÍ£ßEñX¡­°ÙCgpťzb`wIvA|§hoĕ@E±iYd¥OĻ¹S|}F@¾oAO²{tfÜ¢FǂÒW²°BĤh^Wx{@¬­F¸¡ķn£P|ªĴ@^ĠĈæbÔc¶lYi^MicĎ°Â[ävï¶gv@ÀĬ·lJ¸sn|¼u~a]ÆÈtŌºJpþ£KKf~¦UbyäIĺãnÔ¿^­ŵMThĠÜ¤ko¼Ŏìąǜh`[tRd²Ĳ_XPrɲlXiL§à¹H°Ȧqº®QCbAŌJ¸ĕÚ³ĺ§ `d¨YjiZvRĺ±öVKkjGȊÄePĞZmļKÀ[`ösìhïÎoĬdtKÞ{¬èÒÒBÔpĲÇĬJŊ¦±J«Y§@·pHµàåVKepWftsAÅqC·¬ko«pHÆuK@oHĆÛķhxenS³àǍrqƶRbzy¸ËÐl¼EºpĤ¼x¼½~Ğà@ÚüdK^mÌSj"],encodeOffsets:[[110234,38774]]}},{type:"Feature",id:"620000",properties:{id:"620000",cp:[103.823557,36.058039],name:"甘肃",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@VuUv"],["@@ũEĠtt~nkh`Q¦ÅÄÜdwAb×ĠąJ¤DüègĺqBqj°lI¡ĨÒ¤úSHbjÎB°aZ¢KJO[|A£Dx}NĂ¬HUnrk kp¼Y kMJn[aGáÚÏ[½rc}aQxOgsPMnUsncZsKúvAtÞġ£®ĀYKdnFw¢JE°Latf`¼h¬we|Æbj}GA·~W`¢MC¤tL©Ĳ°qdfObÞĬ¹ttu`^ZúE`[@Æsîz®¡CƳƜG²R¢RmfwĸgÜą G@pzJM½mhVy¸uÈÔO±¨{LfæU¶ßGĂq\\ª¬²I¥IŉÈīoıÓÑAçÑ|«LÝcspīðÍgtë_õ\\ĉñLYnĝgRǡÁiHLlõUĹ²uQjYi§Z_c¨´ĹĖÙ·ŋIaBD­R¹ȥr¯GºßK¨jWkɱOqWĳ\\a­Q\\sg_ĆǛōëp»£lğÛgSŶN®À]ÓämĹãJaz¥V}Le¤Lýo¹IsŋÅÇ^bz³tmEÁ´a¹cčecÇNĊãÁ\\č¯dNj]jZµkÓdaćå]ğĳ@ ©O{¤ĸm¢E·®«|@Xwg]Aģ±¯XǁÑǳªcwQÚŝñsÕ³ÛV_ý¥\\ů¥©¾÷w©WÕÊĩhÿÖÁRo¸V¬âDb¨hûxÊ×ǌ~Zâg|XÁnßYoº§ZÅŘv[ĭÖʃuďxcVbnUSfB¯³_TzºÎO©çMÑ~M³]µ^püµÄY~y@X~¤Z³[Èōl@®Å¼£QK·Di¡ByÿQ_´D¥hŗy^ĭÁZ]cIzýah¹MĪğPs{ò²Vw¹t³ŜË[Ñ}X\\gsF£sPAgěp×ëfYHāďÖqēŭOÏëdLü\\it^c®RÊº¶¢H°mrY£B¹čIoľu¶uI]vģSQ{UŻÅ}QÂ|Ì°ƅ¤ĩŪU ęĄÌZÒ\\v²PĔ»ƢNHĂyAmƂwVm`]ÈbH`Ì¢²ILvĜH®¤Dlt_¢JJÄämèÔDëþgºƫaʎÌrêYi~ Îİ¤NpÀA¾Ĕ¼bð÷®üszMzÖĖQdȨýv§Tè|ªHÃ¾a¸|Ð ƒwKĢx¦ivr^ÿ ¸l öæfƟĴ·PJv}n\\h¹¶v·À|\\ƁĚN´ĜçèÁz]ġ¤²¨QÒŨTIlªťØ}¼˗ƦvÄùØEÂ«FïËIqōTvāÜŏíÛßÛVj³âwGăÂíNOPìyV³ŉĖýZso§HÑiYw[ß\\X¦¥c]ÔƩÜ·«jÐqvÁ¦m^ċ±R¦΋ƈťĚgÀ»IïĨʗƮ°ƝĻþÍAƉſ±tÍEÕÞāNUÍ¡\\ſčåÒʻĘm ƭÌŹöʥëQ¤µ­ÇcƕªoIýIÉ_mkl³ăƓ¦j¡YzŇi}Msßõīʋ }ÁVm_[n}eı­Uĥ¼ªI{Î§DÓƻėojqYhĹT©oūĶ£]ďxĩǑMĝq`B´ƃ˺Чç~²ņj@¥@đ´ί}ĥtPńÇ¾V¬ufÓÉCtÓ̻¹£G³]ƖƾŎĪŪĘ̖¨ʈĢƂlɘ۪üºňUðǜȢƢż̌ȦǼĤŊɲĖÂ­Kq´ï¦ºĒǲņɾªǀÞĈĂD½ĄĎÌŗĞrôñnN¼â¾ʄľԆ|Ǆ֦ज़ȗǉ̘̭ɺƅêgV̍ʆĠ·ÌĊv|ýĖÕWĊǎÞ´õ¼cÒÒBĢ͢UĜð͒s¨ňƃLĉÕÝ@ɛƯ÷¿Ľ­ĹeȏĳëCȚDŲyê×Ŗyò¯ļcÂßYtÁƤyAã˾J@ǝrý@¤rz¸oP¹ɐÚyáHĀ[JwcVeȴÏ»ÈĖ}ƒŰŐèȭǢόĀƪÈŶë;Ñ̆ȤМľĮEŔĹŊũ~ËUă{ĻƹɁύȩþĽvĽƓÉ@ēĽɲßǐƫʾǗĒpäWÐxnsÀ^ƆwW©¦cÅ¡Ji§vúF¶¨c~c¼īeXǚ\\đ¾JwÀďksãAfÕ¦L}waoZD½Ml«]eÒÅaÉ²áo½FõÛ]ĻÒ¡wYR£¢rvÓ®y®LFLzĈôe]gx}|KK}xklL]c¦£fRtív¦PĤoH{tK"]],encodeOffsets:[[[108619,36299]],[[108589,36341]]]}},{type:"Feature",id:"630000",properties:{id:"630000",cp:[96.778916,35.623178],name:"青海",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@InJm"],["@@CÆ½OŃĦsΰ~Ē³¦@@Ņi±è}ШƄ˹A³r_ĞǒNĪĐw¤^ŬĵªpĺSZgrpiƼĘÔ¨C|ÍJ©Ħ»®VĲ~f\\m `UnÂ~ʌĬàöNt~ňjy¢ZiƔ¥Ąk´nl`JÊJþ©pdƖ®È£¶ìRʦźõƮËnʼėæÑƀĎ[¢VÎĂMÖÝÎF²sƊƀÎBļýƞ¯ʘƭðħ¼Jh¿ŦęΌƇ¥²Q]Č¥nuÂÏri¸¬ƪÛ^Ó¦d¥[Wàx\\ZjÒ¨GtpþYŊĕ´zUOëPîMĄÁxH´áiÜUàîÜŐĂÛSuŎrJðÌ¬EFÁú×uÃÎkrĒ{V}İ«O_ÌËĬ©ÓŧSRÑ±§Ģ£^ÂyèçěM³Ƃę{[¸¿uºµ[gt£¸OƤĿéYõ·kĀq]juw¥DĩƍõÇPéÄ½G©ã¤GuȧþRcÕĕNyyût­øï»a½ē¿BMoį£Íj}éZËqbʍƬh¹ìÿÓAçãnIÃ¡I`ks£CG­ěUy×Cy@¶ʡÊBnāzGơMē¼±O÷õJËĚăVĪũƆ£¯{ËL½ÌzżVR|ĠTbuvJvµhĻĖHAëáa­OÇðñęNwœľ·LmI±íĠĩPÉ×®ÿscB³±JKßĊ«`ađ»·QAmOVţéÿ¤¹SQt]]Çx±¯A@ĉĳ¢Óļ©l¶ÅÛrŕspãRk~¦ª]Į­´FRåd­ČsCqđéFn¿ÅƃmÉx{W©ºƝºįkÕƂƑ¸wWūÐ©ÈF£\\tÈ¥ÄRÈýÌJ lGr^×äùyÞ³fjc¨£ÂZ|ǓMĝÏ@ëÜőRĝ÷¡{aïȷPu°ËXÙ{©TmĠ}Y³­ÞIňµç½©C¡į÷¯B»|St»]vųs»}MÓ ÿʪƟǭA¡fs»PY¼c¡»¦cċ­¥£~msĉPSi^o©AecPeǵkgyUi¿h}aHĉ^|á´¡HØûÅ«ĉ®]m¡qĉ¶³ÈyôōLÁstB®wn±ă¥HSòė£Së@×œÊăxÇN©©T±ª£Ĳ¡fb®Þbb_Ą¥xu¥B{łĝ³«`dƐt¤ťiñÍUuºí`£^tƃĲc·ÛLO½sç¥Ts{ă\\_»kÏ±q©čiìĉ|ÍI¥ć¥]ª§D{ŝŖÉR_sÿc³ĪōƿÎ§p[ĉc¯bKmR¥{³Ze^wx¹dƽÅ½ôIg §Mĕ ƹĴ¿ǣÜÍ]Ý]snåA{eƭ`ǻŊĿ\\ĳŬűYÂÿ¬jĖqßb¸L«¸©@ěĀ©ê¶ìÀEH|´bRľÓ¶rÀQþvl®ÕETzÜdb hw¤{LRdcb¯ÙVgƜßzÃôì®^jUèXÎ|UäÌ»rK\\ªN¼pZCüVY¤ɃRi^rPŇTÖ}|br°qňbĚ°ªiƶGQ¾²x¦PmlŜ[Ĥ¡ΞsĦÔÏâ\\ªÚŒU\\f¢N²§x|¤§xĔsZPòʛ²SÐqF`ªVÞŜĶƨVZÌL`¢dŐIqr\\oäõFÎ·¤»Ŷ×h¹]ClÙ\\¦ďÌį¬řtTӺƙgQÇÓHţĒ´ÃbEÄlbʔC|CŮkƮ[ʼ¬ň´KŮÈΰÌĪ¶ƶlðļATUvdTGº̼ÔsÊDÔveOg"]],encodeOffsets:[[[105308,37219]],[[95370,40081]]]}},{type:"Feature",id:"640000",properties:{id:"640000",cp:[106.278179,37.26637],name:"宁夏",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@KëÀęĞ«Oęȿȕı]ŉ¡åįÕÔ«ǴõƪĚQÐZhv K°öqÀÑS[ÃÖHƖčËnL]ûcÙß@ĝ¾}w»»oģF¹»kÌÏ·{zP§B­¢íyÅt@@á]Yv_ssģ¼ißĻL¾ġsKD£¡N_X¸}B~HaiÅf{«x»ge_bsKF¯¡IxmELcÿZ¤­ĢÝsuBLùtYdmVtNmtOPhRw~bd¾qÐ\\âÙH\\bImlNZ»loqlVmGā§~QCw¤{A\\PKNY¯bFkC¥sks_Ã\\ă«¢ħkJi¯rrAhĹûç£CUĕĊ_ÔBixÅÙĄnªÑaM~ħpOu¥sîeQ¥¤^dkKwlL~{L~hw^ófćKyE­K­zuÔ¡qQ¤xZÑ¢^ļöÜ¾Ep±âbÊÑÆ^fk¬NC¾YpxbK~¥eÖäBlt¿Đx½I[ĒǙWf»Ĭ}d§dµùEuj¨IÆ¢¥dXªƅx¿]mtÏwßRĶX¢͎vÆzƂZò®ǢÌʆCrâºMÞzÆMÒÊÓŊZÄ¾r°Î®Ȉmª²ĈUªĚîøºĮ¦ÌĘk^FłĬhĚiĀĖ¾iİbjÕ"],["@@mfwěwMrŢªv@G"]],encodeOffsets:[[[109366,40242]],[[108600,36303]]]}},{type:"Feature",id:"650000",properties:{id:"650000",cp:[85.617733,40.792818],name:"新疆",childNum:1},geometry:{type:"Polygon",coordinates:["@@QØĔ²X¨~ǘBºjʐßØvKƔX¨vĊOÃ·¢i@~cĝe_«E}QxgɪëÏÃ@sÅyXoŖ{ô«ŸuXêÎf`C¹ÂÿÐGĮÕĞXŪōŸMźÈƺQèĽôe|¿ƸJR¤ĘEjcUóº¯Ĩ_ŘÁMª÷Ð¥OéÈ¿ÖğǤǷÂFÒzÉx[]­Ĥĝœ¦EP}ûƥé¿İƷTėƫœŕƅƱB»Đ±ēO¦E}`cȺrĦáŖuÒª«ĲπdƺÏØZƴwʄ¤ĖGĐǂZĶèH¶}ÚZצʥĪï|ÇĦMŔ»İĝǈì¥Βba­¯¥ǕǚkĆŵĦɑĺƯxūД̵nơʃĽá½M»òmqóŘĝčË¾ăCćāƿÝɽ©ǱŅ¹đ¥³ðLrÁ®ɱĕģŉǻ̋ȥơŻǛȡVï¹Ň۩ûkɗġƁ§ʇė̕ĩũƽō^ƕUv£ƁQïƵkŏ½ΉÃŭÇ³LŇʻ«ƭ\\lŭD{ʓDkaFÃÄa³ŤđÔGRÈƚhSӹŚsİ«ĐË[¥ÚDkº^Øg¼ŵ¸£EÍöůŉT¡c_ËKYƧUśĵÝU_©rETÏʜ±OñtYwē¨{£¨uM³x½şL©Ùá[ÓÐĥ Νtģ¢\\śnkOw¥±T»ƷFɯàĩÞáB¹ÆÑUwŕĽw[mG½Èå~Æ÷QyěCFmĭZīŵVÁƿQƛûXS²b½KÏ½ĉS©ŷXĕ{ĕK·¥Ɨcqq©f¿]ßDõU³h­gËÇïģÉɋwk¯í}I·œbmÉřīJɥĻˁ×xoɹīlc¤³Xù]ǅA¿w͉ì¥wÇN·ÂËnƾƍdÇ§đ®ƝvUm©³G\\}µĿQyŹlăµEwǇQ½yƋBe¶ŋÀůo¥AÉw@{Gpm¿AĳŽKLh³`ñcËtW±»ÕSëüÿďDu\\wwwù³VLŕOMËGh£õP¡erÏd{ġWÁč|yšg^ğyÁzÙs`s|ÉåªÇ}m¢Ń¨`x¥ù^}Ì¥H«YªƅAÐ¹n~ź¯f¤áÀzgÇDIÔ´AňĀÒ¶ûEYospõD[{ù°]uJqU|Soċxţ[õÔĥkŋÞŭZËºóYËüċrw ÞkrťË¿XGÉbřaDü·Ē÷AÃª[ÄäIÂ®BÕĐÞ_¢āĠpÛÄȉĖġDKwbmÄNôfƫVÉviǳHQµâFù­Âœ³¦{YGd¢ĚÜO {Ö¦ÞÍÀP^bƾl[vt×ĈÍEË¨¡Đ~´î¸ùÎhuè`¸HÕŔVºwĠââWò@{ÙNÝ´ə²ȕn{¿¥{l÷eé^eďXj©î\\ªÑòÜìc\\üqÕ[Č¡xoÂċªbØ­ø|¶ȴZdÆÂońéG\\¼C°ÌÆn´nxÊOĨŪƴĸ¢¸òTxÊǪMīĞÖŲÃɎOvʦƢ~FRěò¿ġ~åŊúN¸qĘ[Ĕ¶ÂćnÒPĒÜvúĀÊbÖ{Äî¸~Ŕünp¤ÂH¾ĄYÒ©ÊfºmÔĘcDoĬMŬS¤s²ʘÚžȂVŦ èW°ªB|ĲXŔþÈJĦÆæFĚêYĂªĂ]øªŖNÞüAfɨJ¯ÎrDDĤ`mz\\§~D¬{vJÂ«lµĂb¤pŌŰNĄ¨ĊXW|ų ¿¾ɄĦƐMTòP÷fØĶK¢ȝ˔Sô¹òEð­`Ɩ½ǒÂň×äı§ĤƝ§C~¡hlåǺŦŞkâ~}FøàĲaĞfƠ¥Ŕd®U¸źXv¢aƆúŪtŠųƠjdƺƺÅìnrh\\ĺ¯äɝĦ]èpĄ¦´LƞĬ´ƤǬ˼Ēɸ¤rºǼ²¨zÌPðŀbþ¹ļD¢¹\\ĜÑŚ¶ZƄ³àjĨoâȴLÊȮĐ­ĚăÀêZǚŐ¤qȂ\\L¢ŌİfÆs|zºeªÙæ§΢{Ā´ƐÚ¬¨Ĵà²łhʺKÞºÖTiƢ¾ªì°`öøu®Ê¾ãØ"],encodeOffsets:[[88824,50096]]}},{type:"Feature",id:"110000",properties:{id:"110000",cp:[116.405285,39.904989],name:"北京",childNum:1},geometry:{type:"Polygon",coordinates:["@@ĽOÁûtŷmiÍt_H»Ĩ±d`¹­{bwYr³S]§§o¹qGtm_SŧoaFLgQN_dV@Zom_ć\\ßcÂ±x¯oœRcfe£o§ËgToÛJíĔóu|wP¤XnO¢ÉŦ¯rNÄā¤zâŖÈRpŢZÚ{GrFt¦Òx§ø¹RóäV¤XdżâºWbwŚ¨Ud®bêņ¾jnŎGŃŶnzÚSeîĜZczî¾i]ÍQaúÍÔiþĩȨWĢü|Ėu[qb[swP@ÅğP¿{\\¥A¨ÏÑ¨j¯X\\¯MKpA³[Hīu}}"],encodeOffsets:[[120023,41045]]}},{type:"Feature",id:"120000",properties:{id:"120000",cp:[117.190182,39.125596],name:"天津",childNum:1},geometry:{type:"Polygon",coordinates:["@@ŬgX§Ü«E¶FÌ¬O_ïlÁgz±AXeµÄĵ{¶]gitgIj·¥îakS¨ÐƎk}ĕ{gBqGf{¿aU^fIư³õ{YıëNĿk©ïËZŏR§òoY×Ógcĥs¡bġ«@dekąI[nlPqCnp{ō³°`{PNdƗqSÄĻNNâyj]äÒD ĬH°Æ]~¡HO¾X}ÐxgpgWrDGpù^LrzWxZ^¨´T\\|~@IzbĤjeĊªz£®ĔvěLmV¾Ô_ÈNW~zbĬvG²ZmDM~~"],encodeOffsets:[[120237,41215]]}},{type:"Feature",id:"310000",properties:{id:"310000",cp:[121.472644,31.231706],name:"上海",childNum:6},geometry:{type:"MultiPolygon",coordinates:[["@@ɧư¬EpƸÁxc"],["@@©ª"],["@@MA"],["@@QpİE§ÉC¾"],["@@bŝÕÕEȣÚƥêImɇǦèÜĠÚÃƌÃ͎ó"],["@@ǜûȬɋŭ×^sYɍDŋŽąñCG²«ªč@h_p¯A{oloY¬j@Ĳ`gQÚhr|ǀ^MĲvtbe´R¯Ô¬¨Yô¤r]ìƬį"]],encodeOffsets:[[[124702,32062]],[[124547,32200]],[[124808,31991]],[[124726,32110]],[[124903,32376]],[[124438,32149]]]}},{type:"Feature",id:"500000",properties:{id:"500000",cp:[107.304962,29.533155],name:"重庆",childNum:2},geometry:{type:"MultiPolygon",coordinates:[["@@vjG~nGŘŬĶȂƀƾ¹¸ØÎezĆT¸}êÐqHðqĖä¥^CÆIj²p\\_ æüY|[YxƊæu°xb®Űb@~¢NQt°¶Sæ Ê~rǉĔëĚ¢~uf`faĔJåĊnÖ]jƎćÊ@£¾a®£Ű{ŶĕFègLk{Y|¡ĜWƔtƬJÑxq±ĢN´òKLÈÃ¼D|s`ŋć]Ã`đMûƱ½~Y°ħ`ƏíW½eI½{aOIrÏ¡ĕŇapµÜƅġ^ÖÛbÙŽŏml½SêqDu[RãË»ÿw`»y¸_ĺę}÷`M¯ċfCVµqŉ÷Zgg`d½pDOÎCn^uf²ènh¼WtƏxRGg¦pVFI±G^Ic´ecGĹÞ½sëĬhxW}KÓe­XsbkF¦LØgTkïƵNï¶}Gyw\\oñ¡nmĈzj@Óc£»Wă¹Ój_m»¹·~MvÛaq»­ê\\ÂoVnÓØÍ²«bq¿efE Ĝ^Q~ Évýş¤²ĮpEİ}zcĺL½¿gÅ¡ýE¡ya£³t\\¨\\vú»¼§·Ñr_oÒý¥u_n»_At©ÞÅ±ā§IVeëY}{VPÀFA¨ąB}q@|Ou\\FmQFÝMwå}]|FmÏCawu_p¯sfÙgYDHl`{QEfNysB¦zG¸rHeN\\CvEsÐùÜ_·ÖĉsaQ¯}_UxÃđqNH¬Äd^ÝŰR¬ã°wećJE·vÝ·HgéFXjÉê`|ypxkAwWĐpb¥eOsmzwqChóUQl¥F^lafanòsrEvfQdÁUVfÎvÜ^eftET¬ôA\\¢sJnQTjPØxøK|nBzĞ»LYFDxÓvr[ehľvN¢o¾NiÂxGpâ¬zbfZo~hGi]öF||NbtOMn eA±tPTLjpYQ|SHYĀxinzDJÌg¢và¥Pg_ÇzIIII£®S¬ØsÎ¼£N"],["@@ifjN@s"]],encodeOffsets:[[[109628,30765]],[[111725,31320]]]}},{type:"Feature",id:"810000",properties:{id:"810000",cp:[114.173355,22.320048],name:"香港",childNum:5},geometry:{type:"MultiPolygon",coordinates:[["@@AlBk"],["@@mn"],["@@EpFo"],["@@ea¢pl¸Eõ¹hj[]ÔCÎ@lj¡uBX´AI¹[yDU]W`çwZkmcMpÅv}IoJlcafŃK°ä¬XJmÐ đhI®æÔtSHnEÒrÈc"],["@@rMUwAS®e"]],encodeOffsets:[[[117111,23002]],[[117072,22876]],[[117045,22887]],[[116975,23082]],[[116882,22747]]]}},{type:"Feature",id:"820000",properties:{id:"820000",cp:[113.54909,22.198951],name:"澳门",childNum:1},geometry:{type:"Polygon",coordinates:["@@kÊd°å§s"],encodeOffsets:[[116279,22639]]}}],UTF8Encoding:!0}):r("ECharts Map is not loaded"):r("ECharts is not Loaded")}))},"99fc":function(e,t,r){"use strict";var i=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{attrs:{id:e.id}})},n=[],a={version:1,themeName:"customed",theme:{seriesCnt:3,backgroundColor:"rgba(0, 0, 0, 0)",titleColor:"#333",subtitleColor:"#aaa",textColorShow:!1,textColor:"#333",markTextColor:"#eee",color:["#409EFF","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"],borderColor:"#ccc",borderWidth:0,visualMapColor:["#bf444c","#d88273","#f6efa6"],legendTextColor:"#333",kColor:"#c23531",kColor0:"#314656",kBorderColor:"#c23531",kBorderColor0:"#314656",kBorderWidth:1,lineWidth:"01",symbolSize:"3",symbol:"emptyRoundRect",symbolBorderWidth:"2",lineSmooth:!1,graphLineWidth:1,graphLineColor:"#aaa",mapLabelColor:"#000",mapLabelColorE:"rgb(100,0,0)",mapBorderColor:"#444",mapBorderColorE:"#444",mapBorderWidth:.5,mapBorderWidthE:1,mapAreaColor:"#eee",mapAreaColorE:"rgba(255,215,0,0.8)",axes:[{type:"all",name:"通用坐标轴",axisLineShow:!0,axisLineColor:"#333",axisTickShow:!0,axisTickColor:"#333",axisLabelShow:!0,axisLabelColor:"#333",splitLineShow:!0,splitLineColor:["#ccc"],splitAreaShow:!1,splitAreaColor:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]},{type:"category",name:"类目坐标轴",axisLineShow:!0,axisLineColor:"#333",axisTickShow:!0,axisTickColor:"#333",axisLabelShow:!0,axisLabelColor:"#333",splitLineShow:!1,splitLineColor:["#ccc"],splitAreaShow:!1,splitAreaColor:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]},{type:"value",name:"数值坐标轴",axisLineShow:!0,axisLineColor:"#333",axisTickShow:!0,axisTickColor:"#333",axisLabelShow:!0,axisLabelColor:"#333",splitLineShow:!0,splitLineColor:["#ccc"],splitAreaShow:!1,splitAreaColor:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]},{type:"log",name:"对数坐标轴",axisLineShow:!0,axisLineColor:"#333",axisTickShow:!0,axisTickColor:"#333",axisLabelShow:!0,axisLabelColor:"#333",splitLineShow:!0,splitLineColor:["#ccc"],splitAreaShow:!1,splitAreaColor:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]},{type:"time",name:"时间坐标轴",axisLineShow:!0,axisLineColor:"#333",axisTickShow:!0,axisTickColor:"#333",axisLabelShow:!0,axisLabelColor:"#333",splitLineShow:!0,splitLineColor:["#ccc"],splitAreaShow:!1,splitAreaColor:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}],axisSeperateSetting:!0,toolboxColor:"#999",toolboxEmphasisColor:"#666",tooltipAxisColor:"#ccc",tooltipAxisWidth:1,timelineLineColor:"#293c55",timelineLineWidth:1,timelineItemColor:"#293c55",timelineItemColorE:"#a9334c",timelineCheckColor:"#e43c59",timelineCheckBorderColor:"rgba(194,53,49, 0.5)",timelineItemBorderWidth:1,timelineControlColor:"#293c55",timelineControlBorderColor:"#293c55",timelineControlBorderWidth:.5,timelineLabelColor:"#293c55",datazoomBackgroundColor:"rgba(47,69,84,0)",datazoomDataColor:"rgba(47,69,84,0.3)",datazoomFillColor:"rgba(167,183,204,0.4)",datazoomHandleColor:"#a7b7cc",datazoomHandleWidth:"100",datazoomLabelColor:"#333"}},o={theme:a},s=r("e925"),l=(r("90de"),r("52a9"),r("aa74")),u=r("22b4"),h=(r("1be7"),r("f95e")),c=r("5e81");Object(u["a"])([h["a"],c["a"]]);function d(e,t,r){"object"==typeof t&&(r=t,t=null);var i,n=this;if(!(e instanceof Function))for(var a in i=[],e)e.hasOwnProperty(a)&&i.push(a);var o=function(t){if(n.apply(this,arguments),e instanceof Function?f(this,e.call(this,t)):p(this,e,i),this.constructor===o)for(var r=o.__initializers__,a=0;a<r.length;a++)r[a].apply(this,arguments)};o.__super__=n,n.__initializers__?o.__initializers__=n.__initializers__.slice():o.__initializers__=[],t&&o.__initializers__.push(t);var s=function(){};return s.prototype=n.prototype,o.prototype=new s,o.prototype.constructor=o,f(o.prototype,r),o.extend=n.extend,o.derive=n.extend,o}function f(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])}function p(e,t,r){for(var i=0;i<r.length;i++){var n=r[i];e[n]=t[n]}}var m={extend:d,derive:d};function g(e,t){this.action=e,this.context=t}var _={trigger:function(e){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(e)){var t=this.__handlers__[e],r=t.length,i=-1,n=arguments;switch(n.length){case 1:while(++i<r)t[i].action.call(t[i].context);return;case 2:while(++i<r)t[i].action.call(t[i].context,n[1]);return;case 3:while(++i<r)t[i].action.call(t[i].context,n[1],n[2]);return;case 4:while(++i<r)t[i].action.call(t[i].context,n[1],n[2],n[3]);return;case 5:while(++i<r)t[i].action.call(t[i].context,n[1],n[2],n[3],n[4]);return;default:while(++i<r)t[i].action.apply(t[i].context,Array.prototype.slice.call(n,1));return}}},on:function(e,t,r){if(e&&t){var i=this.__handlers__||(this.__handlers__={});if(i[e]){if(this.has(e,t))return}else i[e]=[];var n=new g(t,r||this);return i[e].push(n),this}},once:function(e,t,r){if(e&&t){var i=this;return this.on(e,n,r)}function n(){i.off(e,n),t.apply(this,arguments)}},before:function(e,t,r){if(e&&t)return e="before"+e,this.on(e,t,r)},after:function(e,t,r){if(e&&t)return e="after"+e,this.on(e,t,r)},success:function(e,t){return this.once("success",e,t)},error:function(e,t){return this.once("error",e,t)},off:function(e,t){var r=this.__handlers__||(this.__handlers__={});if(t){if(r[e]){for(var i=r[e],n=[],a=0;a<i.length;a++)t&&i[a].action!==t&&n.push(i[a]);r[e]=n}return this}r[e]=[]},has:function(e,t){var r=this.__handlers__;if(!r||!r[e])return!1;for(var i=r[e],n=0;n<i.length;n++)if(i[n].action===t)return!0}},v=_,y=0,x=Array.prototype,T=x.forEach,b={genGUID:function(){return++y},relative2absolute:function(e,t){if(!t||e.match(/^\//))return e;var r=e.split("/"),i=t.split("/"),n=r[0];while("."===n||".."===n)".."===n&&i.pop(),r.shift(),n=r[0];return i.join("/")+"/"+r.join("/")},extend:function(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},defaults:function(e,t){if(t)for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e},extendWithPropList:function(e,t,r){if(t)for(var i=0;i<r.length;i++){var n=r[i];e[n]=t[n]}return e},defaultsWithPropList:function(e,t,r){if(t)for(var i=0;i<r.length;i++){var n=r[i];null==e[n]&&(e[n]=t[n])}return e},each:function(e,t,r){if(e&&t)if(e.forEach&&e.forEach===T)e.forEach(t,r);else if(e.length===+e.length)for(var i=0,n=e.length;i<n;i++)t.call(r,e[i],i,e);else for(var a in e)e.hasOwnProperty(a)&&t.call(r,e[a],a,e)},isObject:function(e){return e===Object(e)},isArray:function(e){return Array.isArray(e)},isArrayLike:function(e){return!!e&&e.length===+e.length},clone:function(e){if(b.isObject(e)){if(b.isArray(e))return e.slice();if(b.isArrayLike(e)){for(var t=new e.constructor(e.length),r=0;r<e.length;r++)t[r]=e[r];return t}return b.extend({},e)}return e}},w=b,E=function(){this.__uid__=w.genGUID()};E.__initializers__=[function(e){w.extend(this,e)}],w.extend(E,m),w.extend(E.prototype,v);var S=E,M=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB","ANGLE_instanced_arrays"],A=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"];function N(e){for(var t={},r={},i=0;i<M.length;i++){var n=M[i];o(n)}for(i=0;i<A.length;i++){var a=A[i];r[a]=e.getParameter(e[a])}function o(r){if(e.getExtension){var i=e.getExtension(r);i||(i=e.getExtension("MOZ_"+r)),i||(i=e.getExtension("WEBKIT_"+r)),t[r]=i}}this.getExtension=function(e){return e in t||o(e),t[e]},this.getParameter=function(e){return r[e]}}var C=N,P={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444},L=r("620a"),O=function(){this.head=null,this.tail=null,this._length=0};O.prototype.insert=function(e){var t=new O.Entry(e);return this.insertEntry(t),t},O.prototype.insertAt=function(e,t){if(!(e<0)){var r=this.head,i=0;while(r&&i!=e)r=r.next,i++;if(r){var n=new O.Entry(t),a=r.prev;a?(a.next=n,n.prev=a):this.head=n,n.next=r,r.prev=n}else this.insert(t)}},O.prototype.insertBeforeEntry=function(e,t){var r=new O.Entry(e),i=t.prev;i?(i.next=r,r.prev=i):this.head=r,r.next=t,t.prev=r,this._length++},O.prototype.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,this.tail=e):this.head=this.tail=e,this._length++},O.prototype.remove=function(e){var t=e.prev,r=e.next;t?t.next=r:this.head=r,r?r.prev=t:this.tail=t,e.next=e.prev=null,this._length--},O.prototype.removeAt=function(e){if(!(e<0)){var t=this.head,r=0;while(t&&r!=e)t=t.next,r++;return t?(this.remove(t),t.value):void 0}},O.prototype.getHead=function(){if(this.head)return this.head.value},O.prototype.getTail=function(){if(this.tail)return this.tail.value},O.prototype.getAt=function(e){if(!(e<0)){var t=this.head,r=0;while(t&&r!=e)t=t.next,r++;return t.value}},O.prototype.indexOf=function(e){var t=this.head,r=0;while(t){if(t.value===e)return r;t=t.next,r++}},O.prototype.length=function(){return this._length},O.prototype.isEmpty=function(){return 0===this._length},O.prototype.forEach=function(e,t){var r=this.head,i=0,n="undefined"!=typeof t;while(r)n?e.call(t,r.value,i):e(r.value,i),r=r.next,i++},O.prototype.clear=function(){this.tail=this.head=null,this._length=0},O.Entry=function(e){this.value=e,this.next=null,this.prev=null};var D=O,R=function(e){this._list=new D,this._map={},this._maxSize=e||10};R.prototype.setMaxSize=function(e){this._maxSize=e},R.prototype.put=function(e,t){if(!this._map.hasOwnProperty(e)){var r=this._list.length();if(r>=this._maxSize&&r>0){var i=this._list.head;this._list.remove(i),delete this._map[i.key]}var n=this._list.insert(t);n.key=e,this._map[e]=n}},R.prototype.get=function(e){var t=this._map[e];if(this._map.hasOwnProperty(e))return t!==this._list.tail&&(this._list.remove(t),this._list.insertEntry(t)),t.value},R.prototype.remove=function(e){var t=this._map[e];"undefined"!==typeof t&&(delete this._map[e],this._list.remove(t))},R.prototype.clear=function(){this._list.clear(),this._map={}};var I=R,F={},B={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function z(e){return e=Math.round(e),e<0?0:e>255?255:e}function U(e){return e=Math.round(e),e<0?0:e>360?360:e}function G(e){return e<0?0:e>1?1:e}function k(e){return e.length&&"%"===e.charAt(e.length-1)?z(parseFloat(e)/100*255):z(parseInt(e,10))}function H(e){return e.length&&"%"===e.charAt(e.length-1)?G(parseFloat(e)/100):G(parseFloat(e))}function V(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}function W(e,t,r){return e+(t-e)*r}function j(e,t,r,i,n){return e[0]=t,e[1]=r,e[2]=i,e[3]=n,e}function X(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}var q=new I(20),Y=null;function Z(e,t){Y&&X(Y,t),Y=q.put(e,Y||t.slice())}function K(e,t){var r=(parseFloat(e[0])%360+360)%360/360,i=H(e[1]),n=H(e[2]),a=n<=.5?n*(i+1):n+i-n*i,o=2*n-a;return t=t||[],j(t,z(255*V(o,a,r+1/3)),z(255*V(o,a,r)),z(255*V(o,a,r-1/3)),1),4===e.length&&(t[3]=e[3]),t}function Q(e){if(e){var t,r,i=e[0]/255,n=e[1]/255,a=e[2]/255,o=Math.min(i,n,a),s=Math.max(i,n,a),l=s-o,u=(s+o)/2;if(0===l)t=0,r=0;else{r=u<.5?l/(s+o):l/(2-s-o);var h=((s-i)/6+l/2)/l,c=((s-n)/6+l/2)/l,d=((s-a)/6+l/2)/l;i===s?t=d-c:n===s?t=1/3+h-d:a===s&&(t=2/3+c-h),t<0&&(t+=1),t>1&&(t-=1)}var f=[360*t,r,u];return null!=e[3]&&f.push(e[3]),f}}F.parse=function(e,t){if(e){t=t||[];var r=q.get(e);if(r)return X(t,r);e+="";var i=e.replace(/ /g,"").toLowerCase();if(i in B)return X(t,B[i]),Z(e,t),t;if("#"!==i.charAt(0)){var n=i.indexOf("("),a=i.indexOf(")");if(-1!==n&&a+1===i.length){var o=i.substr(0,n),s=i.substr(n+1,a-(n+1)).split(","),l=1;switch(o){case"rgba":if(4!==s.length)return void j(t,0,0,0,1);l=H(s.pop());case"rgb":return 3!==s.length?void j(t,0,0,0,1):(j(t,k(s[0]),k(s[1]),k(s[2]),l),Z(e,t),t);case"hsla":return 4!==s.length?void j(t,0,0,0,1):(s[3]=H(s[3]),K(s,t),Z(e,t),t);case"hsl":return 3!==s.length?void j(t,0,0,0,1):(K(s,t),Z(e,t),t);default:return}}j(t,0,0,0,1)}else{if(4===i.length){var u=parseInt(i.substr(1),16);return u>=0&&u<=4095?(j(t,(3840&u)>>4|(3840&u)>>8,240&u|(240&u)>>4,15&u|(15&u)<<4,1),Z(e,t),t):void j(t,0,0,0,1)}if(7===i.length){u=parseInt(i.substr(1),16);return u>=0&&u<=16777215?(j(t,(16711680&u)>>16,(65280&u)>>8,255&u,1),Z(e,t),t):void j(t,0,0,0,1)}}}},F.parseToFloat=function(e,t){if(t=F.parse(e,t),t)return t[0]/=255,t[1]/=255,t[2]/=255,t},F.lift=function(e,t){var r=F.parse(e);if(r){for(var i=0;i<3;i++)r[i]=t<0?r[i]*(1-t)|0:(255-r[i])*t+r[i]|0;return F.stringify(r,4===r.length?"rgba":"rgb")}},F.toHex=function(e){var t=F.parse(e);if(t)return((1<<24)+(t[0]<<16)+(t[1]<<8)+ +t[2]).toString(16).slice(1)},F.fastLerp=function(e,t,r){if(t&&t.length&&e>=0&&e<=1){r=r||[];var i=e*(t.length-1),n=Math.floor(i),a=Math.ceil(i),o=t[n],s=t[a],l=i-n;return r[0]=z(W(o[0],s[0],l)),r[1]=z(W(o[1],s[1],l)),r[2]=z(W(o[2],s[2],l)),r[3]=G(W(o[3],s[3],l)),r}},F.fastMapToColor=F.fastLerp,F.lerp=function(e,t,r){if(t&&t.length&&e>=0&&e<=1){var i=e*(t.length-1),n=Math.floor(i),a=Math.ceil(i),o=F.parse(t[n]),s=F.parse(t[a]),l=i-n,u=F.stringify([z(W(o[0],s[0],l)),z(W(o[1],s[1],l)),z(W(o[2],s[2],l)),G(W(o[3],s[3],l))],"rgba");return r?{color:u,leftIndex:n,rightIndex:a,value:i}:u}},F.mapToColor=F.lerp,F.modifyHSL=function(e,t,r,i){if(e=F.parse(e),e)return e=Q(e),null!=t&&(e[0]=U(t)),null!=r&&(e[1]=H(r)),null!=i&&(e[2]=H(i)),F.stringify(K(e),"rgba")},F.modifyAlpha=function(e,t){if(e=F.parse(e),e&&null!=t)return e[3]=G(t),F.stringify(e,"rgba")},F.stringify=function(e,t){if(e&&e.length){var r=e[0]+","+e[1]+","+e[2];return"rgba"!==t&&"hsva"!==t&&"hsla"!==t||(r+=","+e[3]),t+"("+r+")"}};var J=F,$=J.parseToFloat,ee={};function te(e){var t=Object.keys(e);t.sort();for(var r=[],i=0;i<t.length;i++){var n=t[i],a=e[n];null===a?r.push(n):r.push(n+" "+a.toString())}return r.join("\n")}function re(e,t,r){r.sort();for(var i=[],n=0;n<r.length;n++){var a=r[n];i.push(a)}var o=te(e)+"\n"+te(t)+"\n"+i.join("\n");if(ee[o])return ee[o];var s=w.genGUID();return ee[o]=s,s}var ie=S.extend((function(){return{name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,autoUpdateTextureStatus:!0,uniforms:{},vertexDefines:{},fragmentDefines:{},_textureStatus:{},_enabledUniforms:null}}),(function(){this.name||(this.name="MATERIAL_"+this.__uid__),this.shader&&this.attachShader(this.shader,!0)}),{precision:"highp",setUniform:function(e,t){void 0===t&&console.warn('Uniform value "'+e+'" is undefined');var r=this.uniforms[e];r&&("string"===typeof t&&(t=$(t)||t),r.value=t,this.autoUpdateTextureStatus&&"t"===r.type&&(t?this.enableTexture(e):this.disableTexture(e)))},setUniforms:function(e){for(var t in e){var r=e[t];this.setUniform(t,r)}},isUniformEnabled:function(e){return this._enabledUniforms.indexOf(e)>=0},getEnabledUniforms:function(){return this._enabledUniforms},getTextureUniforms:function(){return this._textureUniforms},set:function(e,t){if("object"===typeof e)for(var r in e){var i=e[r];this.setUniform(r,i)}else this.setUniform(e,t)},get:function(e){var t=this.uniforms[e];if(t)return t.value},attachShader:function(e,t){var r=this.uniforms;this.uniforms=e.createUniforms(),this.shader=e;var i=this.uniforms;this._enabledUniforms=Object.keys(i),this._enabledUniforms.sort(),this._textureUniforms=this._enabledUniforms.filter((function(e){var t=this.uniforms[e].type;return"t"===t||"tv"===t}),this);var n=this.vertexDefines,a=this.fragmentDefines;if(this.vertexDefines=w.clone(e.vertexDefines),this.fragmentDefines=w.clone(e.fragmentDefines),t){for(var o in r)i[o]&&(i[o].value=r[o].value);w.defaults(this.vertexDefines,n),w.defaults(this.fragmentDefines,a)}var s={};for(var l in e.textures)s[l]={shaderType:e.textures[l].shaderType,type:e.textures[l].type,enabled:!(!t||!this._textureStatus[l])&&this._textureStatus[l].enabled};this._textureStatus=s,this._programKey=""},clone:function(){var e=new this.constructor({name:this.name,shader:this.shader});for(var t in this.uniforms)e.uniforms[t].value=this.uniforms[t].value;return e.depthTest=this.depthTest,e.depthMask=this.depthMask,e.transparent=this.transparent,e.blend=this.blend,e.vertexDefines=w.clone(this.vertexDefines),e.fragmentDefines=w.clone(this.fragmentDefines),e.enableTexture(this.getEnabledTextures()),e.precision=this.precision,e},define:function(e,t,r){var i=this.vertexDefines,n=this.fragmentDefines;"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<3&&(r=t,t=e,e="both"),r=null!=r?r:null,"vertex"!==e&&"both"!==e||i[t]!==r&&(i[t]=r,this._programKey=""),"fragment"!==e&&"both"!==e||n[t]!==r&&(n[t]=r,"both"!==e&&(this._programKey=""))},undefine:function(e,t){"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<2&&(t=e,e="both"),"vertex"!==e&&"both"!==e||this.isDefined("vertex",t)&&(delete this.vertexDefines[t],this._programKey=""),"fragment"!==e&&"both"!==e||this.isDefined("fragment",t)&&(delete this.fragmentDefines[t],"both"!==e&&(this._programKey=""))},isDefined:function(e,t){switch(e){case"vertex":return void 0!==this.vertexDefines[t];case"fragment":return void 0!==this.fragmentDefines[t]}},getDefine:function(e,t){switch(e){case"vertex":return this.vertexDefines[t];case"fragment":return this.fragmentDefines[t]}},enableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.enableTexture(e[t]);else{var r=this._textureStatus[e];if(r){var i=r.enabled;i||(r.enabled=!0,this._programKey="")}}},enableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!0;this._programKey=""},disableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.disableTexture(e[t]);else{var r=this._textureStatus[e];if(r){var i=!r.enabled;i||(r.enabled=!1,this._programKey="")}}},disableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!1;this._programKey=""},isTextureEnabled:function(e){var t=this._textureStatus;return!!t[e]&&t[e].enabled},getEnabledTextures:function(){var e=[],t=this._textureStatus;for(var r in t)t[r].enabled&&e.push(r);return e},dirtyDefines:function(){this._programKey=""},getProgramKey:function(){return this._programKey||(this._programKey=re(this.vertexDefines,this.fragmentDefines,this.getEnabledTextures())),this._programKey}}),ne=ie,ae=1e-6,oe=Array,se=Math.random,le={create:function(){var e=new oe(2);return e[0]=0,e[1]=0,e},clone:function(e){var t=new oe(2);return t[0]=e[0],t[1]=e[1],t},fromValues:function(e,t){var r=new oe(2);return r[0]=e,r[1]=t,r},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e},set:function(e,t,r){return e[0]=t,e[1]=r,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e},subtract:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e}};le.sub=le.subtract,le.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e},le.mul=le.multiply,le.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e},le.div=le.divide,le.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e},le.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e},le.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e},le.scaleAndAdd=function(e,t,r,i){return e[0]=t[0]+r[0]*i,e[1]=t[1]+r[1]*i,e},le.distance=function(e,t){var r=t[0]-e[0],i=t[1]-e[1];return Math.sqrt(r*r+i*i)},le.dist=le.distance,le.squaredDistance=function(e,t){var r=t[0]-e[0],i=t[1]-e[1];return r*r+i*i},le.sqrDist=le.squaredDistance,le.length=function(e){var t=e[0],r=e[1];return Math.sqrt(t*t+r*r)},le.len=le.length,le.squaredLength=function(e){var t=e[0],r=e[1];return t*t+r*r},le.sqrLen=le.squaredLength,le.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e},le.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e},le.normalize=function(e,t){var r=t[0],i=t[1],n=r*r+i*i;return n>0&&(n=1/Math.sqrt(n),e[0]=t[0]*n,e[1]=t[1]*n),e},le.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},le.cross=function(e,t,r){var i=t[0]*r[1]-t[1]*r[0];return e[0]=e[1]=0,e[2]=i,e},le.lerp=function(e,t,r,i){var n=t[0],a=t[1];return e[0]=n+i*(r[0]-n),e[1]=a+i*(r[1]-a),e},le.random=function(e,t){t=t||1;var r=2*GLMAT_RANDOM()*Math.PI;return e[0]=Math.cos(r)*t,e[1]=Math.sin(r)*t,e},le.transformMat2=function(e,t,r){var i=t[0],n=t[1];return e[0]=r[0]*i+r[2]*n,e[1]=r[1]*i+r[3]*n,e},le.transformMat2d=function(e,t,r){var i=t[0],n=t[1];return e[0]=r[0]*i+r[2]*n+r[4],e[1]=r[1]*i+r[3]*n+r[5],e},le.transformMat3=function(e,t,r){var i=t[0],n=t[1];return e[0]=r[0]*i+r[3]*n+r[6],e[1]=r[1]*i+r[4]*n+r[7],e},le.transformMat4=function(e,t,r){var i=t[0],n=t[1];return e[0]=r[0]*i+r[4]*n+r[12],e[1]=r[1]*i+r[5]*n+r[13],e},le.forEach=function(){var e=le.create();return function(t,r,i,n,a,o){var s,l;for(r||(r=2),i||(i=0),l=n?Math.min(n*r+i,t.length):t.length,s=i;s<l;s+=r)e[0]=t[s],e[1]=t[s+1],a(e,e,o),t[s]=e[0],t[s+1]=e[1];return t}}();var ue=le,he=function(e,t){e=e||0,t=t||0,this.array=ue.fromValues(e,t),this._dirty=!0};if(he.prototype={constructor:he,add:function(e){return ue.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t){return this.array[0]=e,this.array[1]=t,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this._dirty=!0,this},clone:function(){return new he(this.x,this.y)},copy:function(e){return ue.copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return ue.cross(e.array,this.array,t.array),e._dirty=!0,this},dist:function(e){return ue.dist(this.array,e.array)},distance:function(e){return ue.distance(this.array,e.array)},div:function(e){return ue.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return ue.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return ue.dot(this.array,e.array)},len:function(){return ue.len(this.array)},length:function(){return ue.length(this.array)},lerp:function(e,t,r){return ue.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return ue.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return ue.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return ue.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return ue.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return ue.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return ue.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return ue.random(this.array,e),this._dirty=!0,this},scale:function(e){return ue.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return ue.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return ue.sqrDist(this.array,e.array)},squaredDistance:function(e){return ue.squaredDistance(this.array,e.array)},sqrLen:function(){return ue.sqrLen(this.array)},squaredLength:function(){return ue.squaredLength(this.array)},sub:function(e){return ue.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return ue.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat2:function(e){return ue.transformMat2(this.array,this.array,e.array),this._dirty=!0,this},transformMat2d:function(e){return ue.transformMat2d(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return ue.transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return ue.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},Object.defineProperty){var ce=he.prototype;Object.defineProperty(ce,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),Object.defineProperty(ce,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}})}he.add=function(e,t,r){return ue.add(e.array,t.array,r.array),e._dirty=!0,e},he.set=function(e,t,r){return ue.set(e.array,t,r),e._dirty=!0,e},he.copy=function(e,t){return ue.copy(e.array,t.array),e._dirty=!0,e},he.cross=function(e,t,r){return ue.cross(e.array,t.array,r.array),e._dirty=!0,e},he.dist=function(e,t){return ue.distance(e.array,t.array)},he.distance=he.dist,he.div=function(e,t,r){return ue.divide(e.array,t.array,r.array),e._dirty=!0,e},he.divide=he.div,he.dot=function(e,t){return ue.dot(e.array,t.array)},he.len=function(e){return ue.length(e.array)},he.lerp=function(e,t,r,i){return ue.lerp(e.array,t.array,r.array,i),e._dirty=!0,e},he.min=function(e,t,r){return ue.min(e.array,t.array,r.array),e._dirty=!0,e},he.max=function(e,t,r){return ue.max(e.array,t.array,r.array),e._dirty=!0,e},he.mul=function(e,t,r){return ue.multiply(e.array,t.array,r.array),e._dirty=!0,e},he.multiply=he.mul,he.negate=function(e,t){return ue.negate(e.array,t.array),e._dirty=!0,e},he.normalize=function(e,t){return ue.normalize(e.array,t.array),e._dirty=!0,e},he.random=function(e,t){return ue.random(e.array,t),e._dirty=!0,e},he.scale=function(e,t,r){return ue.scale(e.array,t.array,r),e._dirty=!0,e},he.scaleAndAdd=function(e,t,r,i){return ue.scaleAndAdd(e.array,t.array,r.array,i),e._dirty=!0,e},he.sqrDist=function(e,t){return ue.sqrDist(e.array,t.array)},he.squaredDistance=he.sqrDist,he.sqrLen=function(e){return ue.sqrLen(e.array)},he.squaredLength=he.sqrLen,he.sub=function(e,t,r){return ue.subtract(e.array,t.array,r.array),e._dirty=!0,e},he.subtract=he.sub,he.transformMat2=function(e,t,r){return ue.transformMat2(e.array,t.array,r.array),e._dirty=!0,e},he.transformMat2d=function(e,t,r){return ue.transformMat2d(e.array,t.array,r.array),e._dirty=!0,e},he.transformMat3=function(e,t,r){return ue.transformMat3(e.array,t.array,r.array),e._dirty=!0,e},he.transformMat4=function(e,t,r){return ue.transformMat4(e.array,t.array,r.array),e._dirty=!0,e};var de=he,fe=1,pe=2,me=3,ge={};function _e(e){for(var t=e.split("\n"),r=0,i=t.length;r<i;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function ve(e,t,r){if(!e.getShaderParameter(t,e.COMPILE_STATUS))return[e.getShaderInfoLog(t),_e(r)].join("\n")}var ye=new L["a"].Float32Array(16),xe=S.extend({uniformSemantics:{},attributes:{}},(function(){this._locations={},this._textureSlot=0,this._program=null}),{bind:function(e){this._textureSlot=0,e.gl.useProgram(this._program)},hasUniform:function(e){var t=this._locations[e];return null!==t&&void 0!==t},useTextureSlot:function(e,t,r){t&&(e.gl.activeTexture(e.gl.TEXTURE0+r),t.isRenderable()?t.bind(e):t.unbind(e))},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(e){this._textureSlot=e||0},takeCurrentTextureSlot:function(e,t){var r=this._textureSlot;return this.useTextureSlot(e,t,r),this._textureSlot++,r},setUniform:function(e,t,r,i){var n=this._locations,a=n[r];if(null===a||void 0===a)return!1;switch(t){case"m4":if(!(i instanceof Float32Array)){for(var o=0;o<i.length;o++)ye[o]=i[o];i=ye}e.uniformMatrix4fv(a,!1,i);break;case"2i":e.uniform2i(a,i[0],i[1]);break;case"2f":e.uniform2f(a,i[0],i[1]);break;case"3i":e.uniform3i(a,i[0],i[1],i[2]);break;case"3f":e.uniform3f(a,i[0],i[1],i[2]);break;case"4i":e.uniform4i(a,i[0],i[1],i[2],i[3]);break;case"4f":e.uniform4f(a,i[0],i[1],i[2],i[3]);break;case"1i":e.uniform1i(a,i);break;case"1f":e.uniform1f(a,i);break;case"1fv":e.uniform1fv(a,i);break;case"1iv":e.uniform1iv(a,i);break;case"2iv":e.uniform2iv(a,i);break;case"2fv":e.uniform2fv(a,i);break;case"3iv":e.uniform3iv(a,i);break;case"3fv":e.uniform3fv(a,i);break;case"4iv":e.uniform4iv(a,i);break;case"4fv":e.uniform4fv(a,i);break;case"m2":case"m2v":e.uniformMatrix2fv(a,!1,i);break;case"m3":case"m3v":e.uniformMatrix3fv(a,!1,i);break;case"m4v":if(Array.isArray(i)&&Array.isArray(i[0])){var s=new L["a"].Float32Array(16*i.length),l=0;for(o=0;o<i.length;o++)for(var u=i[o],h=0;h<16;h++)s[l++]=u[h];e.uniformMatrix4fv(a,!1,s)}else e.uniformMatrix4fv(a,!1,i);break}return!0},setUniformOfSemantic:function(e,t,r){var i=this.uniformSemantics[t];return!!i&&this.setUniform(e,i.type,i.symbol,r)},enableAttributes:function(e,t,r){var i,n=e.gl,a=this._program,o=this._locations;i=r?r.__enabledAttributeList:ge[e.__uid__],i||(i=r?r.__enabledAttributeList=[]:ge[e.__uid__]=[]);for(var s=[],l=0;l<t.length;l++){var u=t[l];if(this.attributes[u]){var h=o[u];if(null==h){if(h=n.getAttribLocation(a,u),-1===h){s[l]=-1;continue}o[u]=h}s[l]=h,i[h]?i[h]=pe:i[h]=fe}else s[l]=-1}for(l=0;l<i.length;l++)switch(i[l]){case fe:n.enableVertexAttribArray(l),i[l]=me;break;case pe:i[l]=me;break;case me:n.disableVertexAttribArray(l),i[l]=0;break}return s},getAttribLocation:function(e,t){var r=this._locations,i=r[t];return null==i&&(i=e.getAttribLocation(this._program,t),r[t]=i),i},buildProgram:function(e,t,r,i){var n=e.createShader(e.VERTEX_SHADER),a=e.createProgram();e.shaderSource(n,r),e.compileShader(n);var o=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(o,i),e.compileShader(o);var s=ve(e,n,r);if(s)return s;if(s=ve(e,o,i),s)return s;if(e.attachShader(a,n),e.attachShader(a,o),t.attributeSemantics["POSITION"])e.bindAttribLocation(a,0,t.attributeSemantics["POSITION"].symbol);else{var l=Object.keys(this.attributes);e.bindAttribLocation(a,0,l[0])}if(e.linkProgram(a),e.deleteShader(n),e.deleteShader(o),this._program=a,this.vertexCode=r,this.fragmentCode=i,!e.getProgramParameter(a,e.LINK_STATUS))return"Could not link program\n"+e.getProgramInfoLog(a);for(var u=0;u<t.uniforms.length;u++){var h=t.uniforms[u];this._locations[h]=e.getUniformLocation(a,h)}}}),Te=xe,be=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g;function we(e,t,r){function i(e,r,i,a){var o="";isNaN(r)&&(r=r in t?t[r]:n[r]),isNaN(i)&&(i=i in t?t[i]:n[i]);for(var s=parseInt(r);s<parseInt(i);s++)o+="{"+a.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"}";return o}var n={};for(var a in r)n[a+"_COUNT"]=r[a];return e.replace(be,i)}function Ee(e,t,r){var i=[];if(t)for(var n in t){var a=t[n];a>0&&i.push("#define "+n.toUpperCase()+"_COUNT "+a)}if(r)for(var o=0;o<r.length;o++){var s=r[o];i.push("#define "+s.toUpperCase()+"_ENABLED")}for(var s in e){var l=e[s];null===l?i.push("#define "+s):i.push("#define "+s+" "+l.toString())}return i.join("\n")}function Se(e){for(var t=[],r=0;r<e.length;r++)t.push("#extension GL_"+e[r]+" : enable");return t.join("\n")}function Me(e){return["precision",e,"float"].join(" ")+";\n"+["precision",e,"int"].join(" ")+";\n"+["precision",e,"sampler2D"].join(" ")+";\n"}function Ae(e){this._renderer=e,this._cache={}}Ae.prototype.getProgram=function(e,t,r){var i=this._cache,n=e.isSkinnedMesh&&e.isSkinnedMesh(),a=e.isInstancedMesh&&e.isInstancedMesh(),o="s"+t.shader.shaderID+"m"+t.getProgramKey();r&&(o+="se"+r.getProgramKey(e.lightGroup)),n&&(o+=",sk"+e.joints.length),a&&(o+=",is");var s=i[o];if(s)return s;var l=r?r.getLightsNumbers(e.lightGroup):{},u=this._renderer,h=u.gl,c=t.getEnabledTextures(),d="";if(n){var f={SKINNING:null,JOINT_COUNT:e.joints.length};e.joints.length>u.getMaxJointNumber()&&(f.USE_SKIN_MATRICES_TEXTURE=null),d+="\n"+Ee(f)+"\n"}a&&(d+="\n#define INSTANCING\n");var p=d+Ee(t.vertexDefines,l,c),m=d+Ee(t.fragmentDefines,l,c),g=p+"\n"+t.shader.vertex,_=["OES_standard_derivatives","EXT_shader_texture_lod"].filter((function(e){return null!=u.getGLExtension(e)}));_.indexOf("EXT_shader_texture_lod")>=0&&(m+="\n#define SUPPORT_TEXTURE_LOD"),_.indexOf("OES_standard_derivatives")>=0&&(m+="\n#define SUPPORT_STANDARD_DERIVATIVES");var v=Se(_)+"\n"+Me(t.precision)+"\n"+m+"\n"+t.shader.fragment,y=we(g,t.vertexDefines,l),x=we(v,t.fragmentDefines,l);s=new Te;s.uniformSemantics=t.shader.uniformSemantics,s.attributes=t.shader.attributes;var T=s.buildProgram(h,t.shader,y,x);return s.__error=T,i[o]=s,s};var Ne=Ae,Ce=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\s\S]*?);/g,Pe=/attribute\s+(float|int|vec2|vec3|vec4)\s+([\s\S]*?);/g,Le=/#define\s+(\w+)?(\s+[\d-.]+)?\s*;?\s*\n/g,Oe={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"};function De(e){for(var t=[],r=0;r<e;r++)t[r]=0;return t}var Re={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return De(2)},vec3:function(){return De(3)},vec4:function(){return De(4)},ivec2:function(){return De(2)},ivec3:function(){return De(3)},ivec4:function(){return De(4)},mat2:function(){return De(4)},mat3:function(){return De(9)},mat4:function(){return De(16)},array:function(){return[]}},Ie=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],Fe=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],Be=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],ze={vec4:4,vec3:3,vec2:2,float:1},Ue={},Ge={};function ke(e,t){var r="vertex:"+e+"fragment:"+t;if(Ue[r])return Ue[r];var i=w.genGUID();return Ue[r]=i,Ge[i]={vertex:e,fragment:t},i}function He(e){return e.replace(/[ \t]*\/\/.*\n/g,"").replace(/[ \t]*\/\*[\s\S]*?\*\//g,"")}function Ve(){console.error("Wrong uniform/attributes syntax")}function We(e,t){for(var r=/[,=\(\):]/,i=t.replace(/:\s*\[\s*(.*)\s*\]/g,"="+e+"($1)").replace(/\s+/g,"").split(/(?=[,=\(\):])/g),n=[],a=0;a<i.length;a++)i[a].match(r)?n.push(i[a].charAt(0),i[a].slice(1)):n.push(i[a]);i=n;var o,s=0,l=1,u=2,h=3,c=4,d=5,f=s,p={},m=null;function g(e){e||Ve();var t=e.match(/\[(.*?)\]/);o=e.replace(/\[(.*?)\]/,""),p[o]={},t&&(p[o].isArray=!0,p[o].arraySize=t[1])}g(i[0]);for(a=1;a<i.length;a++){var _=i[a];if(_)if("="!==_)if(":"!==_)if(","!==_)if(")"!==_)if("("!==_)if(_.indexOf("vec")>=0){if(f!==l&&f!==c){Ve();break}f=u,m=[]}else if(f!==l)if(f!==c)g(_),f=s;else{var v=_;Ie.indexOf(v)>=0||Fe.indexOf(v)>=0||Be.indexOf(v)>=0?p[o].semantic=v:"ignore"===v||"unconfigurable"===v?p[o].ignore=!0:p[o].value="bool"===e?"true"===v:parseFloat(v)}else p[o].value="bool"===e?"true"===_:parseFloat(_),m=null;else{if(f!==u){Ve();break}if(!(m instanceof Array)){Ve();break}m.push(+i[++a])}else p[o].value=new L["a"].Float32Array(m),m=null,f=d;else if(f===u){if(!(m instanceof Array)){Ve();break}m.push(+i[++a])}else f=d;else f=c;else{if(f!==s&&f!==h){Ve();break}f=l}}return p}function je(e,t){"object"===typeof e&&(t=e.fragment,e=e.vertex),e=He(e),t=He(t),this._shaderID=ke(e,t),this._vertexCode=je.parseImport(e),this._fragmentCode=je.parseImport(t),this.attributeSemantics={},this.matrixSemantics={},this.uniformSemantics={},this.matrixSemanticKeys=[],this.uniformTemplates={},this.attributes={},this.textures={},this.vertexDefines={},this.fragmentDefines={},this._parseAttributes(),this._parseUniforms(),this._parseDefines()}je.prototype={constructor:je,createUniforms:function(){var e={};for(var t in this.uniformTemplates){var r=this.uniformTemplates[t];e[t]={type:r.type,value:r.value()}}return e},_parseImport:function(){this._vertexCode=je.parseImport(this.vertex),this._fragmentCode=je.parseImport(this.fragment)},_addSemanticUniform:function(e,t,r){if(Ie.indexOf(r)>=0)this.attributeSemantics[r]={symbol:e,type:t};else if(Be.indexOf(r)>=0){var i=!1,n=r;r.match(/TRANSPOSE$/)&&(i=!0,n=r.slice(0,-9)),this.matrixSemantics[r]={symbol:e,type:t,isTranspose:i,semanticNoTranspose:n}}else Fe.indexOf(r)>=0&&(this.uniformSemantics[r]={symbol:e,type:t})},_addMaterialUniform:function(e,t,r,i,n,a){a[e]={type:r,value:n?Re["array"]:i||Re[t],semantic:null}},_parseUniforms:function(){var e={},t=this,r="vertex";function i(e){return null!=e?function(){return e}:null}function n(n,a,o){var s=We(a,o),l=[];for(var u in s){var h=s[u],c=h.semantic,d=u,f=Oe[a],p=i(s[u].value);s[u].isArray&&(d+="["+s[u].arraySize+"]",f+="v"),l.push(d),t._uniformList.push(u),h.ignore||("sampler2D"!==a&&"samplerCube"!==a||(t.textures[u]={shaderType:r,type:a}),c?t._addSemanticUniform(u,f,c):t._addMaterialUniform(u,a,f,p,s[u].isArray,e))}return l.length>0?"uniform "+a+" "+l.join(",")+";\n":""}this._uniformList=[],this._vertexCode=this._vertexCode.replace(Ce,n),r="fragment",this._fragmentCode=this._fragmentCode.replace(Ce,n),t.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=e},_parseAttributes:function(){var e={},t=this;function r(r,i,n){var a=We(i,n),o=ze[i]||1,s=[];for(var l in a){var u=a[l].semantic;if(e[l]={type:"float",size:o,semantic:u||null},u){if(Ie.indexOf(u)<0)throw new Error('Unkown semantic "'+u+'"');t.attributeSemantics[u]={symbol:l,type:i}}s.push(l)}return"attribute "+i+" "+s.join(",")+";\n"}this._vertexCode=this._vertexCode.replace(Pe,r),this.attributes=e},_parseDefines:function(){var e=this,t="vertex";function r(r,i,n){var a="vertex"===t?e.vertexDefines:e.fragmentDefines;return a[i]||(a[i]="false"!==n&&("true"===n||(n?isNaN(parseFloat(n))?n.trim():parseFloat(n):null))),""}this._vertexCode=this._vertexCode.replace(Le,r),t="fragment",this._fragmentCode=this._fragmentCode.replace(Le,r)},clone:function(){var e=Ge[this._shaderID],t=new je(e.vertex,e.fragment);return t}},Object.defineProperty&&(Object.defineProperty(je.prototype,"shaderID",{get:function(){return this._shaderID}}),Object.defineProperty(je.prototype,"vertex",{get:function(){return this._vertexCode}}),Object.defineProperty(je.prototype,"fragment",{get:function(){return this._fragmentCode}}),Object.defineProperty(je.prototype,"uniforms",{get:function(){return this._uniformList}}));var Xe=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;je.parseImport=function(e){return e=e.replace(Xe,(function(e,t,r){e=je.source(r);return e?je.parseImport(e):(console.error('Shader chunk "'+r+'" not existed in library'),"")})),e};var qe=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;je["import"]=function(e){e.replace(qe,(function(e,t,r,i){i=i.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(i){var n,a=r.split("."),o=je.codes,s=0;while(s<a.length-1)n=a[s++],o[n]||(o[n]={}),o=o[n];n=a[s],o[n]=i}return i}))},je.codes={},je.source=function(e){var t=e.split("."),r=je.codes,i=0;while(r&&i<t.length){var n=t[i++];r=r[n]}return"string"!==typeof r?(console.error('Shader "'+e+'" not existed in library'),""):r};var Ye=je,Ze="@export clay.prez.vertex\nuniform mat4 WVP : WORLDVIEWPROJECTION;\nattribute vec3 pos : POSITION;\nattribute vec2 uv : TEXCOORD_0;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n@import clay.chunk.skinning_header\n@import clay.chunk.instancing_header\nvarying vec2 v_Texcoord;\nvoid main()\n{\n vec4 P = vec4(pos, 1.0);\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n P = skinMatrixWS * P;\n#endif\n#ifdef INSTANCING\n @import clay.chunk.instancing_matrix\n P = instanceMat * P;\n#endif\n gl_Position = WVP * P;\n v_Texcoord = uv * uvRepeat + uvOffset;\n}\n@end\n@export clay.prez.fragment\nuniform sampler2D alphaMap;\nuniform float alphaCutoff: 0.0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n if (alphaCutoff > 0.0) {\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\n discard;\n }\n }\n gl_FragColor = vec4(0.0,0.0,0.0,1.0);\n}\n@end",Ke={create:function(){var e=new oe(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},clone:function(e){var t=new oe(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},transpose:function(e,t){if(e===t){var r=t[1],i=t[2],n=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=i,e[9]=a,e[11]=t[14],e[12]=n,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},invert:function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],c=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15],v=r*s-i*o,y=r*l-n*o,x=r*u-a*o,T=i*l-n*s,b=i*u-a*s,w=n*u-a*l,E=h*m-c*p,S=h*g-d*p,M=h*_-f*p,A=c*g-d*m,N=c*_-f*m,C=d*_-f*g,P=v*C-y*N+x*A+T*M-b*S+w*E;return P?(P=1/P,e[0]=(s*C-l*N+u*A)*P,e[1]=(n*N-i*C-a*A)*P,e[2]=(m*w-g*b+_*T)*P,e[3]=(d*b-c*w-f*T)*P,e[4]=(l*M-o*C-u*S)*P,e[5]=(r*C-n*M+a*S)*P,e[6]=(g*x-p*w-_*y)*P,e[7]=(h*w-d*x+f*y)*P,e[8]=(o*N-s*M+u*E)*P,e[9]=(i*M-r*N-a*E)*P,e[10]=(p*b-m*x+_*v)*P,e[11]=(c*x-h*b-f*v)*P,e[12]=(s*S-o*A-l*E)*P,e[13]=(r*A-i*S+n*E)*P,e[14]=(m*y-p*T-g*v)*P,e[15]=(h*T-c*y+d*v)*P,e):null},adjoint:function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],c=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15];return e[0]=s*(d*_-f*g)-c*(l*_-u*g)+m*(l*f-u*d),e[1]=-(i*(d*_-f*g)-c*(n*_-a*g)+m*(n*f-a*d)),e[2]=i*(l*_-u*g)-s*(n*_-a*g)+m*(n*u-a*l),e[3]=-(i*(l*f-u*d)-s*(n*f-a*d)+c*(n*u-a*l)),e[4]=-(o*(d*_-f*g)-h*(l*_-u*g)+p*(l*f-u*d)),e[5]=r*(d*_-f*g)-h*(n*_-a*g)+p*(n*f-a*d),e[6]=-(r*(l*_-u*g)-o*(n*_-a*g)+p*(n*u-a*l)),e[7]=r*(l*f-u*d)-o*(n*f-a*d)+h*(n*u-a*l),e[8]=o*(c*_-f*m)-h*(s*_-u*m)+p*(s*f-u*c),e[9]=-(r*(c*_-f*m)-h*(i*_-a*m)+p*(i*f-a*c)),e[10]=r*(s*_-u*m)-o*(i*_-a*m)+p*(i*u-a*s),e[11]=-(r*(s*f-u*c)-o*(i*f-a*c)+h*(i*u-a*s)),e[12]=-(o*(c*g-d*m)-h*(s*g-l*m)+p*(s*d-l*c)),e[13]=r*(c*g-d*m)-h*(i*g-n*m)+p*(i*d-n*c),e[14]=-(r*(s*g-l*m)-o*(i*g-n*m)+p*(i*l-n*s)),e[15]=r*(s*d-l*c)-o*(i*d-n*c)+h*(i*l-n*s),e},determinant:function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],h=e[9],c=e[10],d=e[11],f=e[12],p=e[13],m=e[14],g=e[15],_=t*o-r*a,v=t*s-i*a,y=t*l-n*a,x=r*s-i*o,T=r*l-n*o,b=i*l-n*s,w=u*p-h*f,E=u*m-c*f,S=u*g-d*f,M=h*m-c*p,A=h*g-d*p,N=c*g-d*m;return _*N-v*A+y*M+x*S-T*E+b*w},multiply:function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],c=t[8],d=t[9],f=t[10],p=t[11],m=t[12],g=t[13],_=t[14],v=t[15],y=r[0],x=r[1],T=r[2],b=r[3];return e[0]=y*i+x*s+T*c+b*m,e[1]=y*n+x*l+T*d+b*g,e[2]=y*a+x*u+T*f+b*_,e[3]=y*o+x*h+T*p+b*v,y=r[4],x=r[5],T=r[6],b=r[7],e[4]=y*i+x*s+T*c+b*m,e[5]=y*n+x*l+T*d+b*g,e[6]=y*a+x*u+T*f+b*_,e[7]=y*o+x*h+T*p+b*v,y=r[8],x=r[9],T=r[10],b=r[11],e[8]=y*i+x*s+T*c+b*m,e[9]=y*n+x*l+T*d+b*g,e[10]=y*a+x*u+T*f+b*_,e[11]=y*o+x*h+T*p+b*v,y=r[12],x=r[13],T=r[14],b=r[15],e[12]=y*i+x*s+T*c+b*m,e[13]=y*n+x*l+T*d+b*g,e[14]=y*a+x*u+T*f+b*_,e[15]=y*o+x*h+T*p+b*v,e},multiplyAffine:function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[4],s=t[5],l=t[6],u=t[8],h=t[9],c=t[10],d=t[12],f=t[13],p=t[14],m=r[0],g=r[1],_=r[2];return e[0]=m*i+g*o+_*u,e[1]=m*n+g*s+_*h,e[2]=m*a+g*l+_*c,m=r[4],g=r[5],_=r[6],e[4]=m*i+g*o+_*u,e[5]=m*n+g*s+_*h,e[6]=m*a+g*l+_*c,m=r[8],g=r[9],_=r[10],e[8]=m*i+g*o+_*u,e[9]=m*n+g*s+_*h,e[10]=m*a+g*l+_*c,m=r[12],g=r[13],_=r[14],e[12]=m*i+g*o+_*u+d,e[13]=m*n+g*s+_*h+f,e[14]=m*a+g*l+_*c+p,e}};Ke.mul=Ke.multiply,Ke.mulAffine=Ke.multiplyAffine,Ke.translate=function(e,t,r){var i,n,a,o,s,l,u,h,c,d,f,p,m=r[0],g=r[1],_=r[2];return t===e?(e[12]=t[0]*m+t[4]*g+t[8]*_+t[12],e[13]=t[1]*m+t[5]*g+t[9]*_+t[13],e[14]=t[2]*m+t[6]*g+t[10]*_+t[14],e[15]=t[3]*m+t[7]*g+t[11]*_+t[15]):(i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],c=t[8],d=t[9],f=t[10],p=t[11],e[0]=i,e[1]=n,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=u,e[7]=h,e[8]=c,e[9]=d,e[10]=f,e[11]=p,e[12]=i*m+s*g+c*_+t[12],e[13]=n*m+l*g+d*_+t[13],e[14]=a*m+u*g+f*_+t[14],e[15]=o*m+h*g+p*_+t[15]),e},Ke.scale=function(e,t,r){var i=r[0],n=r[1],a=r[2];return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*n,e[5]=t[5]*n,e[6]=t[6]*n,e[7]=t[7]*n,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},Ke.rotate=function(e,t,r,i){var n,a,o,s,l,u,h,c,d,f,p,m,g,_,v,y,x,T,b,w,E,S,M,A,N=i[0],C=i[1],P=i[2],L=Math.sqrt(N*N+C*C+P*P);return Math.abs(L)<ae?null:(L=1/L,N*=L,C*=L,P*=L,n=Math.sin(r),a=Math.cos(r),o=1-a,s=t[0],l=t[1],u=t[2],h=t[3],c=t[4],d=t[5],f=t[6],p=t[7],m=t[8],g=t[9],_=t[10],v=t[11],y=N*N*o+a,x=C*N*o+P*n,T=P*N*o-C*n,b=N*C*o-P*n,w=C*C*o+a,E=P*C*o+N*n,S=N*P*o+C*n,M=C*P*o-N*n,A=P*P*o+a,e[0]=s*y+c*x+m*T,e[1]=l*y+d*x+g*T,e[2]=u*y+f*x+_*T,e[3]=h*y+p*x+v*T,e[4]=s*b+c*w+m*E,e[5]=l*b+d*w+g*E,e[6]=u*b+f*w+_*E,e[7]=h*b+p*w+v*E,e[8]=s*S+c*M+m*A,e[9]=l*S+d*M+g*A,e[10]=u*S+f*M+_*A,e[11]=h*S+p*M+v*A,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)},Ke.rotateX=function(e,t,r){var i=Math.sin(r),n=Math.cos(r),a=t[4],o=t[5],s=t[6],l=t[7],u=t[8],h=t[9],c=t[10],d=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*n+u*i,e[5]=o*n+h*i,e[6]=s*n+c*i,e[7]=l*n+d*i,e[8]=u*n-a*i,e[9]=h*n-o*i,e[10]=c*n-s*i,e[11]=d*n-l*i,e},Ke.rotateY=function(e,t,r){var i=Math.sin(r),n=Math.cos(r),a=t[0],o=t[1],s=t[2],l=t[3],u=t[8],h=t[9],c=t[10],d=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*n-u*i,e[1]=o*n-h*i,e[2]=s*n-c*i,e[3]=l*n-d*i,e[8]=a*i+u*n,e[9]=o*i+h*n,e[10]=s*i+c*n,e[11]=l*i+d*n,e},Ke.rotateZ=function(e,t,r){var i=Math.sin(r),n=Math.cos(r),a=t[0],o=t[1],s=t[2],l=t[3],u=t[4],h=t[5],c=t[6],d=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*n+u*i,e[1]=o*n+h*i,e[2]=s*n+c*i,e[3]=l*n+d*i,e[4]=u*n-a*i,e[5]=h*n-o*i,e[6]=c*n-s*i,e[7]=d*n-l*i,e},Ke.fromRotationTranslation=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=i+i,l=n+n,u=a+a,h=i*s,c=i*l,d=i*u,f=n*l,p=n*u,m=a*u,g=o*s,_=o*l,v=o*u;return e[0]=1-(f+m),e[1]=c+v,e[2]=d-_,e[3]=0,e[4]=c-v,e[5]=1-(h+m),e[6]=p+g,e[7]=0,e[8]=d+_,e[9]=p-g,e[10]=1-(h+f),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e},Ke.fromQuat=function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=r+r,s=i+i,l=n+n,u=r*o,h=i*o,c=i*s,d=n*o,f=n*s,p=n*l,m=a*o,g=a*s,_=a*l;return e[0]=1-c-p,e[1]=h+_,e[2]=d-g,e[3]=0,e[4]=h-_,e[5]=1-u-p,e[6]=f+m,e[7]=0,e[8]=d+g,e[9]=f-m,e[10]=1-u-c,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},Ke.frustum=function(e,t,r,i,n,a,o){var s=1/(r-t),l=1/(n-i),u=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*l,e[6]=0,e[7]=0,e[8]=(r+t)*s,e[9]=(n+i)*l,e[10]=(o+a)*u,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a*2*u,e[15]=0,e},Ke.perspective=function(e,t,r,i,n){var a=1/Math.tan(t/2),o=1/(i-n);return e[0]=a/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(n+i)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*n*i*o,e[15]=0,e},Ke.ortho=function(e,t,r,i,n,a,o){var s=1/(t-r),l=1/(i-n),u=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*u,e[11]=0,e[12]=(t+r)*s,e[13]=(n+i)*l,e[14]=(o+a)*u,e[15]=1,e},Ke.lookAt=function(e,t,r,i){var n,a,o,s,l,u,h,c,d,f,p=t[0],m=t[1],g=t[2],_=i[0],v=i[1],y=i[2],x=r[0],T=r[1],b=r[2];return Math.abs(p-x)<ae&&Math.abs(m-T)<ae&&Math.abs(g-b)<ae?Ke.identity(e):(h=p-x,c=m-T,d=g-b,f=1/Math.sqrt(h*h+c*c+d*d),h*=f,c*=f,d*=f,n=v*d-y*c,a=y*h-_*d,o=_*c-v*h,f=Math.sqrt(n*n+a*a+o*o),f?(f=1/f,n*=f,a*=f,o*=f):(n=0,a=0,o=0),s=c*o-d*a,l=d*n-h*o,u=h*a-c*n,f=Math.sqrt(s*s+l*l+u*u),f?(f=1/f,s*=f,l*=f,u*=f):(s=0,l=0,u=0),e[0]=n,e[1]=s,e[2]=h,e[3]=0,e[4]=a,e[5]=l,e[6]=c,e[7]=0,e[8]=o,e[9]=u,e[10]=d,e[11]=0,e[12]=-(n*p+a*m+o*g),e[13]=-(s*p+l*m+u*g),e[14]=-(h*p+c*m+d*g),e[15]=1,e)},Ke.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2)+Math.pow(e[9],2)+Math.pow(e[10],2)+Math.pow(e[11],2)+Math.pow(e[12],2)+Math.pow(e[13],2)+Math.pow(e[14],2)+Math.pow(e[15],2))};var Qe=Ke,Je={create:function(){var e=new oe(3);return e[0]=0,e[1]=0,e[2]=0,e},clone:function(e){var t=new oe(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},fromValues:function(e,t,r){var i=new oe(3);return i[0]=e,i[1]=t,i[2]=r,i},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},set:function(e,t,r,i){return e[0]=t,e[1]=r,e[2]=i,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e},subtract:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e}};Je.sub=Je.subtract,Je.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e},Je.mul=Je.multiply,Je.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e},Je.div=Je.divide,Je.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e},Je.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e},Je.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e},Je.scaleAndAdd=function(e,t,r,i){return e[0]=t[0]+r[0]*i,e[1]=t[1]+r[1]*i,e[2]=t[2]+r[2]*i,e},Je.distance=function(e,t){var r=t[0]-e[0],i=t[1]-e[1],n=t[2]-e[2];return Math.sqrt(r*r+i*i+n*n)},Je.dist=Je.distance,Je.squaredDistance=function(e,t){var r=t[0]-e[0],i=t[1]-e[1],n=t[2]-e[2];return r*r+i*i+n*n},Je.sqrDist=Je.squaredDistance,Je.length=function(e){var t=e[0],r=e[1],i=e[2];return Math.sqrt(t*t+r*r+i*i)},Je.len=Je.length,Je.squaredLength=function(e){var t=e[0],r=e[1],i=e[2];return t*t+r*r+i*i},Je.sqrLen=Je.squaredLength,Je.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},Je.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e},Je.normalize=function(e,t){var r=t[0],i=t[1],n=t[2],a=r*r+i*i+n*n;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e},Je.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},Je.cross=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=r[0],s=r[1],l=r[2];return e[0]=n*l-a*s,e[1]=a*o-i*l,e[2]=i*s-n*o,e},Je.lerp=function(e,t,r,i){var n=t[0],a=t[1],o=t[2];return e[0]=n+i*(r[0]-n),e[1]=a+i*(r[1]-a),e[2]=o+i*(r[2]-o),e},Je.random=function(e,t){t=t||1;var r=2*se()*Math.PI,i=2*se()-1,n=Math.sqrt(1-i*i)*t;return e[0]=Math.cos(r)*n,e[1]=Math.sin(r)*n,e[2]=i*t,e},Je.transformMat4=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=r[3]*i+r[7]*n+r[11]*a+r[15];return o=o||1,e[0]=(r[0]*i+r[4]*n+r[8]*a+r[12])/o,e[1]=(r[1]*i+r[5]*n+r[9]*a+r[13])/o,e[2]=(r[2]*i+r[6]*n+r[10]*a+r[14])/o,e},Je.transformMat3=function(e,t,r){var i=t[0],n=t[1],a=t[2];return e[0]=i*r[0]+n*r[3]+a*r[6],e[1]=i*r[1]+n*r[4]+a*r[7],e[2]=i*r[2]+n*r[5]+a*r[8],e},Je.transformQuat=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=r[0],s=r[1],l=r[2],u=r[3],h=u*i+s*a-l*n,c=u*n+l*i-o*a,d=u*a+o*n-s*i,f=-o*i-s*n-l*a;return e[0]=h*u+f*-o+c*-l-d*-s,e[1]=c*u+f*-s+d*-o-h*-l,e[2]=d*u+f*-l+h*-s-c*-o,e},Je.rotateX=function(e,t,r,i){var n=[],a=[];return n[0]=t[0]-r[0],n[1]=t[1]-r[1],n[2]=t[2]-r[2],a[0]=n[0],a[1]=n[1]*Math.cos(i)-n[2]*Math.sin(i),a[2]=n[1]*Math.sin(i)+n[2]*Math.cos(i),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},Je.rotateY=function(e,t,r,i){var n=[],a=[];return n[0]=t[0]-r[0],n[1]=t[1]-r[1],n[2]=t[2]-r[2],a[0]=n[2]*Math.sin(i)+n[0]*Math.cos(i),a[1]=n[1],a[2]=n[2]*Math.cos(i)-n[0]*Math.sin(i),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},Je.rotateZ=function(e,t,r,i){var n=[],a=[];return n[0]=t[0]-r[0],n[1]=t[1]-r[1],n[2]=t[2]-r[2],a[0]=n[0]*Math.cos(i)-n[1]*Math.sin(i),a[1]=n[0]*Math.sin(i)+n[1]*Math.cos(i),a[2]=n[2],e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},Je.forEach=function(){var e=Je.create();return function(t,r,i,n,a,o){var s,l;for(r||(r=3),i||(i=0),l=n?Math.min(n*r+i,t.length):t.length,s=i;s<l;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2];return t}}(),Je.angle=function(e,t){var r=Je.fromValues(e[0],e[1],e[2]),i=Je.fromValues(t[0],t[1],t[2]);Je.normalize(r,r),Je.normalize(i,i);var n=Je.dot(r,i);return n>1?0:Math.acos(n)};var $e=Je;Ye["import"](Ze);var et=Qe.create,tt={};function rt(e){return e.material}function it(e,t,r){return t.uniforms[r].value}function nt(e,t,r,i){return r!==i}function at(e){return!0}function ot(){}var st={float:P.FLOAT,byte:P.BYTE,ubyte:P.UNSIGNED_BYTE,short:P.SHORT,ushort:P.UNSIGNED_SHORT};function lt(e,t,r){this.availableAttributes=e,this.availableAttributeSymbols=t,this.indicesBuffer=r,this.vao=null}function ut(e){var t,r;this.bind=function(e){t||(t=L["a"].createCanvas(),t.width=t.height=1,t.getContext("2d"));var i=e.gl,n=!r;n&&(r=i.createTexture()),i.bindTexture(i.TEXTURE_2D,r),n&&i.texImage2D(i.TEXTURE_2D,0,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,t)},this.unbind=function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},this.isRenderable=function(){return!0}}var ht=S.extend((function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:"undefined"!==typeof window&&window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},maxJointNumber:20,__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}}),(function(){this.canvas||(this.canvas=L["a"].createCanvas());var e=this.canvas;try{var t={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),!this.gl)throw new Error;this._glinfo=new C(this.gl),this.gl.targetRenderer&&console.error("Already created a renderer"),this.gl.targetRenderer=this,this.resize()}catch(r){throw"Error creating WebGL Context "+r}this._programMgr=new Ne(this),this._placeholderTexture=new ut(this)}),{resize:function(e,t){var r=this.canvas,i=this.devicePixelRatio;null!=e?(r.style&&(r.style.width=e+"px",r.style.height=t+"px"),r.width=e*i,r.height=t*i,this._width=e,this._height=t):(this._width=r.width/i,this._height=r.height/i),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var e=this.viewport;return e.width/e.height},setDevicePixelRatio:function(e){this.devicePixelRatio=e,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getGLExtension:function(e){return this._glinfo.getExtension(e)},getGLParameter:function(e){return this._glinfo.getParameter(e)},setViewport:function(e,t,r,i,n){if("object"===typeof e){var a=e;e=a.x,t=a.y,r=a.width,i=a.height,n=a.devicePixelRatio}n=n||this.devicePixelRatio,this.gl.viewport(e*n,t*n,r*n,i*n),this.viewport={x:e,y:t,width:r,height:i,devicePixelRatio:n}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var e=this._clearStack.pop();this.clearColor=e.clearColor,this.clearBit=e.clearBit}},bindSceneRendering:function(e){this._sceneRendering=e},render:function(e,t,r,i){var n=this.gl,a=this.clearColor;if(this.clearBit){n.colorMask(!0,!0,!0,!0),n.depthMask(!0);var o=this.viewport,s=!1,l=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||l&&l!==this.devicePixelRatio||o.x||o.y)&&(s=!0,n.enable(n.SCISSOR_TEST),n.scissor(o.x*l,o.y*l,o.width*l,o.height*l)),n.clearColor(a[0],a[1],a[2],a[3]),n.clear(this.clearBit),s&&n.disable(n.SCISSOR_TEST)}if(r||e.update(!1),e.updateLights(),t=t||e.getMainCamera(),t){t.update();var u=e.updateRenderList(t,!0);this._sceneRendering=e;var h=u.opaque,c=u.transparent,d=e.material;e.trigger("beforerender",this,e,t,u),i?(this.renderPreZ(h,e,t),n.depthFunc(n.LEQUAL)):n.depthFunc(n.LESS);for(var f=et(),p=$e.create(),m=0;m<c.length;m++){var g=c[m];Qe.multiplyAffine(f,t.viewMatrix.array,g.worldTransform.array),$e.transformMat4(p,g.position.array,f),g.__depth=p[2]}this.renderPass(h,t,{getMaterial:function(e){return d||e.material},sortCompare:this.opaqueSortCompare}),this.renderPass(c,t,{getMaterial:function(e){return d||e.material},sortCompare:this.transparentSortCompare}),e.trigger("afterrender",this,e,t,u),this._sceneRendering=null}else console.error("Can't find camera in the scene.")},getProgram:function(e,t,r){return t=t||e.material,this._programMgr.getProgram(e,t,r)},validateProgram:function(e){if(e.__error){var t=e.__error;if(tt[e.__uid__])return;if(tt[e.__uid__]=!0,this.throwError)throw new Error(t);this.trigger("error",t)}},updatePrograms:function(e,t,r){var i=r&&r.getMaterial||rt;t=t||null;for(var n=0;n<e.length;n++){var a=e[n],o=i.call(this,a);if(n>0){var s=e[n-1],l=s.joints?s.joints.length:0,u=a.joints?a.joints.length:0;if(u===l&&a.material===s.material&&a.lightGroup===s.lightGroup){a.__program=s.__program;continue}}var h=this._programMgr.getProgram(a,o,t);this.validateProgram(h),a.__program=h}},renderPass:function(e,t,r){this.trigger("beforerenderpass",this,e,t,r),r=r||{},r.getMaterial=r.getMaterial||rt,r.getUniform=r.getUniform||it,r.isMaterialChanged=r.isMaterialChanged||nt,r.beforeRender=r.beforeRender||ot,r.afterRender=r.afterRender||ot;var i=r.ifRender||at;this.updatePrograms(e,this._sceneRendering,r),r.sortCompare&&e.sort(r.sortCompare);var n=this.viewport,a=n.devicePixelRatio,o=[n.x*a,n.y*a,n.width*a,n.height*a],s=this.devicePixelRatio,l=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*s,this._height*s],u=[o[2],o[3]],h=Date.now();t?(Qe.copy(ct.VIEW,t.viewMatrix.array),Qe.copy(ct.PROJECTION,t.projectionMatrix.array),Qe.copy(ct.VIEWINVERSE,t.worldTransform.array)):(Qe.identity(ct.VIEW),Qe.identity(ct.PROJECTION),Qe.identity(ct.VIEWINVERSE)),Qe.multiply(ct.VIEWPROJECTION,ct.PROJECTION,ct.VIEW),Qe.invert(ct.PROJECTIONINVERSE,ct.PROJECTION),Qe.invert(ct.VIEWPROJECTIONINVERSE,ct.VIEWPROJECTION);for(var c,d,f,p,m,g,_,v,y,x,T,b,w=this.gl,E=this._sceneRendering,S=null,M=0;M<e.length;M++){var A,N=e[M],C=null!=N.worldTransform;if(i(N)){C&&(A=N.isSkinnedMesh&&N.isSkinnedMesh()?N.offsetMatrix?N.offsetMatrix.array:ct.IDENTITY:N.worldTransform.array);var P=N.geometry,L=r.getMaterial.call(this,N),O=N.__program,D=L.shader,R=P.__uid__+"-"+O.__uid__,I=R!==x;x=R,I&&S&&S.bindVertexArrayOES(null),C&&(Qe.copy(ct.WORLD,A),Qe.multiply(ct.WORLDVIEWPROJECTION,ct.VIEWPROJECTION,A),Qe.multiplyAffine(ct.WORLDVIEW,ct.VIEW,A),(D.matrixSemantics.WORLDINVERSE||D.matrixSemantics.WORLDINVERSETRANSPOSE)&&Qe.invert(ct.WORLDINVERSE,A),(D.matrixSemantics.WORLDVIEWINVERSE||D.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&Qe.invert(ct.WORLDVIEWINVERSE,ct.WORLDVIEW),(D.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||D.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&Qe.invert(ct.WORLDVIEWPROJECTIONINVERSE,ct.WORLDVIEWPROJECTION)),N.beforeRender&&N.beforeRender(this),r.beforeRender.call(this,N,L,c);var F=O!==d;F?(O.bind(this),O.setUniformOfSemantic(w,"VIEWPORT",o),O.setUniformOfSemantic(w,"WINDOW_SIZE",l),t&&(O.setUniformOfSemantic(w,"NEAR",t.near),O.setUniformOfSemantic(w,"FAR",t.far)),O.setUniformOfSemantic(w,"DEVICEPIXELRATIO",a),O.setUniformOfSemantic(w,"TIME",h),O.setUniformOfSemantic(w,"VIEWPORT_SIZE",u),E&&E.setLightUniforms(O,N.lightGroup,this)):O=d,(F||r.isMaterialChanged(N,f,L,c))&&(L.depthTest!==p&&(L.depthTest?w.enable(w.DEPTH_TEST):w.disable(w.DEPTH_TEST),p=L.depthTest),L.depthMask!==m&&(w.depthMask(L.depthMask),m=L.depthMask),L.transparent!==y&&(L.transparent?w.enable(w.BLEND):w.disable(w.BLEND),y=L.transparent),L.transparent&&(L.blend?L.blend(w):(w.blendEquationSeparate(w.FUNC_ADD,w.FUNC_ADD),w.blendFuncSeparate(w.SRC_ALPHA,w.ONE_MINUS_SRC_ALPHA,w.ONE,w.ONE_MINUS_SRC_ALPHA))),b=this._bindMaterial(N,L,O,f||null,c||null,d||null,r.getUniform),c=L);var B=D.matrixSemanticKeys;if(C)for(var z=0;z<B.length;z++){var U=B[z],G=D.matrixSemantics[U],k=ct[U];if(G.isTranspose){var H=ct[G.semanticNoTranspose];Qe.transpose(k,H)}O.setUniform(w,G.type,G.symbol,k)}N.cullFace!==_&&(_=N.cullFace,w.cullFace(_)),N.frontFace!==v&&(v=N.frontFace,w.frontFace(v)),N.culling!==g&&(g=N.culling,g?w.enable(w.CULL_FACE):w.disable(w.CULL_FACE)),this._updateSkeleton(N,O,b),I&&(T=this._bindVAO(S,D,P,O)),this._renderObject(N,T,O),r.afterRender(this,N),N.afterRender&&N.afterRender(this),d=O,f=N}}S&&S.bindVertexArrayOES(null),this.trigger("afterrenderpass",this,e,t,r)},getMaxJointNumber:function(){return this.maxJointNumber},_updateSkeleton:function(e,t,r){var i=this.gl,n=e.skeleton;if(n)if(n.update(),e.joints.length>this.getMaxJointNumber()){var a=n.getSubSkinMatricesTexture(e.__uid__,e.joints);t.useTextureSlot(this,a,r),t.setUniform(i,"1i","skinMatricesTexture",r),t.setUniform(i,"1f","skinMatricesTextureSize",a.width)}else{var o=n.getSubSkinMatrices(e.__uid__,e.joints);t.setUniformOfSemantic(i,"SKIN_MATRIX",o)}},_renderObject:function(e,t,r){var i=this.gl,n=e.geometry,a=e.mode;null==a&&(a=4);var o=null,s=e.isInstancedMesh&&e.isInstancedMesh();if(!s||(o=this.getGLExtension("ANGLE_instanced_arrays"),o)){var l;if(s&&(l=this._bindInstancedAttributes(e,r,o)),t.indicesBuffer){var u=this.getGLExtension("OES_element_index_uint"),h=u&&n.indices instanceof Uint32Array,c=h?i.UNSIGNED_INT:i.UNSIGNED_SHORT;s?o.drawElementsInstancedANGLE(a,t.indicesBuffer.count,c,0,e.getInstanceCount()):i.drawElements(a,t.indicesBuffer.count,c,0)}else s?o.drawArraysInstancedANGLE(a,0,n.vertexCount,e.getInstanceCount()):i.drawArrays(a,0,n.vertexCount);if(s)for(var d=0;d<l.length;d++)i.disableVertexAttribArray(l[d])}else console.warn("Device not support ANGLE_instanced_arrays extension")},_bindInstancedAttributes:function(e,t,r){for(var i=this.gl,n=e.getInstancedAttributesBuffers(this),a=[],o=0;o<n.length;o++){var s=n[o],l=t.getAttribLocation(i,s.symbol);if(!(l<0)){var u=st[s.type]||i.FLOAT;i.enableVertexAttribArray(l),i.bindBuffer(i.ARRAY_BUFFER,s.buffer),i.vertexAttribPointer(l,s.size,u,!1,0,0),r.vertexAttribDivisorANGLE(l,s.divisor),a.push(l)}}return a},_bindMaterial:function(e,t,r,i,n,a,o){for(var s=this.gl,l=a===r,u=r.currentTextureSlot(),h=t.getEnabledUniforms(),c=t.getTextureUniforms(),d=this._placeholderTexture,f=0;f<c.length;f++){var p=c[f],m=o(e,t,p),g=t.uniforms[p].type;if("t"===g&&m)m.__slot=-1;else if("tv"===g)for(var _=0;_<m.length;_++)m[_]&&(m[_].__slot=-1)}d.__slot=-1;for(f=0;f<h.length;f++){p=h[f];var v=t.uniforms[p],y=(m=o(e,t,p),g=v.type,"t"===g);if(y&&(m&&m.isRenderable()||(m=d)),n&&l){var x=o(i,n,p);if(y&&(x&&x.isRenderable()||(x=d)),x===m){if(y)r.takeCurrentTextureSlot(this,null);else if("tv"===g&&m)for(_=0;_<m.length;_++)r.takeCurrentTextureSlot(this,null);continue}}if(null!=m)if(y)if(m.__slot<0){var T=r.currentTextureSlot(),b=r.setUniform(s,"1i",p,T);b&&(r.takeCurrentTextureSlot(this,m),m.__slot=T)}else r.setUniform(s,"1i",p,m.__slot);else if(Array.isArray(m)){if(0===m.length)continue;if("tv"===g){if(!r.hasUniform(p))continue;var w=[];for(_=0;_<m.length;_++){var E=m[_];if(E.__slot<0){T=r.currentTextureSlot();w.push(T),r.takeCurrentTextureSlot(this,E),E.__slot=T}else w.push(E.__slot)}r.setUniform(s,"1iv",p,w)}else r.setUniform(s,v.type,p,m)}else r.setUniform(s,v.type,p,m)}var S=r.currentTextureSlot();return r.resetTextureSlot(u),S},_bindVAO:function(e,t,r,i){var n=!r.dynamic,a=this.gl,o=this.__uid__+"-"+i.__uid__,s=r.__vaoCache[o];if(!s){var l=r.getBufferChunks(this);if(!l||!l.length)return;for(var u=l[0],h=u.attributeBuffers,c=u.indicesBuffer,d=[],f=[],p=0;p<h.length;p++){var m,g=h[p],_=g.name,v=g.semantic;if(v){var y=t.attributeSemantics[v];m=y&&y.symbol}else m=_;m&&i.attributes[m]&&(d.push(g),f.push(m))}s=new lt(d,f,c),n&&(r.__vaoCache[o]=s)}var x=!0;e&&n&&(null==s.vao?s.vao=e.createVertexArrayOES():x=!1,e.bindVertexArrayOES(s.vao));d=s.availableAttributes,c=s.indicesBuffer;if(x){var T=i.enableAttributes(this,s.availableAttributeSymbols,e&&n&&s);for(p=0;p<d.length;p++){var b=T[p];if(-1!==b){g=d[p];var w=g.buffer,E=g.size,S=st[g.type]||a.FLOAT;a.bindBuffer(a.ARRAY_BUFFER,w),a.vertexAttribPointer(b,E,S,!1,0,0)}}r.isUseIndices()&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,c.buffer)}return s},renderPreZ:function(e,t,r){var i=this.gl,n=this._prezMaterial||new ne({shader:new Ye(Ye.source("clay.prez.vertex"),Ye.source("clay.prez.fragment"))});this._prezMaterial=n,i.colorMask(!1,!1,!1,!1),i.depthMask(!0),this.renderPass(e,r,{ifRender:function(e){return!e.ignorePreZ},isMaterialChanged:function(e,t){var r=e.material,i=t.material;return r.get("diffuseMap")!==i.get("diffuseMap")||(r.get("alphaCutoff")||0)!==(i.get("alphaCutoff")||0)},getUniform:function(e,t,r){if("alphaMap"===r)return e.material.get("diffuseMap");if("alphaCutoff"===r){if(e.material.isDefined("fragment","ALPHA_TEST")&&e.material.get("diffuseMap")){var i=e.material.get("alphaCutoff");return i||0}return 0}return"uvRepeat"===r?e.material.get("uvRepeat"):"uvOffset"===r?e.material.get("uvOffset"):t.get(r)},getMaterial:function(){return n},sort:this.opaqueSortCompare}),i.colorMask(!0,!0,!0,!0),i.depthMask(!0)},disposeScene:function(e){this.disposeNode(e,!0,!0),e.dispose()},disposeNode:function(e,t,r){e.getParent()&&e.getParent().remove(e);var i={};e.traverse((function(e){var n=e.material;if(e.geometry&&t&&e.geometry.dispose(this),r&&n&&!i[n.__uid__]){for(var a=n.getTextureUniforms(),o=0;o<a.length;o++){var s=a[o],l=n.uniforms[s].value,u=n.uniforms[s].type;if(l)if("t"===u)l.dispose&&l.dispose(this);else if("tv"===u)for(var h=0;h<l.length;h++)l[h]&&l[h].dispose&&l[h].dispose(this)}i[n.__uid__]=!0}e.dispose&&e.dispose(this)}),this)},disposeGeometry:function(e){e.dispose(this)},disposeTexture:function(e){e.dispose(this)},disposeFrameBuffer:function(e){e.dispose(this)},dispose:function(){},screenToNDC:function(e,t,r){r||(r=new de),t=this._height-t;var i=this.viewport,n=r.array;return n[0]=(e-i.x)/i.width,n[0]=2*n[0]-1,n[1]=(t-i.y)/i.height,n[1]=2*n[1]-1,r}});ht.opaqueSortCompare=ht.prototype.opaqueSortCompare=function(e,t){return e.renderOrder===t.renderOrder?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.renderOrder-t.renderOrder},ht.transparentSortCompare=ht.prototype.transparentSortCompare=function(e,t){return e.renderOrder===t.renderOrder?e.__depth===t.__depth?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.__depth-t.__depth:e.renderOrder-t.renderOrder};var ct={IDENTITY:et(),WORLD:et(),VIEW:et(),PROJECTION:et(),WORLDVIEW:et(),VIEWPROJECTION:et(),WORLDVIEWPROJECTION:et(),WORLDINVERSE:et(),VIEWINVERSE:et(),PROJECTIONINVERSE:et(),WORLDVIEWINVERSE:et(),VIEWPROJECTIONINVERSE:et(),WORLDVIEWPROJECTIONINVERSE:et(),WORLDTRANSPOSE:et(),VIEWTRANSPOSE:et(),PROJECTIONTRANSPOSE:et(),WORLDVIEWTRANSPOSE:et(),VIEWPROJECTIONTRANSPOSE:et(),WORLDVIEWPROJECTIONTRANSPOSE:et(),WORLDINVERSETRANSPOSE:et(),VIEWINVERSETRANSPOSE:et(),PROJECTIONINVERSETRANSPOSE:et(),WORLDVIEWINVERSETRANSPOSE:et(),VIEWPROJECTIONINVERSETRANSPOSE:et(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:et()};ht.COLOR_BUFFER_BIT=P.COLOR_BUFFER_BIT,ht.DEPTH_BUFFER_BIT=P.DEPTH_BUFFER_BIT,ht.STENCIL_BUFFER_BIT=P.STENCIL_BUFFER_BIT;var dt=ht,ft=function(e,t,r){e=e||0,t=t||0,r=r||0,this.array=$e.fromValues(e,t,r),this._dirty=!0};ft.prototype={constructor:ft,add:function(e){return $e.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,r){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this._dirty=!0,this},clone:function(){return new ft(this.x,this.y,this.z)},copy:function(e){return $e.copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return $e.cross(this.array,e.array,t.array),this._dirty=!0,this},dist:function(e){return $e.dist(this.array,e.array)},distance:function(e){return $e.distance(this.array,e.array)},div:function(e){return $e.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return $e.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return $e.dot(this.array,e.array)},len:function(){return $e.len(this.array)},length:function(){return $e.length(this.array)},lerp:function(e,t,r){return $e.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return $e.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return $e.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return $e.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return $e.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return $e.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return $e.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return $e.random(this.array,e),this._dirty=!0,this},scale:function(e){return $e.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return $e.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return $e.sqrDist(this.array,e.array)},squaredDistance:function(e){return $e.squaredDistance(this.array,e.array)},sqrLen:function(){return $e.sqrLen(this.array)},squaredLength:function(){return $e.squaredLength(this.array)},sub:function(e){return $e.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return $e.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return $e.transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return $e.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return $e.transformQuat(this.array,this.array,e.array),this._dirty=!0,this},applyProjection:function(e){var t=this.array;if(e=e.array,0===e[15]){var r=-1/t[2];t[0]=e[0]*t[0]*r,t[1]=e[5]*t[1]*r,t[2]=(e[10]*t[2]+e[14])*r}else t[0]=e[0]*t[0]+e[12],t[1]=e[5]*t[1]+e[13],t[2]=e[10]*t[2]+e[14];return this._dirty=!0,this},eulerFromQuat:function(e,t){ft.eulerFromQuat(this,e,t)},eulerFromMat3:function(e,t){ft.eulerFromMat3(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var pt=Object.defineProperty;if(pt){var mt=ft.prototype;pt(mt,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),pt(mt,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),pt(mt,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}})}function gt(e,t,r){return e<t?t:e>r?r:e}ft.add=function(e,t,r){return $e.add(e.array,t.array,r.array),e._dirty=!0,e},ft.set=function(e,t,r,i){$e.set(e.array,t,r,i),e._dirty=!0},ft.copy=function(e,t){return $e.copy(e.array,t.array),e._dirty=!0,e},ft.cross=function(e,t,r){return $e.cross(e.array,t.array,r.array),e._dirty=!0,e},ft.dist=function(e,t){return $e.distance(e.array,t.array)},ft.distance=ft.dist,ft.div=function(e,t,r){return $e.divide(e.array,t.array,r.array),e._dirty=!0,e},ft.divide=ft.div,ft.dot=function(e,t){return $e.dot(e.array,t.array)},ft.len=function(e){return $e.length(e.array)},ft.lerp=function(e,t,r,i){return $e.lerp(e.array,t.array,r.array,i),e._dirty=!0,e},ft.min=function(e,t,r){return $e.min(e.array,t.array,r.array),e._dirty=!0,e},ft.max=function(e,t,r){return $e.max(e.array,t.array,r.array),e._dirty=!0,e},ft.mul=function(e,t,r){return $e.multiply(e.array,t.array,r.array),e._dirty=!0,e},ft.multiply=ft.mul,ft.negate=function(e,t){return $e.negate(e.array,t.array),e._dirty=!0,e},ft.normalize=function(e,t){return $e.normalize(e.array,t.array),e._dirty=!0,e},ft.random=function(e,t){return $e.random(e.array,t),e._dirty=!0,e},ft.scale=function(e,t,r){return $e.scale(e.array,t.array,r),e._dirty=!0,e},ft.scaleAndAdd=function(e,t,r,i){return $e.scaleAndAdd(e.array,t.array,r.array,i),e._dirty=!0,e},ft.sqrDist=function(e,t){return $e.sqrDist(e.array,t.array)},ft.squaredDistance=ft.sqrDist,ft.sqrLen=function(e){return $e.sqrLen(e.array)},ft.squaredLength=ft.sqrLen,ft.sub=function(e,t,r){return $e.subtract(e.array,t.array,r.array),e._dirty=!0,e},ft.subtract=ft.sub,ft.transformMat3=function(e,t,r){return $e.transformMat3(e.array,t.array,r.array),e._dirty=!0,e},ft.transformMat4=function(e,t,r){return $e.transformMat4(e.array,t.array,r.array),e._dirty=!0,e},ft.transformQuat=function(e,t,r){return $e.transformQuat(e.array,t.array,r.array),e._dirty=!0,e};var _t=Math.atan2,vt=Math.asin,yt=Math.abs;ft.eulerFromQuat=function(e,t,r){e._dirty=!0,t=t.array;var i=e.array,n=t[0],a=t[1],o=t[2],s=t[3],l=n*n,u=a*a,h=o*o,c=s*s;r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":i[0]=_t(2*(n*s-a*o),c-l-u+h),i[1]=vt(gt(2*(n*o+a*s),-1,1)),i[2]=_t(2*(o*s-n*a),c+l-u-h);break;case"YXZ":i[0]=vt(gt(2*(n*s-a*o),-1,1)),i[1]=_t(2*(n*o+a*s),c-l-u+h),i[2]=_t(2*(n*a+o*s),c-l+u-h);break;case"ZXY":i[0]=vt(gt(2*(n*s+a*o),-1,1)),i[1]=_t(2*(a*s-o*n),c-l-u+h),i[2]=_t(2*(o*s-n*a),c-l+u-h);break;case"ZYX":i[0]=_t(2*(n*s+o*a),c-l-u+h),i[1]=vt(gt(2*(a*s-n*o),-1,1)),i[2]=_t(2*(n*a+o*s),c+l-u-h);break;case"YZX":i[0]=_t(2*(n*s-o*a),c-l+u-h),i[1]=_t(2*(a*s-n*o),c+l-u-h),i[2]=vt(gt(2*(n*a+o*s),-1,1));break;case"XZY":i[0]=_t(2*(n*s+a*o),c-l+u-h),i[1]=_t(2*(n*o+a*s),c+l-u-h),i[2]=vt(gt(2*(o*s-n*a),-1,1));break;default:console.warn("Unkown order: "+r)}return e},ft.eulerFromMat3=function(e,t,r){var i=t.array,n=i[0],a=i[3],o=i[6],s=i[1],l=i[4],u=i[7],h=i[2],c=i[5],d=i[8],f=e.array;r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":f[1]=vt(gt(o,-1,1)),yt(o)<.99999?(f[0]=_t(-u,d),f[2]=_t(-a,n)):(f[0]=_t(c,l),f[2]=0);break;case"YXZ":f[0]=vt(-gt(u,-1,1)),yt(u)<.99999?(f[1]=_t(o,d),f[2]=_t(s,l)):(f[1]=_t(-h,n),f[2]=0);break;case"ZXY":f[0]=vt(gt(c,-1,1)),yt(c)<.99999?(f[1]=_t(-h,d),f[2]=_t(-a,l)):(f[1]=0,f[2]=_t(s,n));break;case"ZYX":f[1]=vt(-gt(h,-1,1)),yt(h)<.99999?(f[0]=_t(c,d),f[2]=_t(s,n)):(f[0]=0,f[2]=_t(-a,l));break;case"YZX":f[2]=vt(gt(s,-1,1)),yt(s)<.99999?(f[0]=_t(-u,l),f[1]=_t(-h,n)):(f[0]=0,f[1]=_t(o,d));break;case"XZY":f[2]=vt(-gt(a,-1,1)),yt(a)<.99999?(f[0]=_t(c,l),f[1]=_t(o,n)):(f[0]=_t(-u,d),f[1]=0);break;default:console.warn("Unkown order: "+r)}return e._dirty=!0,e},Object.defineProperties(ft,{POSITIVE_X:{get:function(){return new ft(1,0,0)}},NEGATIVE_X:{get:function(){return new ft(-1,0,0)}},POSITIVE_Y:{get:function(){return new ft(0,1,0)}},NEGATIVE_Y:{get:function(){return new ft(0,-1,0)}},POSITIVE_Z:{get:function(){return new ft(0,0,1)}},NEGATIVE_Z:{get:function(){return new ft(0,0,-1)}},UP:{get:function(){return new ft(0,1,0)}},ZERO:{get:function(){return new ft}}});var xt=ft,Tt=1e-5,bt=function(e,t){this.origin=e||new xt,this.direction=t||new xt};bt.prototype={constructor:bt,intersectPlane:function(e,t){var r=e.normal.array,i=e.distance,n=this.origin.array,a=this.direction.array,o=$e.dot(r,a);if(0===o)return null;t||(t=new xt);var s=($e.dot(r,n)-i)/o;return $e.scaleAndAdd(t.array,n,a,-s),t._dirty=!0,t},mirrorAgainstPlane:function(e){var t=$e.dot(e.normal.array,this.direction.array);$e.scaleAndAdd(this.direction.array,this.direction.array,e.normal.array,2*-t),this.direction._dirty=!0},distanceToPoint:function(){var e=$e.create();return function(t){$e.sub(e,t,this.origin.array);var r=$e.dot(e,this.direction.array);if(r<0)return $e.distance(this.origin.array,t);var i=$e.lenSquared(e);return Math.sqrt(i-r*r)}}(),intersectSphere:function(){var e=$e.create();return function(t,r,i){var n=this.origin.array,a=this.direction.array;t=t.array,$e.sub(e,t,n);var o=$e.dot(e,a),s=$e.squaredLength(e),l=s-o*o,u=r*r;if(!(l>u)){var h=Math.sqrt(u-l),c=o-h,d=o+h;return i||(i=new xt),c<0?d<0?null:($e.scaleAndAdd(i.array,n,a,d),i):($e.scaleAndAdd(i.array,n,a,c),i)}}}(),intersectBoundingBox:function(e,t){var r,i,n,a,o,s,l=this.direction.array,u=this.origin.array,h=e.min.array,c=e.max.array,d=1/l[0],f=1/l[1],p=1/l[2];if(d>=0?(r=(h[0]-u[0])*d,i=(c[0]-u[0])*d):(i=(h[0]-u[0])*d,r=(c[0]-u[0])*d),f>=0?(n=(h[1]-u[1])*f,a=(c[1]-u[1])*f):(a=(h[1]-u[1])*f,n=(c[1]-u[1])*f),r>a||n>i)return null;if((n>r||r!==r)&&(r=n),(a<i||i!==i)&&(i=a),p>=0?(o=(h[2]-u[2])*p,s=(c[2]-u[2])*p):(s=(h[2]-u[2])*p,o=(c[2]-u[2])*p),r>s||o>i)return null;if((o>r||r!==r)&&(r=o),(s<i||i!==i)&&(i=s),i<0)return null;var m=r>=0?r:i;return t||(t=new xt),$e.scaleAndAdd(t.array,u,l,m),t},intersectTriangle:function(){var e=$e.create(),t=$e.create(),r=$e.create(),i=$e.create();return function(n,a,o,s,l,u){var h=this.direction.array,c=this.origin.array;n=n.array,a=a.array,o=o.array,$e.sub(e,a,n),$e.sub(t,o,n),$e.cross(i,t,h);var d=$e.dot(e,i);if(s){if(d>-Tt)return null}else if(d>-Tt&&d<Tt)return null;$e.sub(r,c,n);var f=$e.dot(i,r)/d;if(f<0||f>1)return null;$e.cross(i,e,r);var p=$e.dot(h,i)/d;if(p<0||p>1||f+p>1)return null;$e.cross(i,e,t);var m=-$e.dot(r,i)/d;return m<0?null:(l||(l=new xt),u&&xt.set(u,1-f-p,f,p),$e.scaleAndAdd(l.array,c,h,m),l)}}(),applyTransform:function(e){xt.add(this.direction,this.direction,this.origin),xt.transformMat4(this.origin,this.origin,e),xt.transformMat4(this.direction,this.direction,e),xt.sub(this.direction,this.direction,this.origin),xt.normalize(this.direction,this.direction)},copy:function(e){xt.copy(this.origin,e.origin),xt.copy(this.direction,e.direction)},clone:function(){var e=new bt;return e.copy(this),e}};var wt=bt,Et={create:function(){var e=new oe(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e},clone:function(e){var t=new oe(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},fromValues:function(e,t,r,i){var n=new oe(4);return n[0]=e,n[1]=t,n[2]=r,n[3]=i,n},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},set:function(e,t,r,i,n){return e[0]=t,e[1]=r,e[2]=i,e[3]=n,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e},subtract:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e}};Et.sub=Et.subtract,Et.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e},Et.mul=Et.multiply,Et.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e[3]=t[3]/r[3],e},Et.div=Et.divide,Et.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e[3]=Math.min(t[3],r[3]),e},Et.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e[3]=Math.max(t[3],r[3]),e},Et.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e},Et.scaleAndAdd=function(e,t,r,i){return e[0]=t[0]+r[0]*i,e[1]=t[1]+r[1]*i,e[2]=t[2]+r[2]*i,e[3]=t[3]+r[3]*i,e},Et.distance=function(e,t){var r=t[0]-e[0],i=t[1]-e[1],n=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(r*r+i*i+n*n+a*a)},Et.dist=Et.distance,Et.squaredDistance=function(e,t){var r=t[0]-e[0],i=t[1]-e[1],n=t[2]-e[2],a=t[3]-e[3];return r*r+i*i+n*n+a*a},Et.sqrDist=Et.squaredDistance,Et.length=function(e){var t=e[0],r=e[1],i=e[2],n=e[3];return Math.sqrt(t*t+r*r+i*i+n*n)},Et.len=Et.length,Et.squaredLength=function(e){var t=e[0],r=e[1],i=e[2],n=e[3];return t*t+r*r+i*i+n*n},Et.sqrLen=Et.squaredLength,Et.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},Et.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e},Et.normalize=function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=r*r+i*i+n*n+a*a;return o>0&&(o=1/Math.sqrt(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e[3]=t[3]*o),e},Et.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},Et.lerp=function(e,t,r,i){var n=t[0],a=t[1],o=t[2],s=t[3];return e[0]=n+i*(r[0]-n),e[1]=a+i*(r[1]-a),e[2]=o+i*(r[2]-o),e[3]=s+i*(r[3]-s),e},Et.random=function(e,t){return t=t||1,e[0]=se(),e[1]=se(),e[2]=se(),e[3]=se(),Et.normalize(e,e),Et.scale(e,e,t),e},Et.transformMat4=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3];return e[0]=r[0]*i+r[4]*n+r[8]*a+r[12]*o,e[1]=r[1]*i+r[5]*n+r[9]*a+r[13]*o,e[2]=r[2]*i+r[6]*n+r[10]*a+r[14]*o,e[3]=r[3]*i+r[7]*n+r[11]*a+r[15]*o,e},Et.transformQuat=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=r[0],s=r[1],l=r[2],u=r[3],h=u*i+s*a-l*n,c=u*n+l*i-o*a,d=u*a+o*n-s*i,f=-o*i-s*n-l*a;return e[0]=h*u+f*-o+c*-l-d*-s,e[1]=c*u+f*-s+d*-o-h*-l,e[2]=d*u+f*-l+h*-s-c*-o,e},Et.forEach=function(){var e=Et.create();return function(t,r,i,n,a,o){var s,l;for(r||(r=4),i||(i=0),l=n?Math.min(n*r+i,t.length):t.length,s=i;s<l;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}();var St=Et,Mt={create:function(){var e=new oe(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},fromMat4:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},clone:function(e){var t=new oe(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},transpose:function(e,t){if(e===t){var r=t[1],i=t[2],n=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=i,e[7]=n}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},invert:function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],c=h*o-s*u,d=-h*a+s*l,f=u*a-o*l,p=r*c+i*d+n*f;return p?(p=1/p,e[0]=c*p,e[1]=(-h*i+n*u)*p,e[2]=(s*i-n*o)*p,e[3]=d*p,e[4]=(h*r-n*l)*p,e[5]=(-s*r+n*a)*p,e[6]=f*p,e[7]=(-u*r+i*l)*p,e[8]=(o*r-i*a)*p,e):null},adjoint:function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8];return e[0]=o*h-s*u,e[1]=n*u-i*h,e[2]=i*s-n*o,e[3]=s*l-a*h,e[4]=r*h-n*l,e[5]=n*a-r*s,e[6]=a*u-o*l,e[7]=i*l-r*u,e[8]=r*o-i*a,e},determinant:function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8];return t*(u*a-o*l)+r*(-u*n+o*s)+i*(l*n-a*s)},multiply:function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],c=t[8],d=r[0],f=r[1],p=r[2],m=r[3],g=r[4],_=r[5],v=r[6],y=r[7],x=r[8];return e[0]=d*i+f*o+p*u,e[1]=d*n+f*s+p*h,e[2]=d*a+f*l+p*c,e[3]=m*i+g*o+_*u,e[4]=m*n+g*s+_*h,e[5]=m*a+g*l+_*c,e[6]=v*i+y*o+x*u,e[7]=v*n+y*s+x*h,e[8]=v*a+y*l+x*c,e}};Mt.mul=Mt.multiply,Mt.translate=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],c=t[8],d=r[0],f=r[1];return e[0]=i,e[1]=n,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=d*i+f*o+u,e[7]=d*n+f*s+h,e[8]=d*a+f*l+c,e},Mt.rotate=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],c=t[8],d=Math.sin(r),f=Math.cos(r);return e[0]=f*i+d*o,e[1]=f*n+d*s,e[2]=f*a+d*l,e[3]=f*o-d*i,e[4]=f*s-d*n,e[5]=f*l-d*a,e[6]=u,e[7]=h,e[8]=c,e},Mt.scale=function(e,t,r){var i=r[0],n=r[1];return e[0]=i*t[0],e[1]=i*t[1],e[2]=i*t[2],e[3]=n*t[3],e[4]=n*t[4],e[5]=n*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},Mt.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},Mt.fromQuat=function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=r+r,s=i+i,l=n+n,u=r*o,h=i*o,c=i*s,d=n*o,f=n*s,p=n*l,m=a*o,g=a*s,_=a*l;return e[0]=1-c-p,e[3]=h-_,e[6]=d+g,e[1]=h+_,e[4]=1-u-p,e[7]=f-m,e[2]=d-g,e[5]=f+m,e[8]=1-u-c,e},Mt.normalFromMat4=function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],c=t[9],d=t[10],f=t[11],p=t[12],m=t[13],g=t[14],_=t[15],v=r*s-i*o,y=r*l-n*o,x=r*u-a*o,T=i*l-n*s,b=i*u-a*s,w=n*u-a*l,E=h*m-c*p,S=h*g-d*p,M=h*_-f*p,A=c*g-d*m,N=c*_-f*m,C=d*_-f*g,P=v*C-y*N+x*A+T*M-b*S+w*E;return P?(P=1/P,e[0]=(s*C-l*N+u*A)*P,e[1]=(l*M-o*C-u*S)*P,e[2]=(o*N-s*M+u*E)*P,e[3]=(n*N-i*C-a*A)*P,e[4]=(r*C-n*M+a*S)*P,e[5]=(i*M-r*N-a*E)*P,e[6]=(m*w-g*b+_*T)*P,e[7]=(g*x-p*w-_*y)*P,e[8]=(p*b-m*x+_*v)*P,e):null},Mt.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2))};var At=Mt,Nt={create:function(){var e=new oe(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}};Nt.rotationTo=function(){var e=$e.create(),t=$e.fromValues(1,0,0),r=$e.fromValues(0,1,0);return function(i,n,a){var o=$e.dot(n,a);return o<-.999999?($e.cross(e,t,n),$e.length(e)<1e-6&&$e.cross(e,r,n),$e.normalize(e,e),Nt.setAxisAngle(i,e,Math.PI),i):o>.999999?(i[0]=0,i[1]=0,i[2]=0,i[3]=1,i):($e.cross(e,n,a),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=1+o,Nt.normalize(i,i))}}(),Nt.setAxes=function(){var e=At.create();return function(t,r,i,n){return e[0]=i[0],e[3]=i[1],e[6]=i[2],e[1]=n[0],e[4]=n[1],e[7]=n[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],Nt.normalize(t,Nt.fromMat3(t,e))}}(),Nt.clone=St.clone,Nt.fromValues=St.fromValues,Nt.copy=St.copy,Nt.set=St.set,Nt.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},Nt.setAxisAngle=function(e,t,r){r*=.5;var i=Math.sin(r);return e[0]=i*t[0],e[1]=i*t[1],e[2]=i*t[2],e[3]=Math.cos(r),e},Nt.add=St.add,Nt.multiply=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=r[0],l=r[1],u=r[2],h=r[3];return e[0]=i*h+o*s+n*u-a*l,e[1]=n*h+o*l+a*s-i*u,e[2]=a*h+o*u+i*l-n*s,e[3]=o*h-i*s-n*l-a*u,e},Nt.mul=Nt.multiply,Nt.scale=St.scale,Nt.rotateX=function(e,t,r){r*=.5;var i=t[0],n=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=i*l+o*s,e[1]=n*l+a*s,e[2]=a*l-n*s,e[3]=o*l-i*s,e},Nt.rotateY=function(e,t,r){r*=.5;var i=t[0],n=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=i*l-a*s,e[1]=n*l+o*s,e[2]=a*l+i*s,e[3]=o*l-n*s,e},Nt.rotateZ=function(e,t,r){r*=.5;var i=t[0],n=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=i*l+n*s,e[1]=n*l-i*s,e[2]=a*l+o*s,e[3]=o*l-a*s,e},Nt.calculateW=function(e,t){var r=t[0],i=t[1],n=t[2];return e[0]=r,e[1]=i,e[2]=n,e[3]=Math.sqrt(Math.abs(1-r*r-i*i-n*n)),e},Nt.dot=St.dot,Nt.lerp=St.lerp,Nt.slerp=function(e,t,r,i){var n,a,o,s,l,u=t[0],h=t[1],c=t[2],d=t[3],f=r[0],p=r[1],m=r[2],g=r[3];return a=u*f+h*p+c*m+d*g,a<0&&(a=-a,f=-f,p=-p,m=-m,g=-g),1-a>1e-6?(n=Math.acos(a),o=Math.sin(n),s=Math.sin((1-i)*n)/o,l=Math.sin(i*n)/o):(s=1-i,l=i),e[0]=s*u+l*f,e[1]=s*h+l*p,e[2]=s*c+l*m,e[3]=s*d+l*g,e},Nt.invert=function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=r*r+i*i+n*n+a*a,s=o?1/o:0;return e[0]=-r*s,e[1]=-i*s,e[2]=-n*s,e[3]=a*s,e},Nt.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e},Nt.length=St.length,Nt.len=Nt.length,Nt.squaredLength=St.squaredLength,Nt.sqrLen=Nt.squaredLength,Nt.normalize=St.normalize,Nt.fromMat3=function(e,t){var r,i=t[0]+t[4]+t[8];if(i>0)r=Math.sqrt(i+1),e[3]=.5*r,r=.5/r,e[0]=(t[5]-t[7])*r,e[1]=(t[6]-t[2])*r,e[2]=(t[1]-t[3])*r;else{var n=0;t[4]>t[0]&&(n=1),t[8]>t[3*n+n]&&(n=2);var a=(n+1)%3,o=(n+2)%3;r=Math.sqrt(t[3*n+n]-t[3*a+a]-t[3*o+o]+1),e[n]=.5*r,r=.5/r,e[3]=(t[3*a+o]-t[3*o+a])*r,e[a]=(t[3*a+n]+t[3*n+a])*r,e[o]=(t[3*o+n]+t[3*n+o])*r}return e};var Ct=Nt,Pt=function(){this._axisX=new xt,this._axisY=new xt,this._axisZ=new xt,this.array=Qe.create(),this._dirty=!0};Pt.prototype={constructor:Pt,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return Qe.adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return(new Pt).copy(this)},copy:function(e){return Qe.copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return Qe.determinant(this.array)},fromQuat:function(e){return Qe.fromQuat(this.array,e.array),this._dirty=!0,this},fromRotationTranslation:function(e,t){return Qe.fromRotationTranslation(this.array,e.array,t.array),this._dirty=!0,this},fromMat2d:function(e){return Pt.fromMat2d(this,e),this},frustum:function(e,t,r,i,n,a){return Qe.frustum(this.array,e,t,r,i,n,a),this._dirty=!0,this},identity:function(){return Qe.identity(this.array),this._dirty=!0,this},invert:function(){return Qe.invert(this.array,this.array),this._dirty=!0,this},lookAt:function(e,t,r){return Qe.lookAt(this.array,e.array,t.array,r.array),this._dirty=!0,this},mul:function(e){return Qe.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Qe.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Qe.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Qe.multiply(this.array,e.array,this.array),this._dirty=!0,this},ortho:function(e,t,r,i,n,a){return Qe.ortho(this.array,e,t,r,i,n,a),this._dirty=!0,this},perspective:function(e,t,r,i){return Qe.perspective(this.array,e,t,r,i),this._dirty=!0,this},rotate:function(e,t){return Qe.rotate(this.array,this.array,e,t.array),this._dirty=!0,this},rotateX:function(e){return Qe.rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return Qe.rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return Qe.rotateZ(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return Qe.scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return Qe.translate(this.array,this.array,e.array),this._dirty=!0,this},transpose:function(){return Qe.transpose(this.array,this.array),this._dirty=!0,this},decomposeMatrix:function(){var e=$e.create(),t=$e.create(),r=$e.create(),i=At.create();return function(n,a,o){var s=this.array;$e.set(e,s[0],s[1],s[2]),$e.set(t,s[4],s[5],s[6]),$e.set(r,s[8],s[9],s[10]);var l=$e.length(e),u=$e.length(t),h=$e.length(r),c=this.determinant();c<0&&(l=-l),n&&n.set(l,u,h),o.set(s[12],s[13],s[14]),At.fromMat4(i,s),i[0]/=l,i[1]/=l,i[2]/=l,i[3]/=u,i[4]/=u,i[5]/=u,i[6]/=h,i[7]/=h,i[8]/=h,Ct.fromMat3(a.array,i),Ct.normalize(a.array,a.array),a._dirty=!0,o._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var Lt=Object.defineProperty;if(Lt){var Ot=Pt.prototype;Lt(Ot,"z",{get:function(){var e=this.array;return this._axisZ.set(e[8],e[9],e[10]),this._axisZ},set:function(e){var t=this.array;e=e.array,t[8]=e[0],t[9]=e[1],t[10]=e[2],this._dirty=!0}}),Lt(Ot,"y",{get:function(){var e=this.array;return this._axisY.set(e[4],e[5],e[6]),this._axisY},set:function(e){var t=this.array;e=e.array,t[4]=e[0],t[5]=e[1],t[6]=e[2],this._dirty=!0}}),Lt(Ot,"x",{get:function(){var e=this.array;return this._axisX.set(e[0],e[1],e[2]),this._axisX},set:function(e){var t=this.array;e=e.array,t[0]=e[0],t[1]=e[1],t[2]=e[2],this._dirty=!0}})}Pt.adjoint=function(e,t){return Qe.adjoint(e.array,t.array),e._dirty=!0,e},Pt.copy=function(e,t){return Qe.copy(e.array,t.array),e._dirty=!0,e},Pt.determinant=function(e){return Qe.determinant(e.array)},Pt.identity=function(e){return Qe.identity(e.array),e._dirty=!0,e},Pt.ortho=function(e,t,r,i,n,a,o){return Qe.ortho(e.array,t,r,i,n,a,o),e._dirty=!0,e},Pt.perspective=function(e,t,r,i,n){return Qe.perspective(e.array,t,r,i,n),e._dirty=!0,e},Pt.lookAt=function(e,t,r,i){return Qe.lookAt(e.array,t.array,r.array,i.array),e._dirty=!0,e},Pt.invert=function(e,t){return Qe.invert(e.array,t.array),e._dirty=!0,e},Pt.mul=function(e,t,r){return Qe.mul(e.array,t.array,r.array),e._dirty=!0,e},Pt.multiply=Pt.mul,Pt.fromQuat=function(e,t){return Qe.fromQuat(e.array,t.array),e._dirty=!0,e},Pt.fromRotationTranslation=function(e,t,r){return Qe.fromRotationTranslation(e.array,t.array,r.array),e._dirty=!0,e},Pt.fromMat2d=function(e,t){e._dirty=!0;t=t.array,e=e.array;return e[0]=t[0],e[4]=t[2],e[12]=t[4],e[1]=t[1],e[5]=t[3],e[13]=t[5],e},Pt.rotate=function(e,t,r,i){return Qe.rotate(e.array,t.array,r,i.array),e._dirty=!0,e},Pt.rotateX=function(e,t,r){return Qe.rotateX(e.array,t.array,r),e._dirty=!0,e},Pt.rotateY=function(e,t,r){return Qe.rotateY(e.array,t.array,r),e._dirty=!0,e},Pt.rotateZ=function(e,t,r){return Qe.rotateZ(e.array,t.array,r),e._dirty=!0,e},Pt.scale=function(e,t,r){return Qe.scale(e.array,t.array,r.array),e._dirty=!0,e},Pt.transpose=function(e,t){return Qe.transpose(e.array,t.array),e._dirty=!0,e},Pt.translate=function(e,t,r){return Qe.translate(e.array,t.array,r.array),e._dirty=!0,e};var Dt=Pt,Rt=function(e,t,r,i){e=e||0,t=t||0,r=r||0,i=void 0===i?1:i,this.array=Ct.fromValues(e,t,r,i),this._dirty=!0};Rt.prototype={constructor:Rt,add:function(e){return Ct.add(this.array,this.array,e.array),this._dirty=!0,this},calculateW:function(){return Ct.calculateW(this.array,this.array),this._dirty=!0,this},set:function(e,t,r,i){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this.array[3]=i,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new Rt(this.x,this.y,this.z,this.w)},conjugate:function(){return Ct.conjugate(this.array,this.array),this._dirty=!0,this},copy:function(e){return Ct.copy(this.array,e.array),this._dirty=!0,this},dot:function(e){return Ct.dot(this.array,e.array)},fromMat3:function(e){return Ct.fromMat3(this.array,e.array),this._dirty=!0,this},fromMat4:function(){var e=At.create();return function(t){return At.fromMat4(e,t.array),At.transpose(e,e),Ct.fromMat3(this.array,e),this._dirty=!0,this}}(),identity:function(){return Ct.identity(this.array),this._dirty=!0,this},invert:function(){return Ct.invert(this.array,this.array),this._dirty=!0,this},len:function(){return Ct.len(this.array)},length:function(){return Ct.length(this.array)},lerp:function(e,t,r){return Ct.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},mul:function(e){return Ct.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Ct.multiply(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Ct.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Ct.multiply(this.array,e.array,this.array),this._dirty=!0,this},normalize:function(){return Ct.normalize(this.array,this.array),this._dirty=!0,this},rotateX:function(e){return Ct.rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return Ct.rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return Ct.rotateZ(this.array,this.array,e),this._dirty=!0,this},rotationTo:function(e,t){return Ct.rotationTo(this.array,e.array,t.array),this._dirty=!0,this},setAxes:function(e,t,r){return Ct.setAxes(this.array,e.array,t.array,r.array),this._dirty=!0,this},setAxisAngle:function(e,t){return Ct.setAxisAngle(this.array,e.array,t),this._dirty=!0,this},slerp:function(e,t,r){return Ct.slerp(this.array,e.array,t.array,r),this._dirty=!0,this},sqrLen:function(){return Ct.sqrLen(this.array)},squaredLength:function(){return Ct.squaredLength(this.array)},fromEuler:function(e,t){return Rt.fromEuler(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var It=Object.defineProperty;if(It){var Ft=Rt.prototype;It(Ft,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),It(Ft,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),It(Ft,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),It(Ft,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}Rt.add=function(e,t,r){return Ct.add(e.array,t.array,r.array),e._dirty=!0,e},Rt.set=function(e,t,r,i,n){Ct.set(e.array,t,r,i,n),e._dirty=!0},Rt.copy=function(e,t){return Ct.copy(e.array,t.array),e._dirty=!0,e},Rt.calculateW=function(e,t){return Ct.calculateW(e.array,t.array),e._dirty=!0,e},Rt.conjugate=function(e,t){return Ct.conjugate(e.array,t.array),e._dirty=!0,e},Rt.identity=function(e){return Ct.identity(e.array),e._dirty=!0,e},Rt.invert=function(e,t){return Ct.invert(e.array,t.array),e._dirty=!0,e},Rt.dot=function(e,t){return Ct.dot(e.array,t.array)},Rt.len=function(e){return Ct.length(e.array)},Rt.lerp=function(e,t,r,i){return Ct.lerp(e.array,t.array,r.array,i),e._dirty=!0,e},Rt.slerp=function(e,t,r,i){return Ct.slerp(e.array,t.array,r.array,i),e._dirty=!0,e},Rt.mul=function(e,t,r){return Ct.multiply(e.array,t.array,r.array),e._dirty=!0,e},Rt.multiply=Rt.mul,Rt.rotateX=function(e,t,r){return Ct.rotateX(e.array,t.array,r),e._dirty=!0,e},Rt.rotateY=function(e,t,r){return Ct.rotateY(e.array,t.array,r),e._dirty=!0,e},Rt.rotateZ=function(e,t,r){return Ct.rotateZ(e.array,t.array,r),e._dirty=!0,e},Rt.setAxisAngle=function(e,t,r){return Ct.setAxisAngle(e.array,t.array,r),e._dirty=!0,e},Rt.normalize=function(e,t){return Ct.normalize(e.array,t.array),e._dirty=!0,e},Rt.sqrLen=function(e){return Ct.sqrLen(e.array)},Rt.squaredLength=Rt.sqrLen,Rt.fromMat3=function(e,t){return Ct.fromMat3(e.array,t.array),e._dirty=!0,e},Rt.setAxes=function(e,t,r,i){return Ct.setAxes(e.array,t.array,r.array,i.array),e._dirty=!0,e},Rt.rotationTo=function(e,t,r){return Ct.rotationTo(e.array,t.array,r.array),e._dirty=!0,e},Rt.fromEuler=function(e,t,r){e._dirty=!0,t=t.array;var i=e.array,n=Math.cos(t[0]/2),a=Math.cos(t[1]/2),o=Math.cos(t[2]/2),s=Math.sin(t[0]/2),l=Math.sin(t[1]/2),u=Math.sin(t[2]/2);r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":i[0]=s*a*o+n*l*u,i[1]=n*l*o-s*a*u,i[2]=n*a*u+s*l*o,i[3]=n*a*o-s*l*u;break;case"YXZ":i[0]=s*a*o+n*l*u,i[1]=n*l*o-s*a*u,i[2]=n*a*u-s*l*o,i[3]=n*a*o+s*l*u;break;case"ZXY":i[0]=s*a*o-n*l*u,i[1]=n*l*o+s*a*u,i[2]=n*a*u+s*l*o,i[3]=n*a*o-s*l*u;break;case"ZYX":i[0]=s*a*o-n*l*u,i[1]=n*l*o+s*a*u,i[2]=n*a*u-s*l*o,i[3]=n*a*o+s*l*u;break;case"YZX":i[0]=s*a*o+n*l*u,i[1]=n*l*o+s*a*u,i[2]=n*a*u-s*l*o,i[3]=n*a*o-s*l*u;break;case"XZY":i[0]=s*a*o-n*l*u,i[1]=n*l*o-s*a*u,i[2]=n*a*u+s*l*o,i[3]=n*a*o+s*l*u;break}};var Bt=Rt,zt=$e.set,Ut=$e.copy,Gt=function(e,t){this.min=e||new xt(1/0,1/0,1/0),this.max=t||new xt(-1/0,-1/0,-1/0),this.vertices=null};Gt.prototype={constructor:Gt,updateFromVertices:function(e){if(e.length>0){var t=this.min,r=this.max,i=t.array,n=r.array;Ut(i,e[0]),Ut(n,e[0]);for(var a=1;a<e.length;a++){var o=e[a];o[0]<i[0]&&(i[0]=o[0]),o[1]<i[1]&&(i[1]=o[1]),o[2]<i[2]&&(i[2]=o[2]),o[0]>n[0]&&(n[0]=o[0]),o[1]>n[1]&&(n[1]=o[1]),o[2]>n[2]&&(n[2]=o[2])}t._dirty=!0,r._dirty=!0}},union:function(e){var t=this.min,r=this.max;return $e.min(t.array,t.array,e.min.array),$e.max(r.array,r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},intersection:function(e){var t=this.min,r=this.max;return $e.max(t.array,t.array,e.min.array),$e.min(r.array,r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},intersectBoundingBox:function(e){var t=this.min.array,r=this.max.array,i=e.min.array,n=e.max.array;return!(t[0]>n[0]||t[1]>n[1]||t[2]>n[2]||r[0]<i[0]||r[1]<i[1]||r[2]<i[2])},containBoundingBox:function(e){var t=this.min.array,r=this.max.array,i=e.min.array,n=e.max.array;return t[0]<=i[0]&&t[1]<=i[1]&&t[2]<=i[2]&&r[0]>=n[0]&&r[1]>=n[1]&&r[2]>=n[2]},containPoint:function(e){var t=this.min.array,r=this.max.array,i=e.array;return t[0]<=i[0]&&t[1]<=i[1]&&t[2]<=i[2]&&r[0]>=i[0]&&r[1]>=i[1]&&r[2]>=i[2]},isFinite:function(){var e=this.min.array,t=this.max.array;return isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])&&isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])},applyTransform:function(e){this.transformFrom(this,e)},transformFrom:function(){var e=$e.create(),t=$e.create(),r=$e.create(),i=$e.create(),n=$e.create(),a=$e.create();return function(o,s){var l=o.min.array,u=o.max.array,h=s.array;return e[0]=h[0]*l[0],e[1]=h[1]*l[0],e[2]=h[2]*l[0],t[0]=h[0]*u[0],t[1]=h[1]*u[0],t[2]=h[2]*u[0],r[0]=h[4]*l[1],r[1]=h[5]*l[1],r[2]=h[6]*l[1],i[0]=h[4]*u[1],i[1]=h[5]*u[1],i[2]=h[6]*u[1],n[0]=h[8]*l[2],n[1]=h[9]*l[2],n[2]=h[10]*l[2],a[0]=h[8]*u[2],a[1]=h[9]*u[2],a[2]=h[10]*u[2],l=this.min.array,u=this.max.array,l[0]=Math.min(e[0],t[0])+Math.min(r[0],i[0])+Math.min(n[0],a[0])+h[12],l[1]=Math.min(e[1],t[1])+Math.min(r[1],i[1])+Math.min(n[1],a[1])+h[13],l[2]=Math.min(e[2],t[2])+Math.min(r[2],i[2])+Math.min(n[2],a[2])+h[14],u[0]=Math.max(e[0],t[0])+Math.max(r[0],i[0])+Math.max(n[0],a[0])+h[12],u[1]=Math.max(e[1],t[1])+Math.max(r[1],i[1])+Math.max(n[1],a[1])+h[13],u[2]=Math.max(e[2],t[2])+Math.max(r[2],i[2])+Math.max(n[2],a[2])+h[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(e){var t=this.min.array,r=this.max.array,i=e.array,n=t[0],a=t[1],o=t[2],s=r[0],l=r[1],u=t[2],h=r[0],c=r[1],d=r[2];if(1===i[15])t[0]=i[0]*n+i[12],t[1]=i[5]*a+i[13],r[2]=i[10]*o+i[14],r[0]=i[0]*h+i[12],r[1]=i[5]*c+i[13],t[2]=i[10]*d+i[14];else{var f=-1/o;t[0]=i[0]*n*f,t[1]=i[5]*a*f,r[2]=(i[10]*o+i[14])*f,f=-1/u,r[0]=i[0]*s*f,r[1]=i[5]*l*f,f=-1/d,t[2]=(i[10]*d+i[14])*f}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var e=this.vertices;if(!e){e=[];for(var t=0;t<8;t++)e[t]=$e.fromValues(0,0,0);this.vertices=e}var r=this.min.array,i=this.max.array;return zt(e[0],r[0],r[1],r[2]),zt(e[1],r[0],i[1],r[2]),zt(e[2],i[0],r[1],r[2]),zt(e[3],i[0],i[1],r[2]),zt(e[4],r[0],r[1],i[2]),zt(e[5],r[0],i[1],i[2]),zt(e[6],i[0],r[1],i[2]),zt(e[7],i[0],i[1],i[2]),this},copy:function(e){var t=this.min,r=this.max;return Ut(t.array,e.min.array),Ut(r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},clone:function(){var e=new Gt;return e.copy(this),e}};var kt=Gt,Ht=0,Vt=S.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},(function(){this.name||(this.name=(this.type||"NODE")+"_"+Ht++),this.position||(this.position=new xt),this.rotation||(this.rotation=new Bt),this.scale||(this.scale=new xt(1,1,1)),this.worldTransform=new Dt,this.localTransform=new Dt,this._children=[]}),{target:null,invisible:!1,isSkinnedMesh:function(){return!1},isRenderable:function(){return!1},setName:function(e){var t=this._scene;if(t){var r=t._nodeRepository;delete r[this.name],r[e]=this}this.name=e},add:function(e){var t=e._parent;if(t!==this){t&&t.remove(e),e._parent=this,this._children.push(e);var r=this._scene;r&&r!==e.scene&&e.traverse(this._addSelfToScene,this),e._needsUpdateWorldTransform=!0}},remove:function(e){var t=this._children,r=t.indexOf(e);r<0||(t.splice(r,1),e._parent=null,this._scene&&e.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var e=this._children,t=0;t<e.length;t++)e[t]._parent=null,this._scene&&e[t].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(e){e._scene.removeFromScene(e),e._scene=null},_addSelfToScene:function(e){this._scene.addToScene(e),e._scene=this._scene},isAncestor:function(e){var t=e._parent;while(t){if(t===this)return!0;t=t._parent}return!1},children:function(){return this._children.slice()},childAt:function(e){return this._children[e]},getChildByName:function(e){for(var t=this._children,r=0;r<t.length;r++)if(t[r].name===e)return t[r]},getDescendantByName:function(e){for(var t=this._children,r=0;r<t.length;r++){var i=t[r];if(i.name===e)return i;var n=i.getDescendantByName(e);if(n)return n}},queryNode:function(e){if(e){for(var t=e.split("/"),r=this,i=0;i<t.length;i++){var n=t[i];if(n){for(var a=!1,o=r._children,s=0;s<o.length;s++){var l=o[s];if(l.name===n){r=l,a=!0;break}}if(!a)return}}return r}},getPath:function(e){if(!this._parent)return"/";var t=this._parent,r=this.name;while(t._parent){if(r=t.name+"/"+r,t._parent==e)break;t=t._parent}return!t._parent&&e?null:r},traverse:function(e,t){e.call(t,this);for(var r=this._children,i=0,n=r.length;i<n;i++)r[i].traverse(e,t)},eachChild:function(e,t){for(var r=this._children,i=0,n=r.length;i<n;i++){var a=r[i];e.call(t,a,i)}},setLocalTransform:function(e){Qe.copy(this.localTransform.array,e.array),this.decomposeLocalTransform()},decomposeLocalTransform:function(e){var t=e?null:this.scale;this.localTransform.decomposeMatrix(t,this.rotation,this.position)},setWorldTransform:function(e){Qe.copy(this.worldTransform.array,e.array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var e=Qe.create();return function(t){var r=this.localTransform,i=this.worldTransform;this._parent?(Qe.invert(e,this._parent.worldTransform.array),Qe.multiply(r.array,e,i.array)):Qe.copy(r.array,i.array);var n=t?null:this.scale;r.decomposeMatrix(n,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var e=this.position,t=this.rotation,r=this.scale;if(this.transformNeedsUpdate()){var i=this.localTransform.array;Qe.fromRotationTranslation(i,t.array,e.array),Qe.scale(i,i,r.array),t._dirty=!1,r._dirty=!1,e._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var e=this.localTransform.array,t=this.worldTransform.array;this._parent?Qe.multiplyAffine(t,this._parent.worldTransform.array,e):Qe.copy(t,e)},updateWorldTransform:function(){var e=this;while(e&&e.getParent()&&e.getParent().transformNeedsUpdate())e=e.getParent();e.update()},update:function(e){this.autoUpdateLocalTransform?this.updateLocalTransform():e=!0,(e||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),e=!0,this._needsUpdateWorldTransform=!1);for(var t=this._children,r=0,i=t.length;r<i;r++)t[r].update(e)},getBoundingBox:function(){function e(e){return!e.invisible&&e.geometry}var t=new kt,r=new Dt,i=new Dt;return function(n,a){return a=a||new kt,n=n||e,this._parent?Dt.invert(i,this._parent.worldTransform):Dt.identity(i),this.traverse((function(e){e.geometry&&e.geometry.boundingBox&&(t.copy(e.geometry.boundingBox),Dt.multiply(r,i,e.worldTransform),t.applyTransform(r),a.union(t))}),this,e),a}}(),getWorldPosition:function(e){this.transformNeedsUpdate()&&this.updateWorldTransform();var t=this.worldTransform.array;if(e){var r=e.array;return r[0]=t[12],r[1]=t[13],r[2]=t[14],e}return new xt(t[12],t[13],t[14])},clone:function(){var e=new this.constructor,t=this._children;e.setName(this.name),e.position.copy(this.position),e.rotation.copy(this.rotation),e.scale.copy(this.scale);for(var r=0;r<t.length;r++)e.add(t[r].clone());return e},rotateAround:function(){var e=new xt,t=new Dt;return function(r,i,n){e.copy(this.position).subtract(r);var a=this.localTransform;a.identity(),a.translate(r),a.rotate(n,i),t.fromRotationTranslation(this.rotation,e),a.multiply(t),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var e=new Dt;return function(t,r){e.lookAt(this.position,t,r||this.localTransform.y).invert(),this.setLocalTransform(e),this.target=t}}()}),Wt=Vt,jt=Wt.extend({material:null,geometry:null,mode:P.TRIANGLES,_renderInfo:null},{__program:null,lightGroup:0,renderOrder:0,culling:!0,cullFace:P.BACK,frontFace:P.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,ignorePreZ:!1,ignoreGBuffer:!1,isRenderable:function(){return this.geometry&&this.material&&this.material.shader&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(e){},afterRender:function(e,t){},getBoundingBox:function(e,t){return t=Wt.prototype.getBoundingBox.call(this,e,t),this.geometry&&this.geometry.boundingBox&&t.union(this.geometry.boundingBox),t},clone:function(){var e=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling","renderOrder","lineWidth","ignorePicking","ignorePreZ","ignoreGBuffer"];return function(){var t=Wt.prototype.clone.call(this);t.geometry=this.geometry,t.material=this.material;for(var r=0;r<e.length;r++){var i=e[r];t[i]!==this[i]&&(t[i]=this[i])}return t}}()});jt.POINTS=P.POINTS,jt.LINES=P.LINES,jt.LINE_LOOP=P.LINE_LOOP,jt.LINE_STRIP=P.LINE_STRIP,jt.TRIANGLES=P.TRIANGLES,jt.TRIANGLE_STRIP=P.TRIANGLE_STRIP,jt.TRIANGLE_FAN=P.TRIANGLE_FAN,jt.BACK=P.BACK,jt.FRONT=P.FRONT,jt.FRONT_AND_BACK=P.FRONT_AND_BACK,jt.CW=P.CW,jt.CCW=P.CCW;var Xt=jt,qt=S.extend({scene:null,camera:null,renderer:null},(function(){this._ray=new wt,this._ndc=new de}),{pick:function(e,t,r){var i=this.pickAll(e,t,[],r);return i[0]||null},pickAll:function(e,t,r,i){return this.renderer.screenToNDC(e,t,this._ndc),this.camera.castRay(this._ndc,this._ray),r=r||[],this._intersectNode(this.scene,r,i||!1),r.sort(this._intersectionCompareFunc),r},_intersectNode:function(e,t,r){e instanceof Xt&&e.isRenderable()&&(e.ignorePicking&&!r||!(e.mode===P.TRIANGLES&&e.geometry.isUseIndices()||e.geometry.pickByRay||e.geometry.pick)||this._intersectRenderable(e,t));for(var i=0;i<e._children.length;i++)this._intersectNode(e._children[i],t,r)},_intersectRenderable:function(){var e=new xt,t=new xt,r=new xt,i=new wt,n=new Dt;return function(a,o){var s=a.isSkinnedMesh();i.copy(this._ray),Dt.invert(n,a.worldTransform),s||i.applyTransform(n);var l=a.geometry,u=s?a.skeleton.boundingBox:l.boundingBox;if(!u||i.intersectBoundingBox(u))if(l.pick)l.pick(this._ndc.x,this._ndc.y,this.renderer,this.camera,a,o);else if(l.pickByRay)l.pickByRay(i,a,o);else{var h,c,d=a.cullFace===P.BACK&&a.frontFace===P.CCW||a.cullFace===P.FRONT&&a.frontFace===P.CW,f=l.indices,p=l.attributes.position,m=l.attributes.weight,g=l.attributes.joint,_=[];if(p&&p.value&&f){if(s){c=a.skeleton.getSubSkinMatrices(a.__uid__,a.joints);for(var v=0;v<a.joints.length;v++){_[v]=_[v]||[];for(var y=0;y<16;y++)_[v][y]=c[16*v+y]}var x=[],T=[],b=[],w=[],E=[],S=l.attributes.skinnedPosition;S&&S.value||(l.createAttribute("skinnedPosition","f",3),S=l.attributes.skinnedPosition,S.init(l.vertexCount));for(v=0;v<l.vertexCount;v++){p.get(v,x),m.get(v,T),g.get(v,b),T[3]=1-T[0]-T[1]-T[2],$e.set(w,0,0,0);for(y=0;y<4;y++)b[y]>=0&&T[y]>1e-4&&($e.transformMat4(E,x,_[b[y]]),$e.scaleAndAdd(w,w,E,T[y]));S.set(v,w)}}for(v=0;v<f.length;v+=3){var M=f[v],A=f[v+1],N=f[v+2],C=s?l.attributes.skinnedPosition:p;if(C.get(M,e.array),C.get(A,t.array),C.get(N,r.array),h=d?i.intersectTriangle(e,t,r,a.culling):i.intersectTriangle(e,r,t,a.culling),h){var L=new xt;s?xt.copy(L,h):xt.transformMat4(L,h,a.worldTransform),o.push(new qt.Intersection(h,L,a,[M,A,N],v/3,xt.dist(L,this._ray.origin)))}}}}}}(),_intersectionCompareFunc:function(e,t){return e.distance-t.distance}});qt.Intersection=function(e,t,r,i,n,a){this.point=e,this.pointWorld=t,this.target=r,this.triangle=i,this.triangleIndex=n,this.distance=a};var Yt=qt,Zt="__dt__",Kt=function(){this._contextId=0,this._caches=[],this._context={}};Kt.prototype={use:function(e,t){var r=this._caches;r[e]||(r[e]={},t&&(r[e]=t())),this._contextId=e,this._context=r[e]},put:function(e,t){this._context[e]=t},get:function(e){return this._context[e]},dirty:function(e){e=e||"";var t=Zt+e;this.put(t,!0)},dirtyAll:function(e){e=e||"";for(var t=Zt+e,r=this._caches,i=0;i<r.length;i++)r[i]&&(r[i][t]=!0)},fresh:function(e){e=e||"";var t=Zt+e;this.put(t,!1)},freshAll:function(e){e=e||"";for(var t=Zt+e,r=this._caches,i=0;i<r.length;i++)r[i]&&(r[i][t]=!1)},isDirty:function(e){e=e||"";var t=Zt+e,r=this._context;return!r.hasOwnProperty(t)||!0===r[t]},deleteContext:function(e){delete this._caches[e],this._context={}},delete:function(e){delete this._context[e]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(e,t){var r=Object.keys(this._caches);r.forEach((function(r){e&&e.call(t,r)}))},miss:function(e){return!this._context.hasOwnProperty(e)}},Kt.prototype.constructor=Kt;var Qt=Kt,Jt=S.extend({width:512,height:512,type:P.UNSIGNED_BYTE,format:P.RGBA,wrapS:P.REPEAT,wrapT:P.REPEAT,minFilter:P.LINEAR_MIPMAP_LINEAR,magFilter:P.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,sRGB:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1,__used:0},(function(){this._cache=new Qt}),{getWebGLTexture:function(e){var t=e.gl,r=this._cache;return r.use(e.__uid__),r.miss("webgl_texture")&&r.put("webgl_texture",t.createTexture()),this.dynamic?this.update(e):r.isDirty()&&(this.update(e),r.fresh()),r.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(e){},updateCommon:function(e){var t=e.gl;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this.format===P.DEPTH_COMPONENT&&(this.useMipmap=!1);var r=e.getGLExtension("EXT_sRGB");this.format!==Jt.SRGB||r||(this.format=Jt.RGB),this.format!==Jt.SRGB_ALPHA||r||(this.format=Jt.RGBA),this.NPOT=!this.isPowerOfTwo()},getAvailableWrapS:function(){return this.NPOT?P.CLAMP_TO_EDGE:this.wrapS},getAvailableWrapT:function(){return this.NPOT?P.CLAMP_TO_EDGE:this.wrapT},getAvailableMinFilter:function(){var e=this.minFilter;return this.NPOT||!this.useMipmap?e===P.NEAREST_MIPMAP_NEAREST||e===P.NEAREST_MIPMAP_LINEAR?P.NEAREST:e===P.LINEAR_MIPMAP_LINEAR||e===P.LINEAR_MIPMAP_NEAREST?P.LINEAR:e:e},getAvailableMagFilter:function(){return this.magFilter},nextHighestPowerOfTwo:function(e){--e;for(var t=1;t<32;t<<=1)e|=e>>t;return e+1},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("webgl_texture");r&&e.gl.deleteTexture(r),t.deleteContext(e.__uid__)},isRenderable:function(){},isPowerOfTwo:function(){}});Object.defineProperty(Jt.prototype,"width",{get:function(){return this._width},set:function(e){this._width=e}}),Object.defineProperty(Jt.prototype,"height",{get:function(){return this._height},set:function(e){this._height=e}}),Jt.BYTE=P.BYTE,Jt.UNSIGNED_BYTE=P.UNSIGNED_BYTE,Jt.SHORT=P.SHORT,Jt.UNSIGNED_SHORT=P.UNSIGNED_SHORT,Jt.INT=P.INT,Jt.UNSIGNED_INT=P.UNSIGNED_INT,Jt.FLOAT=P.FLOAT,Jt.HALF_FLOAT=36193,Jt.UNSIGNED_INT_24_8_WEBGL=34042,Jt.DEPTH_COMPONENT=P.DEPTH_COMPONENT,Jt.DEPTH_STENCIL=P.DEPTH_STENCIL,Jt.ALPHA=P.ALPHA,Jt.RGB=P.RGB,Jt.RGBA=P.RGBA,Jt.LUMINANCE=P.LUMINANCE,Jt.LUMINANCE_ALPHA=P.LUMINANCE_ALPHA,Jt.SRGB=35904,Jt.SRGB_ALPHA=35906,Jt.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,Jt.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,Jt.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,Jt.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,Jt.NEAREST=P.NEAREST,Jt.LINEAR=P.LINEAR,Jt.NEAREST_MIPMAP_NEAREST=P.NEAREST_MIPMAP_NEAREST,Jt.LINEAR_MIPMAP_NEAREST=P.LINEAR_MIPMAP_NEAREST,Jt.NEAREST_MIPMAP_LINEAR=P.NEAREST_MIPMAP_LINEAR,Jt.LINEAR_MIPMAP_LINEAR=P.LINEAR_MIPMAP_LINEAR,Jt.REPEAT=P.REPEAT,Jt.CLAMP_TO_EDGE=P.CLAMP_TO_EDGE,Jt.MIRRORED_REPEAT=P.MIRRORED_REPEAT;var $t=Jt,er=Xt.extend({skeleton:null,joints:null},(function(){this.joints||(this.joints=[])}),{offsetMatrix:null,isInstancedMesh:function(){return!1},isSkinnedMesh:function(){return!!(this.skeleton&&this.joints&&this.joints.length>0)},clone:function(){var e=Xt.prototype.clone.call(this);return e.skeleton=this.skeleton,this.joints&&(e.joints=this.joints.slice()),e}});er.POINTS=P.POINTS,er.LINES=P.LINES,er.LINE_LOOP=P.LINE_LOOP,er.LINE_STRIP=P.LINE_STRIP,er.TRIANGLES=P.TRIANGLES,er.TRIANGLE_STRIP=P.TRIANGLE_STRIP,er.TRIANGLE_FAN=P.TRIANGLE_FAN,er.BACK=P.BACK,er.FRONT=P.FRONT,er.FRONT_AND_BACK=P.FRONT_AND_BACK,er.CW=P.CW,er.CCW=P.CCW;var tr=er,rr={isPowerOfTwo:function(e){return 0===(e&e-1)},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}},ir=rr,nr=ir.isPowerOfTwo;function ar(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function or(e,t){var r=ar(e.width),i=ar(e.height);t=t||document.createElement("canvas"),t.width=r,t.height=i;var n=t.getContext("2d");return n.drawImage(e.image,0,0,r,i),t}var sr=$t.extend((function(){return{image:null,pixels:null,mipmaps:[],convertToPOT:!1}}),{textureType:"texture2D",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,i=this.type,n=!(!this.convertToPOT||this.mipmaps.length||!this.image||this.wrapS!==$t.REPEAT&&this.wrapT!==$t.REPEAT||!this.NPOT);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,n?this.wrapS:this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,n?this.wrapT:this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,n?this.magFilter:this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,n?this.minFilter:this.getAvailableMinFilter());var a=e.getGLExtension("EXT_texture_filter_anisotropic");if(a&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,a.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===i){var o=e.getGLExtension("OES_texture_half_float");o||(i=P.FLOAT)}if(this.mipmaps.length)for(var s=this.width,l=this.height,u=0;u<this.mipmaps.length;u++){var h=this.mipmaps[u];this._updateTextureData(t,h,u,s,l,r,i,!1),s/=2,l/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,i,n),!this.useMipmap||this.NPOT&&!n||t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(e,t,r,i,n,a,o,s){if(t.image){var l=t.image;s&&(this._potCanvas=or(this,this._potCanvas),l=this._potCanvas),e.texImage2D(e.TEXTURE_2D,r,a,a,o,l)}else a<=$t.COMPRESSED_RGBA_S3TC_DXT5_EXT&&a>=$t.COMPRESSED_RGB_S3TC_DXT1_EXT?e.compressedTexImage2D(e.TEXTURE_2D,r,a,i,n,0,t.pixels):e.texImage2D(e.TEXTURE_2D,r,a,i,n,0,a,o,t.pixels)},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){return nr(this.width)&&nr(this.height)},isRenderable:function(){return this.image?this.image.width>0&&this.image.height>0:!(!this.width||!this.height)},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},load:function(e,t){var r=L["a"].createImage();t&&(r.crossOrigin=t);var i=this;return r.onload=function(){i.dirty(),i.trigger("success",i)},r.onerror=function(){i.trigger("error",i)},r.src=e,this.image=r,this}});Object.defineProperty(sr.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(e){this.image?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(sr.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(e){this.image?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});var lr=sr;function ur(e){return{byte:L["a"].Int8Array,ubyte:L["a"].Uint8Array,short:L["a"].Int16Array,ushort:L["a"].Uint16Array}[e]||L["a"].Float32Array}function hr(e){return"attr_"+e}function cr(e,t,r,i){switch(this.name=e,this.type=t,this.size=r,this.semantic=i||"",this.value=null,r){case 1:this.get=function(e){return this.value[e]},this.set=function(e,t){this.value[e]=t},this.copy=function(e,t){this.value[e]=this.value[e]};break;case 2:this.get=function(e,t){var r=this.value;return t[0]=r[2*e],t[1]=r[2*e+1],t},this.set=function(e,t){var r=this.value;r[2*e]=t[0],r[2*e+1]=t[1]},this.copy=function(e,t){var r=this.value;t*=2,e*=2,r[e]=r[t],r[e+1]=r[t+1]};break;case 3:this.get=function(e,t){var r=3*e,i=this.value;return t[0]=i[r],t[1]=i[r+1],t[2]=i[r+2],t},this.set=function(e,t){var r=3*e,i=this.value;i[r]=t[0],i[r+1]=t[1],i[r+2]=t[2]},this.copy=function(e,t){var r=this.value;t*=3,e*=3,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2]};break;case 4:this.get=function(e,t){var r=this.value,i=4*e;return t[0]=r[i],t[1]=r[i+1],t[2]=r[i+2],t[3]=r[i+3],t},this.set=function(e,t){var r=this.value,i=4*e;r[i]=t[0],r[i+1]=t[1],r[i+2]=t[2],r[i+3]=t[3]},this.copy=function(e,t){var r=this.value;t*=4,e*=4,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2],r[e+3]=r[t+3]}}}function dr(e,t,r,i,n){this.name=e,this.type=t,this.buffer=r,this.size=i,this.semantic=n,this.symbol="",this.needsRemove=!1}function fr(e){this.buffer=e,this.count=0}cr.prototype.init=function(e){if(!this.value||this.value.length!==e*this.size){var t=ur(this.type);this.value=new t(e*this.size)}},cr.prototype.fromArray=function(e){var t,r=ur(this.type);if(e[0]&&e[0].length){var i=0,n=this.size;t=new r(e.length*n);for(var a=0;a<e.length;a++)for(var o=0;o<n;o++)t[i++]=e[a][o]}else t=new r(e);this.value=t},cr.prototype.clone=function(e){var t=new cr(this.name,this.type,this.size,this.semantic);return e&&console.warn("todo"),t};var pr=S.extend((function(){return{attributes:{},indices:null,dynamic:!0,_enabledAttributes:null,__used:0}}),(function(){this._cache=new Qt,this._attributeList=Object.keys(this.attributes),this.__vaoCache={}}),{mainAttribute:"",pick:null,pickByRay:null,dirty:function(){for(var e=this.getEnabledAttributes(),t=0;t<e.length;t++)this.dirtyAttribute(e[t]);this.dirtyIndices(),this._enabledAttributes=null,this._cache.dirty("any")},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(e){this._cache.dirtyAll(hr(e)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(e,t){if(e<this.triangleCount&&e>=0){t||(t=[]);var r=this.indices;return t[0]=r[3*e],t[1]=r[3*e+1],t[2]=r[3*e+2],t}},setTriangleIndices:function(e,t){var r=this.indices;r[3*e]=t[0],r[3*e+1]=t[1],r[3*e+2]=t[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(e){var t,r=this.vertexCount>65535?L["a"].Uint32Array:L["a"].Uint16Array;if(e[0]&&e[0].length){var i=0,n=3;t=new r(e.length*n);for(var a=0;a<e.length;a++)for(var o=0;o<n;o++)t[i++]=e[a][o]}else t=new r(e);this.indices=t},createAttribute:function(e,t,r,i){var n=new cr(e,t,r,i);return this.attributes[e]&&this.removeAttribute(e),this.attributes[e]=n,this._attributeList.push(e),n},removeAttribute:function(e){var t=this._attributeList,r=t.indexOf(e);return r>=0&&(t.splice(r,1),delete this.attributes[e],!0)},getAttribute:function(e){return this.attributes[e]},getEnabledAttributes:function(){var e=this._enabledAttributes,t=this._attributeList;if(e)return e;for(var r=[],i=this.vertexCount,n=0;n<t.length;n++){var a=t[n],o=this.attributes[a];o.value&&o.value.length===i*o.size&&r.push(a)}return this._enabledAttributes=r,r},getBufferChunks:function(e){var t=this._cache;t.use(e.__uid__);var r=t.isDirty("attributes"),i=t.isDirty("indices");if(r||i){this._updateBuffer(e.gl,r,i);for(var n=this.getEnabledAttributes(),a=0;a<n.length;a++)t.fresh(hr(n[a]));t.fresh("attributes"),t.fresh("indices")}return t.fresh("any"),t.get("chunks")},_updateBuffer:function(e,t,r){var i=this._cache,n=i.get("chunks"),a=!1;n||(n=[],n[0]={attributeBuffers:[],indicesBuffer:null},i.put("chunks",n),a=!0);var o=n[0],s=o.attributeBuffers,l=o.indicesBuffer;if(t||a){var u=this.getEnabledAttributes(),h={};if(!a)for(var c=0;c<s.length;c++)h[s[c].name]=s[c];for(var d=0;d<u.length;d++){var f,p,m=u[d],g=this.attributes[m];a||(f=h[m]),p=f?f.buffer:e.createBuffer(),i.isDirty(hr(m))&&(e.bindBuffer(e.ARRAY_BUFFER,p),e.bufferData(e.ARRAY_BUFFER,g.value,this.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW)),s[d]=new dr(m,g.type,p,g.size,g.semantic)}for(c=d;c<s.length;c++)e.deleteBuffer(s[c].buffer);s.length=d}this.isUseIndices()&&(r||a)&&(l||(l=new fr(e.createBuffer()),o.indicesBuffer=l),l.count=this.indices.length,e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l.buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.indices,this.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW))},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("chunks");if(r)for(var i=0;i<r.length;i++){for(var n=r[i],a=0;a<n.attributeBuffers.length;a++){var o=n.attributeBuffers[a];e.gl.deleteBuffer(o.buffer)}n.indicesBuffer&&e.gl.deleteBuffer(n.indicesBuffer.buffer)}if(this.__vaoCache){var s=e.getGLExtension("OES_vertex_array_object");for(var l in this.__vaoCache){var u=this.__vaoCache[l].vao;u&&s.deleteVertexArrayOES(u)}}this.__vaoCache={},t.deleteContext(e.__uid__)}});Object.defineProperty&&(Object.defineProperty(pr.prototype,"vertexCount",{enumerable:!1,get:function(){var e=this.attributes[this.mainAttribute];return e||(e=this.attributes[this._attributeList[0]]),e&&e.value?e.value.length/e.size:0}}),Object.defineProperty(pr.prototype,"triangleCount",{enumerable:!1,get:function(){var e=this.indices;return e?e.length/3:0}})),pr.STATIC_DRAW=P.STATIC_DRAW,pr.DYNAMIC_DRAW=P.DYNAMIC_DRAW,pr.STREAM_DRAW=P.STREAM_DRAW,pr.AttributeBuffer=dr,pr.IndicesBuffer=fr,pr.Attribute=cr;var mr=pr,gr=$e.create,_r=$e.add,vr=$e.set,yr=mr.Attribute,xr=mr.extend((function(){return{attributes:{position:new yr("position","float",3,"POSITION"),texcoord0:new yr("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new yr("texcoord1","float",2,"TEXCOORD_1"),normal:new yr("normal","float",3,"NORMAL"),tangent:new yr("tangent","float",4,"TANGENT"),color:new yr("color","float",4,"COLOR"),weight:new yr("weight","float",3,"WEIGHT"),joint:new yr("joint","float",4,"JOINT"),barycentric:new yr("barycentric","float",3,null)},boundingBox:null}}),{mainAttribute:"position",updateBoundingBox:function(){var e=this.boundingBox;e||(e=this.boundingBox=new kt);var t=this.attributes.position.value;if(t&&t.length){var r=e.min,i=e.max,n=r.array,a=i.array;$e.set(n,t[0],t[1],t[2]),$e.set(a,t[0],t[1],t[2]);for(var o=3;o<t.length;){var s=t[o++],l=t[o++],u=t[o++];s<n[0]&&(n[0]=s),l<n[1]&&(n[1]=l),u<n[2]&&(n[2]=u),s>a[0]&&(a[0]=s),l>a[1]&&(a[1]=l),u>a[2]&&(a[2]=u)}r._dirty=!0,i._dirty=!0}},generateVertexNormals:function(){if(this.vertexCount){var e=this.indices,t=this.attributes,r=t.position.value,i=t.normal.value;if(i&&i.length===r.length)for(var n=0;n<i.length;n++)i[n]=0;else i=t.normal.value=new L["a"].Float32Array(r.length);for(var a,o,s,l=gr(),u=gr(),h=gr(),c=gr(),d=gr(),f=gr(),p=e?e.length:this.vertexCount,m=0;m<p;){e?(a=e[m++],o=e[m++],s=e[m++]):(a=m++,o=m++,s=m++),vr(l,r[3*a],r[3*a+1],r[3*a+2]),vr(u,r[3*o],r[3*o+1],r[3*o+2]),vr(h,r[3*s],r[3*s+1],r[3*s+2]),$e.sub(c,l,u),$e.sub(d,u,h),$e.cross(f,c,d);for(n=0;n<3;n++)i[3*a+n]=i[3*a+n]+f[n],i[3*o+n]=i[3*o+n]+f[n],i[3*s+n]=i[3*s+n]+f[n]}for(n=0;n<i.length;)vr(f,i[n],i[n+1],i[n+2]),$e.normalize(f,f),i[n++]=f[0],i[n++]=f[1],i[n++]=f[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.indices,t=this.attributes,r=t.position.value,i=t.normal.value,n=gr(),a=gr(),o=gr(),s=gr(),l=gr(),u=gr();i||(i=t.normal.value=new Float32Array(r.length));for(var h,c,d,f=e?e.length:this.vertexCount,p=0;p<f;){e?(h=e[p++],c=e[p++],d=e[p++]):(h=p++,c=p++,d=p++),vr(n,r[3*h],r[3*h+1],r[3*h+2]),vr(a,r[3*c],r[3*c+1],r[3*c+2]),vr(o,r[3*d],r[3*d+1],r[3*d+2]),$e.sub(s,n,a),$e.sub(l,a,o),$e.cross(u,s,l),$e.normalize(u,u);for(var m=0;m<3;m++)i[3*h+m]=u[m],i[3*c+m]=u[m],i[3*d+m]=u[m]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var e=this.vertexCount,t=this.attributes;t.tangent.value||(t.tangent.value=new Float32Array(4*e));var r=t.texcoord0.value,i=t.position.value,n=t.tangent.value,a=t.normal.value;if(r){for(var o=[],s=[],l=0;l<e;l++)o[l]=[0,0,0],s[l]=[0,0,0];var u,h,c,d=[0,0,0],f=[0,0,0],p=this.indices,m=p?p.length:this.vertexCount;for(l=0;l<m;){p?(u=p[l++],h=p[l++],c=p[l++]):(u=l++,h=l++,c=l++);var g=r[2*u],_=r[2*h],v=r[2*c],y=r[2*u+1],x=r[2*h+1],T=r[2*c+1],b=i[3*u],w=i[3*h],E=i[3*c],S=i[3*u+1],M=i[3*h+1],A=i[3*c+1],N=i[3*u+2],C=i[3*h+2],P=i[3*c+2],L=w-b,O=E-b,D=M-S,R=A-S,I=C-N,F=P-N,B=_-g,z=v-g,U=x-y,G=T-y,k=1/(B*G-U*z);d[0]=(G*L-U*O)*k,d[1]=(G*D-U*R)*k,d[2]=(G*I-U*F)*k,f[0]=(B*O-z*L)*k,f[1]=(B*R-z*D)*k,f[2]=(B*F-z*I)*k,_r(o[u],o[u],d),_r(o[h],o[h],d),_r(o[c],o[c],d),_r(s[u],s[u],f),_r(s[h],s[h],f),_r(s[c],s[c],f)}var H=gr(),V=gr(),W=gr();for(l=0;l<e;l++){W[0]=a[3*l],W[1]=a[3*l+1],W[2]=a[3*l+2];var j=o[l];$e.scale(H,W,$e.dot(W,j)),$e.sub(H,j,H),$e.normalize(H,H),$e.cross(V,W,j),n[4*l]=H[0],n[4*l+1]=H[1],n[4*l+2]=H[2],n[4*l+3]=$e.dot(V,s[l])<0?-1:1}this.dirty()}else console.warn("Geometry without texcoords can't generate tangents.")}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount&&this.indices){this.indices.length>65535&&(this.indices=new L["a"].Uint32Array(this.indices));for(var e=this.attributes,t=this.indices,r=this.getEnabledAttributes(),i={},n=0;n<r.length;n++){var a=r[n];i[a]=e[a].value,e[a].init(this.indices.length)}for(var o=0,s=0;s<t.length;s++){var l=t[s];for(n=0;n<r.length;n++){a=r[n];for(var u=e[a].value,h=e[a].size,c=0;c<h;c++)u[o*h+c]=i[a][l*h+c]}t[s]=o,o++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.attributes,t=e.barycentric.value,r=this.indices;if(!t||t.length!==3*r.length){t=e.barycentric.value=new Float32Array(3*r.length);for(var i=0;i<(r?r.length:this.vertexCount/3);)for(var n=0;n<3;n++){var a=r?r[i++]:3*i+n;t[3*a+n]=1}this.dirty()}}},applyTransform:function(e){var t=this.attributes,r=t.position.value,i=t.normal.value,n=t.tangent.value;e=e.array;var a=Qe.create();Qe.invert(a,e),Qe.transpose(a,a);var o=$e.transformMat4,s=$e.forEach;s(r,3,0,null,o,e),i&&s(i,3,0,null,o,a),n&&s(n,4,0,null,o,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("chunks");if(r)for(var i=0;i<r.length;i++){for(var n=r[i],a=0;a<n.attributeBuffers.length;a++){var o=n.attributeBuffers[a];e.gl.deleteBuffer(o.buffer)}n.indicesBuffer&&e.gl.deleteBuffer(n.indicesBuffer.buffer)}if(this.__vaoCache){var s=e.getGLExtension("OES_vertex_array_object");for(var l in this.__vaoCache){var u=this.__vaoCache[l].vao;u&&s.deleteVertexArrayOES(u)}}this.__vaoCache={},t.deleteContext(e.__uid__)}});xr.STATIC_DRAW=mr.STATIC_DRAW,xr.DYNAMIC_DRAW=mr.DYNAMIC_DRAW,xr.STREAM_DRAW=mr.STREAM_DRAW,xr.AttributeBuffer=mr.AttributeBuffer,xr.IndicesBuffer=mr.IndicesBuffer,xr.Attribute=yr;var Tr=xr,br="vec3 calcAmbientSHLight(int idx, vec3 N) {\n int offset = 9 * idx;\n return ambientSHLightCoefficients[0]\n + ambientSHLightCoefficients[1] * N.x\n + ambientSHLightCoefficients[2] * N.y\n + ambientSHLightCoefficients[3] * N.z\n + ambientSHLightCoefficients[4] * N.x * N.z\n + ambientSHLightCoefficients[5] * N.z * N.y\n + ambientSHLightCoefficients[6] * N.y * N.x\n + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}",wr="uniform vec3 ",Er="uniform float ",Sr="@export clay.header.",Mr="@end",Ar=":unconfigurable;",Nr=[Sr+"directional_light",wr+"directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+Ar,wr+"directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+Ar,Mr,Sr+"ambient_light",wr+"ambientLightColor[AMBIENT_LIGHT_COUNT]"+Ar,Mr,Sr+"ambient_sh_light",wr+"ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+Ar,wr+"ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+Ar,br,Mr,Sr+"ambient_cubemap_light",wr+"ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Ar,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Ar,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Ar,Mr,Sr+"point_light",wr+"pointLightPosition[POINT_LIGHT_COUNT]"+Ar,Er+"pointLightRange[POINT_LIGHT_COUNT]"+Ar,wr+"pointLightColor[POINT_LIGHT_COUNT]"+Ar,Mr,Sr+"spot_light",wr+"spotLightPosition[SPOT_LIGHT_COUNT]"+Ar,wr+"spotLightDirection[SPOT_LIGHT_COUNT]"+Ar,Er+"spotLightRange[SPOT_LIGHT_COUNT]"+Ar,Er+"spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+Ar,Er+"spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+Ar,Er+"spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+Ar,wr+"spotLightColor[SPOT_LIGHT_COUNT]"+Ar,Mr].join("\n");Ye["import"](Nr);var Cr=Wt.extend((function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}}),{type:"",clone:function(){var e=Wt.prototype.clone.call(this);return e.color=Array.prototype.slice.call(this.color),e.intensity=this.intensity,e.castShadow=this.castShadow,e.shadowResolution=this.shadowResolution,e}}),Pr=Cr,Lr=function(e,t){this.normal=e||new xt(0,1,0),this.distance=t||0};Lr.prototype={constructor:Lr,distanceToPoint:function(e){return $e.dot(e.array,this.normal.array)-this.distance},projectPoint:function(e,t){t||(t=new xt);var r=this.distanceToPoint(e);return $e.scaleAndAdd(t.array,e.array,this.normal.array,-r),t._dirty=!0,t},normalize:function(){var e=1/$e.len(this.normal.array);$e.scale(this.normal.array,e),this.distance*=e},intersectFrustum:function(e){for(var t=e.vertices,r=this.normal.array,i=$e.dot(t[0].array,r)>this.distance,n=1;n<8;n++)if($e.dot(t[n].array,r)>this.distance!=i)return!0},intersectLine:function(){var e=$e.create();return function(t,r,i){var n=this.distanceToPoint(t),a=this.distanceToPoint(r);if(n>0&&a>0||n<0&&a<0)return null;var o=this.normal.array,s=this.distance,l=t.array;$e.sub(e,r.array,t.array),$e.normalize(e,e);var u=$e.dot(o,e);if(0===u)return null;i||(i=new xt);var h=($e.dot(o,l)-s)/u;return $e.scaleAndAdd(i.array,l,e,-h),i._dirty=!0,i}}(),applyTransform:function(){var e=Qe.create(),t=St.create(),r=St.create();return r[3]=1,function(i){i=i.array,$e.scale(r,this.normal.array,this.distance),St.transformMat4(r,r,i),this.distance=$e.dot(r,this.normal.array),Qe.invert(e,i),Qe.transpose(e,e),t[3]=0,$e.copy(t,this.normal.array),St.transformMat4(t,t,e),$e.copy(this.normal.array,t)}}(),copy:function(e){$e.copy(this.normal.array,e.normal.array),this.normal._dirty=!0,this.distance=e.distance},clone:function(){var e=new Lr;return e.copy(this),e}};var Or=Lr,Dr=$e.set,Rr=$e.copy,Ir=$e.transformMat4,Fr=Math.min,Br=Math.max,zr=function(){this.planes=[];for(var e=0;e<6;e++)this.planes.push(new Or);this.boundingBox=new kt,this.vertices=[];for(e=0;e<8;e++)this.vertices[e]=$e.fromValues(0,0,0)};zr.prototype={setFromProjection:function(e){var t=this.planes,r=e.array,i=r[0],n=r[1],a=r[2],o=r[3],s=r[4],l=r[5],u=r[6],h=r[7],c=r[8],d=r[9],f=r[10],p=r[11],m=r[12],g=r[13],_=r[14],v=r[15];Dr(t[0].normal.array,o-i,h-s,p-c),t[0].distance=-(v-m),t[0].normalize(),Dr(t[1].normal.array,o+i,h+s,p+c),t[1].distance=-(v+m),t[1].normalize(),Dr(t[2].normal.array,o+n,h+l,p+d),t[2].distance=-(v+g),t[2].normalize(),Dr(t[3].normal.array,o-n,h-l,p-d),t[3].distance=-(v-g),t[3].normalize(),Dr(t[4].normal.array,o-a,h-u,p-f),t[4].distance=-(v-_),t[4].normalize(),Dr(t[5].normal.array,o+a,h+u,p+f),t[5].distance=-(v+_),t[5].normalize();var y=this.boundingBox,x=this.vertices;if(0===v){var T=l/i,b=-_/(f-1),w=-_/(f+1),E=-w/l,S=-b/l;y.min.set(-E*T,-E,w),y.max.set(E*T,E,b),Dr(x[0],-E*T,-E,w),Dr(x[1],-E*T,E,w),Dr(x[2],E*T,-E,w),Dr(x[3],E*T,E,w),Dr(x[4],-S*T,-S,b),Dr(x[5],-S*T,S,b),Dr(x[6],S*T,-S,b),Dr(x[7],S*T,S,b)}else{var M=(-1-m)/i,A=(1-m)/i,N=(1-g)/l,C=(-1-g)/l,P=(-1-_)/f,L=(1-_)/f;y.min.set(Math.min(M,A),Math.min(C,N),Math.min(L,P)),y.max.set(Math.max(A,M),Math.max(N,C),Math.max(P,L));var O=y.min.array,D=y.max.array;Dr(x[0],O[0],O[1],O[2]),Dr(x[1],O[0],D[1],O[2]),Dr(x[2],D[0],O[1],O[2]),Dr(x[3],D[0],D[1],O[2]),Dr(x[4],O[0],O[1],D[2]),Dr(x[5],O[0],D[1],D[2]),Dr(x[6],D[0],O[1],D[2]),Dr(x[7],D[0],D[1],D[2])}},getTransformedBoundingBox:function(){var e=$e.create();return function(t,r){var i=this.vertices,n=r.array,a=t.min,o=t.max,s=a.array,l=o.array,u=i[0];Ir(e,u,n),Rr(s,e),Rr(l,e);for(var h=1;h<8;h++)u=i[h],Ir(e,u,n),s[0]=Fr(e[0],s[0]),s[1]=Fr(e[1],s[1]),s[2]=Fr(e[2],s[2]),l[0]=Br(e[0],l[0]),l[1]=Br(e[1],l[1]),l[2]=Br(e[2],l[2]);return a._dirty=!0,o._dirty=!0,t}}()};var Ur=zr,Gr=Wt.extend((function(){return{projectionMatrix:new Dt,invProjectionMatrix:new Dt,viewMatrix:new Dt,frustum:new Ur}}),(function(){this.update(!0)}),{update:function(e){Wt.prototype.update.call(this,e),Dt.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),Dt.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(e){Dt.copy(this.viewMatrix,e),Dt.invert(this.worldTransform,e),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(e){Dt.copy(this.projectionMatrix,e),Dt.invert(this.invProjectionMatrix,e),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var e=St.create();return function(t,r){var i=void 0!==r?r:new wt,n=t.array[0],a=t.array[1];return St.set(e,n,a,-1,1),St.transformMat4(e,e,this.invProjectionMatrix.array),St.transformMat4(e,e,this.worldTransform.array),$e.scale(i.origin.array,e,1/e[3]),St.set(e,n,a,1,1),St.transformMat4(e,e,this.invProjectionMatrix.array),St.transformMat4(e,e,this.worldTransform.array),$e.scale(e,e,1/e[3]),$e.sub(i.direction.array,e,i.origin.array),$e.normalize(i.direction.array,i.direction.array),i.direction._dirty=!0,i.origin._dirty=!0,i}}()}),kr=Gr,Hr=Qe.create(),Vr=Qe.create(),Wr={};function jr(e){var t=[],r=Object.keys(e);r.sort();for(var i=0;i<r.length;i++){var n=r[i];t.push(n+" "+e[n])}var a=t.join("\n");if(Wr[a])return Wr[a];var o=w.genGUID();return Wr[a]=o,o}function Xr(){this.opaque=[],this.transparent=[],this._opaqueCount=0,this._transparentCount=0}Xr.prototype.startCount=function(){this._opaqueCount=0,this._transparentCount=0},Xr.prototype.add=function(e,t){t?this.transparent[this._transparentCount++]=e:this.opaque[this._opaqueCount++]=e},Xr.prototype.endCount=function(){this.transparent.length=this._transparentCount,this.opaque.length=this._opaqueCount};var qr=Wt.extend((function(){return{material:null,lights:[],viewBoundingBoxLastFrame:new kt,shadowUniforms:{},_cameraList:[],_lightUniforms:{},_previousLightNumber:{},_lightNumber:{},_lightProgramKeys:{},_nodeRepository:{},_renderLists:new I(20)}}),(function(){this._scene=this}),{addToScene:function(e){e instanceof kr?(this._cameraList.length>0&&console.warn("Found multiple camera in one scene. Use the fist one."),this._cameraList.push(e)):e instanceof Pr&&this.lights.push(e),e.name&&(this._nodeRepository[e.name]=e)},removeFromScene:function(e){var t;e instanceof kr?(t=this._cameraList.indexOf(e),t>=0&&this._cameraList.splice(t,1)):e instanceof Pr&&(t=this.lights.indexOf(e),t>=0&&this.lights.splice(t,1)),e.name&&delete this._nodeRepository[e.name]},getNode:function(e){return this._nodeRepository[e]},setMainCamera:function(e){var t=this._cameraList.indexOf(e);t>=0&&this._cameraList.splice(t,1),this._cameraList.unshift(e)},getMainCamera:function(){return this._cameraList[0]},getLights:function(){return this.lights},updateLights:function(){var e=this.lights;this._previousLightNumber=this._lightNumber;for(var t={},r=0;r<e.length;r++){var i=e[r];if(!i.invisible){var n=i.group;t[n]||(t[n]={}),t[n][i.type]=t[n][i.type]||0,t[n][i.type]++}}for(var a in this._lightNumber=t,t)this._lightProgramKeys[a]=jr(t[a]);this._updateLightUniforms()},cloneNode:function(e){var t=e.clone(),r={};function i(e,t){r[e.__uid__]=t;for(var n=0;n<e._children.length;n++){var a=e._children[n],o=t._children[n];i(a,o)}}return i(e,t),t.traverse((function(e){e.skeleton&&(e.skeleton=e.skeleton.clone(r)),e.material&&(e.material=e.material.clone())})),t},updateRenderList:function(e,t){var r=e.__uid__,i=this._renderLists.get(r);i||(i=new Xr,this._renderLists.put(r,i)),i.startCount(),t&&(this.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),this.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0));var n=this.material&&this.material.transparent||!1;return this._doUpdateRenderList(this,e,n,i,t),i.endCount(),i},getRenderList:function(e){return this._renderLists.get(e.__uid__)},_doUpdateRenderList:function(e,t,r,i,n){if(!e.invisible)for(var a=0;a<e._children.length;a++){var o=e._children[a];if(o.isRenderable()){var s=o.isSkinnedMesh()?Hr:o.worldTransform.array,l=o.geometry;Qe.multiplyAffine(Vr,t.viewMatrix.array,s),(n&&!l.boundingBox||!this.isFrustumCulled(o,t,Vr))&&i.add(o,o.material.transparent||r)}o._children.length>0&&this._doUpdateRenderList(o,t,r,i,n)}},isFrustumCulled:function(){var e=new kt,t=new Dt;return function(r,i,n){var a=r.boundingBox;if(a||(a=r.skeleton&&r.skeleton.boundingBox?r.skeleton.boundingBox:r.geometry.boundingBox),!a)return!1;if(t.array=n,e.transformFrom(a,t),r.castShadow&&this.viewBoundingBoxLastFrame.union(e),r.frustumCulling){if(!e.intersectBoundingBox(i.frustum.boundingBox))return!0;t.array=i.projectionMatrix.array,e.max.array[2]>0&&e.min.array[2]<0&&(e.max.array[2]=-1e-20),e.applyProjection(t);var o=e.min.array,s=e.max.array;if(s[0]<-1||o[0]>1||s[1]<-1||o[1]>1||s[2]<-1||o[2]>1)return!0}return!1}}(),_updateLightUniforms:function(){var e=this.lights;e.sort(Yr);var t=this._lightUniforms;for(var r in t)for(var i in t[r])t[r][i].value.length=0;for(var n=0;n<e.length;n++){var a=e[n];if(!a.invisible){r=a.group;for(var i in a.uniformTemplates){var o=a.uniformTemplates[i],s=o.value(a);if(null!=s){t[r]||(t[r]={}),t[r][i]||(t[r][i]={type:"",value:[]});var l=t[r][i];switch(l.type=o.type+"v",o.type){case"1i":case"1f":case"t":l.value.push(s);break;case"2f":case"3f":case"4f":for(var u=0;u<s.length;u++)l.value.push(s[u]);break;default:console.error("Unkown light uniform type "+o.type)}}}}}},getLightGroups:function(){var e=[];for(var t in this._lightNumber)e.push(t);return e},getNumberChangedLightGroups:function(){var e=[];for(var t in this._lightNumber)this.isLightNumberChanged(t)&&e.push(t);return e},isLightNumberChanged:function(e){var t=this._previousLightNumber,r=this._lightNumber;for(var i in r[e]){if(!t[e])return!0;if(r[e][i]!==t[e][i])return!0}for(var i in t[e]){if(!r[e])return!0;if(r[e][i]!==t[e][i])return!0}return!1},getLightsNumbers:function(e){return this._lightNumber[e]},getProgramKey:function(e){return this._lightProgramKeys[e]},setLightUniforms:function(){function e(e,t,r){for(var i in e){var n=e[i];if("tv"===n.type){if(!t.hasUniform(i))continue;for(var a=[],o=0;o<n.value.length;o++){var s=n.value[o],l=t.takeCurrentTextureSlot(r,s);a.push(l)}t.setUniform(r.gl,"1iv",i,a)}else t.setUniform(r.gl,n.type,i,n.value)}}return function(t,r,i){e(this._lightUniforms[r],t,i),e(this.shadowUniforms,t,i)}}(),dispose:function(){this.material=null,this._opaqueList=[],this._transparentList=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}});function Yr(e,t){if(t.castShadow&&!e.castShadow)return!0}var Zr=qr,Kr=function(){function e(e){this.value=e}return e}(),Qr=function(){function e(){this._len=0}return e.prototype.insert=function(e){var t=new Kr(e);return this.insertEntry(t),t},e.prototype.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,e.next=null,this.tail=e):this.head=this.tail=e,this._len++},e.prototype.remove=function(e){var t=e.prev,r=e.next;t?t.next=r:this.head=r,r?r.prev=t:this.tail=t,e.next=e.prev=null,this._len--},e.prototype.len=function(){return this._len},e.prototype.clear=function(){this.head=this.tail=null,this._len=0},e}(),Jr=function(){function e(e){this._list=new Qr,this._maxSize=10,this._map={},this._maxSize=e}return e.prototype.put=function(e,t){var r=this._list,i=this._map,n=null;if(null==i[e]){var a=r.len(),o=this._lastRemovedEntry;if(a>=this._maxSize&&a>0){var s=r.head;r.remove(s),delete i[s.key],n=s.value,this._lastRemovedEntry=s}o?o.value=t:o=new Kr(t),o.key=e,r.insertEntry(o),i[e]=o}return n},e.prototype.get=function(e){var t=this._map[e],r=this._list;if(null!=t)return t!==r.tail&&(r.remove(t),r.insertEntry(t)),t.value},e.prototype.clear=function(){this._list.clear(),this._map={}},e.prototype.len=function(){return this._list.len()},e}(),$r=Jr,ei=ir.isPowerOfTwo,ti=["px","nx","py","ny","pz","nz"],ri=$t.extend((function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}}),{textureType:"textureCube",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,i=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var n=e.getGLExtension("EXT_texture_filter_anisotropic");if(n&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,n.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===i){var a=e.getGLExtension("OES_texture_half_float");a||(i=P.FLOAT)}if(this.mipmaps.length)for(var o=this.width,s=this.height,l=0;l<this.mipmaps.length;l++){var u=this.mipmaps[l];this._updateTextureData(t,u,l,o,s,r,i),o/=2,s/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,i),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(e,t,r,i,n,a,o){for(var s=0;s<6;s++){var l=ti[s],u=t.image&&t.image[l];u?e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,a,o,u):e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,i,n,0,a,o,t.pixels&&t.pixels[l])}},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?ei(this.image.px.width)&&ei(this.image.px.height):ei(this.width)&&ei(this.height)},isRenderable:function(){return this.image.px?ii(this.image.px)&&ii(this.image.nx)&&ii(this.image.py)&&ii(this.image.ny)&&ii(this.image.pz)&&ii(this.image.nz):!(!this.width||!this.height)},load:function(e,t){var r=0,i=this;return w.each(e,(function(e,n){var a=L["a"].createImage();t&&(a.crossOrigin=t),a.onload=function(){r--,0===r&&(i.dirty(),i.trigger("success",i))},a.onerror=function(){r--},r++,a.src=e,i.image[n]=a})),this}});function ii(e){return e.width>0&&e.height>0}Object.defineProperty(ri.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(ri.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});var ni=ri,ai=kr.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var e=this.fov/180*Math.PI;this.projectionMatrix.perspective(e,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array,t=2*Math.atan(1/e[5]);this.fov=t/Math.PI*180,this.aspect=e[5]/e[0],this.near=e[14]/(e[10]-1),this.far=e[14]/(e[10]+1)},clone:function(){var e=kr.prototype.clone.call(this);return e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e}}),oi=ai,si="framebuffer",li="renderbuffer",ui=li+"_width",hi=li+"_height",ci=li+"_attached",di="depthtexture_attached",fi=P.FRAMEBUFFER,pi=P.RENDERBUFFER,mi=P.DEPTH_ATTACHMENT,gi=P.COLOR_ATTACHMENT0,_i=S.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},(function(){this._cache=new Qt,this._textures={}}),{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(e){if(e.__currentFrameBuffer){if(e.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}e.__currentFrameBuffer=this;var t=e.gl;t.bindFramebuffer(fi,this._getFrameBufferGL(e)),this._boundRenderer=e;var r=this._cache;r.put("viewport",e.viewport);var i,n,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(i=s.texture.width,n=s.texture.height,this._doAttach(e,s.texture,o,s.target))}this._width=i,this._height=n,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?e.setViewport(this.viewport):e.setViewport(0,0,i,n,1);var l=r.get("attached_textures");if(l)for(var o in l)if(!this._textures[o]){var u=l[o];this._doDetach(t,o,u)}if(!r.get(di)&&this.depthBuffer){r.miss(li)&&r.put(li,t.createRenderbuffer());var h=r.get(li);i===r.get(ui)&&n===r.get(hi)||(t.bindRenderbuffer(pi,h),t.renderbufferStorage(pi,t.DEPTH_COMPONENT16,i,n),r.put(ui,i),r.put(hi,n),t.bindRenderbuffer(pi,null)),r.get(ci)||(t.framebufferRenderbuffer(fi,mi,pi,h),r.put(ci,!0))}},unbind:function(e){e.__currentFrameBuffer=null;var t=e.gl;t.bindFramebuffer(fi,null),this._boundRenderer=null,this._cache.use(e.__uid__);var r=this._cache.get("viewport");r&&e.setViewport(r),this.updateMipmap(e)},updateMipmap:function(e){var t=e.gl;for(var r in this._textures){var i=this._textures[r];if(i){var n=i.texture;if(!n.NPOT&&n.useMipmap&&n.minFilter===$t.LINEAR_MIPMAP_LINEAR){var a="textureCube"===n.textureType?P.TEXTURE_CUBE_MAP:P.TEXTURE_2D;t.bindTexture(a,n.getWebGLTexture(e)),t.generateMipmap(a),t.bindTexture(a,null)}}}},checkStatus:function(e){return e.checkFramebufferStatus(fi)},_getFrameBufferGL:function(e){var t=this._cache;return t.use(e.__uid__),t.miss(si)&&t.put(si,e.gl.createFramebuffer()),t.get(si)},attach:function(e,t,r){if(!e.width)throw new Error("The texture attached to color buffer is not a valid.");t=t||gi,r=r||P.TEXTURE_2D;var i,n=this._boundRenderer,a=n&&n.gl;if(a){var o=this._cache;o.use(n.__uid__),i=o.get("attached_textures")}var s=this._textures[t];if(!s||s.target!==r||s.texture!==e||!i||null==i[t]){var l=!0;n&&(l=this._doAttach(n,e,t,r),this.viewport||n.setViewport(0,0,e.width,e.height,1)),l&&(this._textures[t]=this._textures[t]||{},this._textures[t].texture=e,this._textures[t].target=r)}},_doAttach:function(e,t,r,i){var n=e.gl,a=t.getWebGLTexture(e),o=this._cache.get("attached_textures");if(o&&o[r]){var s=o[r];if(s.texture===t&&s.target===i)return}r=+r;var l=!0;if(r===mi||r===P.DEPTH_STENCIL_ATTACHMENT){var u=e.getGLExtension("WEBGL_depth_texture");if(u||(console.error("Depth texture is not supported by the browser"),l=!1),t.format!==P.DEPTH_COMPONENT&&t.format!==P.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),l=!1),l){var h=this._cache.get(li);h&&(n.framebufferRenderbuffer(fi,mi,pi,null),n.deleteRenderbuffer(h),this._cache.put(li,!1)),this._cache.put(ci,!1),this._cache.put(di,!0)}}return n.framebufferTexture2D(fi,r,i,a,0),o||(o={},this._cache.put("attached_textures",o)),o[r]=o[r]||{},o[r].texture=t,o[r].target=i,l},_doDetach:function(e,t,r){e.framebufferTexture2D(fi,t,r,null,0);var i=this._cache.get("attached_textures");i&&i[t]&&(i[t]=null),t!==mi&&t!==P.DEPTH_STENCIL_ATTACHMENT||this._cache.put(di,!1)},detach:function(e,t){if(this._textures[e]=null,this._boundRenderer){var r=this._cache;r.use(this._boundRenderer.__uid__),this._doDetach(this._boundRenderer.gl,e,t)}},dispose:function(e){var t=e.gl,r=this._cache;r.use(e.__uid__);var i=r.get(li);i&&t.deleteRenderbuffer(i);var n=r.get(si);n&&t.deleteFramebuffer(n),r.deleteContext(e.__uid__),this._textures={}}});_i.DEPTH_ATTACHMENT=mi,_i.COLOR_ATTACHMENT0=gi,_i.STENCIL_ATTACHMENT=P.STENCIL_ATTACHMENT,_i.DEPTH_STENCIL_ATTACHMENT=P.DEPTH_STENCIL_ATTACHMENT;var vi=_i,yi=["px","nx","py","ny","pz","nz"],xi=S.extend((function(){var e={position:new xt,far:1e3,near:.1,texture:null,shadowMapPass:null},t=e._cameras={px:new oi({fov:90}),nx:new oi({fov:90}),py:new oi({fov:90}),ny:new oi({fov:90}),pz:new oi({fov:90}),nz:new oi({fov:90})};return t.px.lookAt(xt.POSITIVE_X,xt.NEGATIVE_Y),t.nx.lookAt(xt.NEGATIVE_X,xt.NEGATIVE_Y),t.py.lookAt(xt.POSITIVE_Y,xt.POSITIVE_Z),t.ny.lookAt(xt.NEGATIVE_Y,xt.NEGATIVE_Z),t.pz.lookAt(xt.POSITIVE_Z,xt.NEGATIVE_Y),t.nz.lookAt(xt.NEGATIVE_Z,xt.NEGATIVE_Y),e._frameBuffer=new vi,e}),{getCamera:function(e){return this._cameras[e]},render:function(e,t,r){var i=e.gl;r||t.update();for(var n=this.texture.width,a=2*Math.atan(n/(n-.5))/Math.PI*180,o=0;o<6;o++){var s=yi[o],l=this._cameras[s];if(xt.copy(l.position,this.position),l.far=this.far,l.near=this.near,l.fov=a,this.shadowMapPass){l.update();var u=t.getBoundingBox();u.applyTransform(l.viewMatrix),t.viewBoundingBoxLastFrame.copy(u),this.shadowMapPass.render(e,t,l,!0)}this._frameBuffer.attach(this.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(e),e.render(t,l,!0),this._frameBuffer.unbind(e)}},dispose:function(e){this._frameBuffer.dispose(e)}}),Ti=xi,bi=Tr.extend({dynamic:!1,widthSegments:1,heightSegments:1},(function(){this.build()}),{build:function(){for(var e=this.heightSegments,t=this.widthSegments,r=this.attributes,i=[],n=[],a=[],o=[],s=0;s<=e;s++)for(var l=s/e,u=0;u<=t;u++){var h=u/t;if(i.push([2*h-1,2*l-1,0]),n&&n.push([h,l]),a&&a.push([0,0,1]),u<t&&s<e){var c=u+s*(t+1);o.push([c,c+1,c+t+1]),o.push([c+t+1,c+1,c+t+2])}}r.position.fromArray(i),r.texcoord0.fromArray(n),r.normal.fromArray(a),this.initIndicesFromArray(o),this.boundingBox=new kt,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}}),wi=bi,Ei=new Dt,Si=Tr.extend({dynamic:!1,widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},(function(){this.build()}),{build:function(){var e={px:Mi("px",this.depthSegments,this.heightSegments),nx:Mi("nx",this.depthSegments,this.heightSegments),py:Mi("py",this.widthSegments,this.depthSegments),ny:Mi("ny",this.widthSegments,this.depthSegments),pz:Mi("pz",this.widthSegments,this.heightSegments),nz:Mi("nz",this.widthSegments,this.heightSegments)},t=["position","texcoord0","normal"],r=0,i=0;for(var n in e)r+=e[n].vertexCount,i+=e[n].indices.length;for(var a=0;a<t.length;a++)this.attributes[t[a]].init(r);this.indices=new L["a"].Uint16Array(i);var o=0,s=0;for(var n in e){var l=e[n];for(a=0;a<t.length;a++)for(var u=t[a],h=l.attributes[u].value,c=l.attributes[u].size,d="normal"===u,f=0;f<h.length;f++){var p=h[f];this.inside&&d&&(p=-p),this.attributes[u].value[f+c*s]=p}var m=l.indices.length;for(f=0;f<l.indices.length;f++)this.indices[f+o]=s+l.indices[this.inside?m-f-1:f];o+=l.indices.length,s+=l.vertexCount}this.boundingBox=new kt,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});function Mi(e,t,r){Ei.identity();var i=new wi({widthSegments:t,heightSegments:r});switch(e){case"px":Dt.translate(Ei,Ei,xt.POSITIVE_X),Dt.rotateY(Ei,Ei,Math.PI/2);break;case"nx":Dt.translate(Ei,Ei,xt.NEGATIVE_X),Dt.rotateY(Ei,Ei,-Math.PI/2);break;case"py":Dt.translate(Ei,Ei,xt.POSITIVE_Y),Dt.rotateX(Ei,Ei,-Math.PI/2);break;case"ny":Dt.translate(Ei,Ei,xt.NEGATIVE_Y),Dt.rotateX(Ei,Ei,Math.PI/2);break;case"pz":Dt.translate(Ei,Ei,xt.POSITIVE_Z);break;case"nz":Dt.translate(Ei,Ei,xt.NEGATIVE_Z),Dt.rotateY(Ei,Ei,Math.PI);break}return i.applyTransform(Ei),i}var Ai=Si,Ni="@export clay.skybox.vertex\n#define SHADER_NAME skybox\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_WorldPosition;\nvoid main()\n{\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end\n@export clay.skybox.fragment\n#define PI 3.1415926\nuniform mat4 viewInverse : VIEWINVERSE;\n#ifdef EQUIRECTANGULAR\nuniform sampler2D environmentMap;\n#else\nuniform samplerCube environmentMap;\n#endif\nuniform float lod: 0.0;\nvarying vec3 v_WorldPosition;\n@import clay.util.rgbm\n@import clay.util.srgb\n@import clay.util.ACES\nvoid main()\n{\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(v_WorldPosition - eyePos);\n#ifdef EQUIRECTANGULAR\n float phi = acos(V.y);\n float theta = atan(-V.x, V.z) + PI * 0.5;\n vec2 uv = vec2(theta / 2.0 / PI, phi / PI);\n vec4 texel = decodeHDR(texture2D(environmentMap, fract(uv)));\n#else\n #if defined(LOD) || defined(SUPPORT_TEXTURE_LOD)\n vec4 texel = decodeHDR(textureCubeLodEXT(environmentMap, V, lod));\n #else\n vec4 texel = decodeHDR(textureCube(environmentMap, V));\n #endif\n#endif\n#ifdef SRGB_DECODE\n texel = sRGBToLinear(texel);\n#endif\n#ifdef TONEMAPPING\n texel.rgb = ACESToneMapping(texel.rgb);\n#endif\n#ifdef SRGB_ENCODE\n texel = linearTosRGB(texel);\n#endif\n gl_FragColor = encodeHDR(vec4(texel.rgb, 1.0));\n}\n@end";Ye.import(Ni);var Ci=tr.extend((function(){var e=new Ye({vertex:Ye.source("clay.skybox.vertex"),fragment:Ye.source("clay.skybox.fragment")}),t=new ne({shader:e,depthMask:!1});return{scene:null,geometry:new Ai,material:t,environmentMap:null,culling:!1,_dummyCamera:new oi}}),(function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)}),{attachScene:function(e){this.scene&&this.detachScene(),e.skybox=this,this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&(this.scene.off("beforerender",this._beforeRenderScene),this.scene.skybox=null),this.scene=null},dispose:function(e){this.detachScene(),this.geometry.dispose(e)},setEnvironmentMap:function(e){"texture2D"===e.textureType?(this.material.define("EQUIRECTANGULAR"),e.minFilter=$t.LINEAR):this.material.undefine("EQUIRECTANGULAR"),this.material.set("environmentMap",e)},getEnvironmentMap:function(){return this.material.get("environmentMap")},_beforeRenderScene:function(e,t,r){this.renderSkybox(e,r)},renderSkybox:function(e,t){var r=this._dummyCamera;r.aspect=e.getViewportAspect(),r.fov=t.fov||50,r.updateProjectionMatrix(),Dt.invert(r.invProjectionMatrix,r.projectionMatrix),r.worldTransform.copy(t.worldTransform),r.viewMatrix.copy(t.viewMatrix),this.position.copy(t.getWorldPosition()),this.update(),e.gl.disable(e.gl.BLEND),this.material.get("lod")>0?this.material.define("fragment","LOD"):this.material.undefine("fragment","LOD"),e.renderPass([this],r)}}),Pi=Ci,Li=Pi,Oi=542327876,Di=131072,Ri=512,Ii=4;function Fi(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var Bi=31,zi=Fi("DXT1"),Ui=Fi("DXT3"),Gi=Fi("DXT5"),ki=0,Hi=1,Vi=2,Wi=3,ji=4,Xi=7,qi=20,Yi=21,Zi=28,Ki={parse:function(e,t){var r=new Int32Array(e,0,Bi);if(r[ki]!==Oi)return null;if(!r(qi)&Ii)return null;var i,n,a=r(Yi),o=r[ji],s=r[Wi],l=r[Zi]&Ri,u=r[Vi]&Di;switch(a){case zi:i=8,n=$t.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case Ui:i=16,n=$t.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case Gi:i=16,n=$t.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var h=r[Hi]+4,c=l?6:1,d=1;u&&(d=Math.max(1,r[Xi]));for(var f=[],p=0;p<c;p++){var m=o,g=s;f[p]=new lr({width:m,height:g,format:n});for(var _=[],v=0;v<d;v++){var y=Math.max(4,m)/4*Math.max(4,g)/4*i,x=new Uint8Array(e,h,y);h+=y,m*=.5,g*=.5,_[v]=x}f[p].pixels=_[0],u&&(f[p].mipmaps=_)}if(!t)return f[0];t.width=f[0].width,t.height=f[0].height,t.format=f[0].format,t.pixels=f[0].pixels,t.mipmaps=f[0].mipmaps}},Qi=Ki,Ji=String.fromCharCode,$i=8,en=32767;function tn(e,t,r,i){if(e[3]>0){var n=Math.pow(2,e[3]-128-8+i);t[r+0]=e[0]*n,t[r+1]=e[1]*n,t[r+2]=e[2]*n}else t[r+0]=0,t[r+1]=0,t[r+2]=0;return t[r+3]=1,t}function rn(e,t,r){for(var i="",n=t;n<r;n++)i+=Ji(e[n]);return i}function nn(e,t){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3]}function an(e,t,r,i){var n=0,a=0,o=i;while(o>0)if(e[a][0]=t[r++],e[a][1]=t[r++],e[a][2]=t[r++],e[a][3]=t[r++],1===e[a][0]&&1===e[a][1]&&1===e[a][2]){for(var s=e[a][3]<<n>>>0;s>0;s--)nn(e[a-1],e[a]),a++,o--;n+=8}else a++,o--,n=0;return r}function on(e,t,r,i){if(i<$i|i>en)return an(e,t,r,i);var n=t[r++];if(2!=n)return an(e,t,r-1,i);if(e[0][1]=t[r++],e[0][2]=t[r++],n=t[r++],(e[0][2]<<8>>>0|n)>>>0!==i)return null;for(n=0;n<4;n++)for(var a=0;a<i;){var o=t[r++];if(o>128){o=(127&o)>>>0;var s=t[r++];while(o--)e[a++][n]=s}else while(o--)e[a++][n]=t[r++]}return r}var sn={parseRGBE:function(e,t,r){null==r&&(r=0);var i=new Uint8Array(e),n=i.length;if("#?"===rn(i,0,2)){for(var a=2;a<n;a++)if("\n"===Ji(i[a])&&"\n"===Ji(i[a+1]))break;if(!(a>=n)){a+=2;for(var o="";a<n;a++){var s=Ji(i[a]);if("\n"===s)break;o+=s}var l=o.split(" "),u=parseInt(l[1]),h=parseInt(l[3]);if(h&&u){for(var c=a+1,d=[],f=0;f<h;f++){d[f]=[];for(var p=0;p<4;p++)d[f][p]=0}for(var m=new Float32Array(h*u*4),g=0,_=0;_<u;_++){c=on(d,i,c,h);if(!c)return null;for(f=0;f<h;f++)tn(d[f],m,g,r),g+=4}return t||(t=new lr),t.width=h,t.height=u,t.pixels=m,t.type=$t.FLOAT,t}}}},parseRGBEFromPNG:function(e){}},ln=sn,un={loadTexture:function(e,t,r,i){var n;if("function"===typeof t?(r=t,i=r,t={}):t=t||{},"string"===typeof e){if(e.match(/.hdr$/)||"hdr"===t.fileType)return n=new lr({width:0,height:0,sRGB:!1}),un._fetchTexture(e,(function(e){ln.parseRGBE(e,n,t.exposure),n.dirty(),r&&r(n)}),i),n;e.match(/.dds$/)||"dds"===t.fileType?(n=new lr({width:0,height:0}),un._fetchTexture(e,(function(e){Qi.parse(e,n),n.dirty(),r&&r(n)}),i)):(n=new lr,n.load(e),n.success(r),n.error(i))}else"object"===typeof e&&"undefined"!==typeof e.px&&(n=new ni,n.load(e),n.success(r),n.error(i));return n},loadPanorama:function(e,t,r,i,n,a){var o=this;"function"===typeof i?(n=i,a=n,i={}):i=i||{},un.loadTexture(t,i,(function(t){t.flipY=i.flipY||!1,o.panoramaToCubeMap(e,t,r,i),t.dispose(e),n&&n(r)}),a)},panoramaToCubeMap:function(e,t,r,i){var n=new Ti,a=new Li({scene:new Zr});return a.setEnvironmentMap(t),i=i||{},i.encodeRGBM&&a.material.define("fragment","RGBM_ENCODE"),r.sRGB=t.sRGB,n.texture=r,n.render(e,a.scene),n.texture=null,n.dispose(e),r},heightToNormal:function(e,t){var r=document.createElement("canvas"),i=r.width=e.width,n=r.height=e.height,a=r.getContext("2d");a.drawImage(e,0,0,i,n),t=t||!1;for(var o=a.getImageData(0,0,i,n),s=a.createImageData(i,n),l=0;l<o.data.length;l+=4){if(t){var u=o.data[l],h=o.data[l+1],c=o.data[l+2],d=Math.abs(u-h)+Math.abs(h-c);if(d>20)return console.warn("Given image is not a height map"),e}var f,p,m,g;l%(4*i)===0?(f=o.data[l],m=o.data[l+4]):l%(4*i)===4*(i-1)?(f=o.data[l-4],m=o.data[l]):(f=o.data[l-4],m=o.data[l+4]),l<4*i?(p=o.data[l],g=o.data[l+4*i]):l>i*(n-1)*4?(p=o.data[l-4*i],g=o.data[l]):(p=o.data[l-4*i],g=o.data[l+4*i]),s.data[l]=f-m+127,s.data[l+1]=p-g+127,s.data[l+2]=255,s.data[l+3]=255}return a.putImageData(s,0,0),r},isHeightImage:function(e,t,r){if(!e||!e.width||!e.height)return!1;var i=document.createElement("canvas"),n=i.getContext("2d"),a=t||32;r=r||20,i.width=i.height=a,n.drawImage(e,0,0,a,a);for(var o=n.getImageData(0,0,a,a),s=0;s<o.data.length;s+=4){var l=o.data[s],u=o.data[s+1],h=o.data[s+2],c=Math.abs(l-u)+Math.abs(u-h);if(c>r)return!1}return!0},_fetchTexture:function(e,t,r){L["a"].request.get({url:e,responseType:"arraybuffer",onload:t,onerror:r})},createChessboard:function(e,t,r,i){e=e||512,t=t||64,r=r||"black",i=i||"white";var n=Math.ceil(e/t),a=document.createElement("canvas");a.width=e,a.height=e;var o=a.getContext("2d");o.fillStyle=i,o.fillRect(0,0,e,e),o.fillStyle=r;for(var s=0;s<n;s++)for(var l=0;l<n;l++){var u=l%2?s%2:s%2-1;u&&o.fillRect(s*t,l*t,t,t)}var h=new lr({image:a,anisotropic:8});return h},createBlank:function(e){var t=document.createElement("canvas");t.width=1,t.height=1;var r=t.getContext("2d");r.fillStyle=e,r.fillRect(0,0,1,1);var i=new lr({image:t});return i}},hn=un,cn=["mousedown","mouseup","mousemove","mouseover","mouseout","click","dblclick","contextmenu"];function dn(e){return"_on"+e}var fn=function(e){var t=this;this._texture=new lr({anisotropic:32,flipY:!1,surface:this,dispose:function(e){t.dispose(),lr.prototype.dispose.call(this,e)}}),cn.forEach((function(e){this[dn(e)]=function(t){t.triangle&&this._meshes.forEach((function(r){this.dispatchEvent(e,r,t.triangle,t.point)}),this)}}),this),this._meshes=[],e&&this.setECharts(e),this.onupdate=null};fn.prototype={constructor:fn,getTexture:function(){return this._texture},setECharts:function(e){this._chart=e;var t=e.getDom();if(t instanceof HTMLCanvasElement){var r=this,i=e.getZr(),n=i.__oldRefreshImmediately||i.refreshImmediately;i.refreshImmediately=function(){n.call(this),r._texture.dirty(),r.onupdate&&r.onupdate()},i.__oldRefreshImmediately=n}else console.error("ECharts must init on canvas if it is used as texture."),t=document.createElement("canvas");this._texture.image=t,this._texture.dirty(),this.onupdate&&this.onupdate()},dispatchEvent:function(){var e=new xt,t=new xt,r=new xt,i=new de,n=new de,a=new de,o=new de,s=new xt;return function(l,u,h,c){var d=u.geometry,f=d.attributes.position,p=d.attributes.texcoord0,m=xt.dot,g=xt.cross;f.get(h[0],e.array),f.get(h[1],t.array),f.get(h[2],r.array),p.get(h[0],i.array),p.get(h[1],n.array),p.get(h[2],a.array),g(s,t,r);var _=m(e,s),v=m(c,s)/_;g(s,r,e);var y=m(c,s)/_;g(s,e,t);var x=m(c,s)/_;de.scale(o,i,v),de.scaleAndAdd(o,o,n,y),de.scaleAndAdd(o,o,a,x);var T=o.x*this._chart.getWidth(),b=o.y*this._chart.getHeight();this._chart.getZr().handler.dispatch(l,{zrX:T,zrY:b})}}(),attachToMesh:function(e){this._meshes.indexOf(e)>=0||(cn.forEach((function(t){e.on(t,this[dn(t)],this)}),this),this._meshes.push(e))},detachFromMesh:function(e){var t=this._meshes.indexOf(e);t>=0&&this._meshes.splice(t,1),cn.forEach((function(t){e.off(t,this[dn(t)])}),this)},dispose:function(){this._meshes.forEach((function(e){this.detachFromMesh(e)}),this)}};var pn=fn,mn=kr.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array;this.left=(-1-e[12])/e[0],this.right=(1-e[12])/e[0],this.top=(1-e[13])/e[5],this.bottom=(-1-e[13])/e[5],this.near=-(-1-e[14])/e[10],this.far=-(1-e[14])/e[10]},clone:function(){var e=kr.prototype.clone.call(this);return e.left=this.left,e.right=this.right,e.near=this.near,e.far=this.far,e.top=this.top,e.bottom=this.bottom,e}}),gn=mn,_n="\n@export clay.compositor.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n v_Texcoord = texcoord;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end";Ye["import"](_n);var vn=new wi,yn=new tr({geometry:vn,frustumCulling:!1}),xn=new gn,Tn=S.extend((function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}}),(function(){var e=new Ye(Ye.source("clay.compositor.vertex"),this.fragment),t=new ne({shader:e});t.enableTexturesAll(),this.material=t}),{setUniform:function(e,t){this.material.setUniform(e,t)},getUniform:function(e){var t=this.material.uniforms[e];if(t)return t.value},attachOutput:function(e,t){this.outputs||(this.outputs={}),t=t||P.COLOR_ATTACHMENT0,this.outputs[t]=e},detachOutput:function(e){for(var t in this.outputs)this.outputs[t]===e&&(this.outputs[t]=null)},bind:function(e,t){if(this.outputs)for(var r in this.outputs){var i=this.outputs[r];i&&t.attach(i,r)}t&&t.bind(e)},unbind:function(e,t){t.unbind(e)},render:function(e,t){var r=e.gl;if(t){this.bind(e,t);var i=e.getGLExtension("EXT_draw_buffers");if(i&&this.outputs){var n=[];for(var a in this.outputs)a=+a,a>=r.COLOR_ATTACHMENT0&&a<=r.COLOR_ATTACHMENT0+8&&n.push(a);i.drawBuffersEXT(n)}}this.trigger("beforerender",this,e);var o=this.clearDepth?r.DEPTH_BUFFER_BIT:0;if(r.depthMask(!0),this.clearColor){o|=r.COLOR_BUFFER_BIT,r.colorMask(!0,!0,!0,!0);var s=this.clearColor;Array.isArray(s)&&r.clearColor(s[0],s[1],s[2],s[3])}r.clear(o),this.blendWithPrevious?(r.enable(r.BLEND),this.material.transparent=!0):(r.disable(r.BLEND),this.material.transparent=!1),this.renderQuad(e),this.trigger("afterrender",this,e),t&&this.unbind(e,t)},renderQuad:function(e){yn.material=this.material,e.renderPass([yn],xn)},dispose:function(e){}}),bn=Tn,wn="#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform sampler2D normalDistribution;\nuniform vec2 viewportSize : [512, 256];\nconst vec3 N = vec3(0.0, 0.0, 1.0);\nconst float fSampleNumber = float(SAMPLE_NUMBER);\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nfloat G_Smith(float roughness, float NoV, float NoL) {\n float k = roughness * roughness / 2.0;\n float G1V = NoV / (NoV * (1.0 - k) + k);\n float G1L = NoL / (NoL * (1.0 - k) + k);\n return G1L * G1V;\n}\nvoid main() {\n vec2 uv = gl_FragCoord.xy / viewportSize;\n float NoV = uv.x;\n float roughness = uv.y;\n vec3 V;\n V.x = sqrt(1.0 - NoV * NoV);\n V.y = 0.0;\n V.z = NoV;\n float A = 0.0;\n float B = 0.0;\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\n vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n vec3 L = reflect(-V, H);\n float NoL = clamp(L.z, 0.0, 1.0);\n float NoH = clamp(H.z, 0.0, 1.0);\n float VoH = clamp(dot(V, H), 0.0, 1.0);\n if (NoL > 0.0) {\n float G = G_Smith(roughness, NoV, NoL);\n float G_Vis = G * VoH / (NoH * NoV);\n float Fc = pow(1.0 - VoH, 5.0);\n A += (1.0 - Fc) * G_Vis;\n B += Fc * G_Vis;\n }\n }\n gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\n}\n",En="#define SHADER_NAME prefilter\n#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform sampler2D normalDistribution;\nuniform float roughness : 0.5;\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPosition;\n@import clay.util.rgbm\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nvoid main() {\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(v_WorldPosition - eyePos);\n vec3 N = V;\n vec3 prefilteredColor = vec3(0.0);\n float totalWeight = 0.0;\n float fMaxSampleNumber = float(SAMPLE_NUMBER);\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\n vec3 H = importanceSampleNormal(float(i) / fMaxSampleNumber, roughness, N);\n vec3 L = reflect(-V, H);\n float NoL = clamp(dot(N, L), 0.0, 1.0);\n if (NoL > 0.0) {\n prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\n totalWeight += NoL;\n }\n }\n gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\n}\n",Sn={},Mn=["px","nx","py","ny","pz","nz"];Sn.prefilterEnvironmentMap=function(e,t,r,i,n){n&&i||(i=Sn.generateNormalDistribution(),n=Sn.integrateBRDF(e,i)),r=r||{};var a=r.width||64,o=r.height||64,s=r.type||t.type,l=new ni({width:a,height:o,type:s,flipY:!1,mipmaps:[]});l.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var u=Math.min(a,o),h=Math.log(u)/Math.log(2)+1,c=new ne({shader:new Ye({vertex:Ye.source("clay.skybox.vertex"),fragment:En})});c.set("normalDistribution",i),r.encodeRGBM&&c.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&c.define("fragment","RGBM_DECODE");var d,f=new Zr;if("texture2D"===t.textureType){var p=new ni({width:a,height:o,type:s===$t.FLOAT?$t.HALF_FLOAT:s});hn.panoramaToCubeMap(e,t,p,{encodeRGBM:r.decodeRGBM}),t=p}d=new Pi({scene:f,material:c}),d.material.set("environmentMap",t);var m=new Ti({texture:l});r.encodeRGBM&&(s=l.type=$t.UNSIGNED_BYTE);for(var g=new lr({width:a,height:o,type:s}),_=new vi({depthBuffer:!1}),v=L["a"][s===$t.UNSIGNED_BYTE?"Uint8Array":"Float32Array"],y=0;y<h;y++){l.mipmaps[y]={pixels:{}},d.material.set("roughness",y/(h-1));for(var x=g.width,T=2*Math.atan(x/(x-.5))/Math.PI*180,b=0;b<Mn.length;b++){var w=new v(g.width*g.height*4);_.attach(g),_.bind(e);var E=m.getCamera(Mn[b]);E.fov=T,e.render(f,E),e.gl.readPixels(0,0,g.width,g.height,$t.RGBA,s,w),_.unbind(e),l.mipmaps[y].pixels[Mn[b]]=w}g.width/=2,g.height/=2,g.dirty()}return _.dispose(e),g.dispose(e),d.dispose(e),i.dispose(e),{environmentMap:l,brdfLookup:n,normalDistribution:i,maxMipmapLevel:h}},Sn.integrateBRDF=function(e,t){t=t||Sn.generateNormalDistribution();var r=new vi({depthBuffer:!1}),i=new bn({fragment:wn}),n=new lr({width:512,height:256,type:$t.HALF_FLOAT,wrapS:$t.CLAMP_TO_EDGE,wrapT:$t.CLAMP_TO_EDGE,minFilter:$t.NEAREST,magFilter:$t.NEAREST,useMipmap:!1});return i.setUniform("normalDistribution",t),i.setUniform("viewportSize",[512,256]),i.attachOutput(n),i.render(e,r),r.dispose(e),n},Sn.generateNormalDistribution=function(e,t){e=e||256,t=t||1024;for(var r=new lr({width:e,height:t,type:$t.FLOAT,minFilter:$t.NEAREST,magFilter:$t.NEAREST,wrapS:$t.CLAMP_TO_EDGE,wrapT:$t.CLAMP_TO_EDGE,useMipmap:!1}),i=new Float32Array(t*e*4),n=[],a=0;a<e;a++){for(var o=a/e,s=o*o,l=0;l<t;l++){var u=(l<<16|l>>>16)>>>0;u=((1431655765&u)<<1|(2863311530&u)>>>1)>>>0,u=((858993459&u)<<2|(3435973836&u)>>>2)>>>0,u=((252645135&u)<<4|(4042322160&u)>>>4)>>>0,u=(((16711935&u)<<8|(4278255360&u)>>>8)>>>0)/4294967296;var h=Math.sqrt((1-u)/(1+(s*s-1)*u));n[l]=h}for(l=0;l<t;l++){var c=4*(l*e+a),d=(h=n[l],Math.sqrt(1-h*h)),f=l/t,p=2*Math.PI*f;i[c]=d*Math.cos(p),i[c+1]=h,i[c+2]=d*Math.sin(p),i[c+3]=1}}return r.pixels=i,r};var An=Sn,Nn=Pr.extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(e,t){if(e.getGLExtension("EXT_shader_texture_lod")){this._brdfLookup||(this._normalDistribution=An.generateNormalDistribution(),this._brdfLookup=An.integrateBRDF(e,this._normalDistribution));var r=this.cubemap;if(!r.__prefiltered){var i=An.prefilterEnvironmentMap(e,r,{encodeRGBM:!0,width:t,height:t},this._normalDistribution,this._brdfLookup);this.cubemap=i.environmentMap,this.cubemap.__prefiltered=!0,r.dispose(e)}}else console.warn("Device not support textureCubeLodEXT")},getBRDFLookup:function(){return this._brdfLookup},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientCubemapLightCubemap:{type:"t",value:function(e){return e.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(e){return e._brdfLookup}}}}),Cn=Nn,Pn=Pr.extend({castShadow:!1,coefficients:[]},(function(){this._coefficientsTmpArr=new L["a"].Float32Array(27)}),{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientSHLightCoefficients:{type:"3f",value:function(e){for(var t=e._coefficientsTmpArr,r=0;r<e.coefficients.length;r++)t[r]=e.coefficients[r];return t}}}}),Ln=Pn,On={},Dn=["px","nx","py","ny","pz","nz"];function Rn(e,t){var r=e[0],i=e[1],n=e[2];return 0===t?1:1===t?r:2===t?i:3===t?n:4===t?r*n:5===t?i*n:6===t?r*i:7===t?3*n*n-1:r*r-i*i}var In={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};function Fn(e,t,r,i){for(var n=new L["a"].Float32Array(27),a=$e.create(),o=$e.create(),s=$e.create(),l=0;l<9;l++){for(var u=$e.create(),h=0;h<Dn.length;h++){for(var c=t[Dn[h]],d=$e.create(),f=0,p=0,m=In[Dn[h]],g=0;g<i;g++)for(var _=0;_<r;_++){a[0]=_/(r-1)*2-1,a[1]=g/(i-1)*2-1,a[2]=-1,$e.normalize(a,a),s[0]=a[m[0]]*m[3],s[1]=a[m[1]]*m[4],s[2]=a[m[2]]*m[5],o[0]=c[p++]/255,o[1]=c[p++]/255,o[2]=c[p++]/255;var v=c[p++]/255*8.12;o[0]*=v,o[1]*=v,o[2]*=v,$e.scaleAndAdd(d,d,o,Rn(s,l)*-a[2]),f+=-a[2]}$e.scaleAndAdd(u,u,d,1/f)}n[3*l]=u[0]/6,n[3*l+1]=u[1]/6,n[3*l+2]=u[2]/6}return n}On.projectEnvironmentMap=function(e,t,r){var i;r=r||{},r.lod=r.lod||0;var n=new Zr,a=64;"texture2D"===t.textureType?i=new Li({scene:n,environmentMap:t}):(a=t.image&&t.image.px?t.image.px.width:t.width,i=new Pi({scene:n,environmentMap:t}));var o=Math.ceil(a/Math.pow(2,r.lod)),s=Math.ceil(a/Math.pow(2,r.lod)),l=new lr({width:o,height:s}),u=new vi;i.material.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&i.material.define("fragment","RGBM_DECODE"),i.material.set("lod",r.lod);for(var h=new Ti({texture:l}),c={},d=0;d<Dn.length;d++){c[Dn[d]]=new Uint8Array(o*s*4);var f=h.getCamera(Dn[d]);f.fov=90,u.attach(l),u.bind(e),e.render(n,f),e.gl.readPixels(0,0,o,s,$t.RGBA,$t.UNSIGNED_BYTE,c[Dn[d]]),u.unbind(e)}return i.dispose(e),u.dispose(e),l.dispose(e),Fn(e,c,o,s)};var Bn=On,zn={firstNotNull:function(){for(var e=0,t=arguments.length;e<t;e++)if(null!=arguments[e])return arguments[e]},queryDataIndex:function(e,t){return null!=t.dataIndexInside?t.dataIndexInside:null!=t.dataIndex?l["Y"].isArray(t.dataIndex)?l["Y"].map(t.dataIndex,(function(t){return e.indexOfRawIndex(t)})):e.indexOfRawIndex(t.dataIndex):null!=t.name?l["Y"].isArray(t.name)?l["Y"].map(t.name,(function(t){return e.indexOfName(t)})):e.indexOfName(t.name):void 0}},Un=zn,Gn=Tr.extend({dynamic:!1,widthSegments:40,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},(function(){this.build()}),{build:function(){var e=this.heightSegments,t=this.widthSegments,r=this.attributes.position,i=this.attributes.texcoord0,n=this.attributes.normal,a=(t+1)*(e+1);r.init(a),i.init(a),n.init(a);var o,s,l,u,h,c,d,f,p,m,g,_=a>65535?Uint32Array:Uint16Array,v=this.indices=new _(t*e*6),y=this.radius,x=this.phiStart,T=this.phiLength,b=this.thetaStart,w=this.thetaLength,E=(y=this.radius,[]),S=[],M=0,A=1/y;for(d=0;d<=e;d++)for(c=0;c<=t;c++)u=c/t,h=d/e,o=-y*Math.cos(x+u*T)*Math.sin(b+h*w),s=y*Math.cos(b+h*w),l=y*Math.sin(x+u*T)*Math.sin(b+h*w),E[0]=o,E[1]=s,E[2]=l,S[0]=u,S[1]=h,r.set(M,E),i.set(M,S),E[0]*=A,E[1]*=A,E[2]*=A,n.set(M,E),M++;var N=t+1,C=0;for(d=0;d<e;d++)for(c=0;c<t;c++)p=d*N+c,f=d*N+c+1,g=(d+1)*N+c+1,m=(d+1)*N+c,v[C++]=f,v[C++]=p,v[C++]=g,v[C++]=p,v[C++]=m,v[C++]=g;this.boundingBox=new kt,this.boundingBox.max.set(y,y,y),this.boundingBox.min.set(-y,-y,-y)}}),kn=Gn,Hn=Pr.extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}}}),Vn=Hn,Wn=Pr.extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new xt,e.__dir.copy(e.worldTransform.z).normalize().negate().array}},directionalLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=Pr.prototype.clone.call(this);return e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}}),jn=Wn,Xn=Pr.extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(e){return e.getWorldPosition().array}},pointLightRange:{type:"1f",value:function(e){return e.range}},pointLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=Pr.prototype.clone.call(this);return e.range=this.range,e}}),qn=Xn,Yn=Pr.extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:.001,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(e){return e.getWorldPosition().array}},spotLightRange:{type:"1f",value:function(e){return e.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(e){return e.falloffFactor}},spotLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new xt,e.__dir.copy(e.worldTransform.z).negate().array}},spotLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=Pr.prototype.clone.call(this);return e.range=this.range,e.umbraAngle=this.umbraAngle,e.penumbraAngle=this.penumbraAngle,e.falloffFactor=this.falloffFactor,e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}}),Zn=Yn,Kn=function(e,t,r,i){e=e||0,t=t||0,r=r||0,i=i||0,this.array=St.fromValues(e,t,r,i),this._dirty=!0};Kn.prototype={constructor:Kn,add:function(e){return St.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,r,i){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this.array[3]=i,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new Kn(this.x,this.y,this.z,this.w)},copy:function(e){return St.copy(this.array,e.array),this._dirty=!0,this},dist:function(e){return St.dist(this.array,e.array)},distance:function(e){return St.distance(this.array,e.array)},div:function(e){return St.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return St.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return St.dot(this.array,e.array)},len:function(){return St.len(this.array)},length:function(){return St.length(this.array)},lerp:function(e,t,r){return St.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return St.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return St.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return St.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return St.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return St.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return St.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return St.random(this.array,e),this._dirty=!0,this},scale:function(e){return St.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return St.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return St.sqrDist(this.array,e.array)},squaredDistance:function(e){return St.squaredDistance(this.array,e.array)},sqrLen:function(){return St.sqrLen(this.array)},squaredLength:function(){return St.squaredLength(this.array)},sub:function(e){return St.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return St.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return St.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return St.transformQuat(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var Qn=Object.defineProperty;if(Qn){var Jn=Kn.prototype;Qn(Jn,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),Qn(Jn,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),Qn(Jn,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),Qn(Jn,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}Kn.add=function(e,t,r){return St.add(e.array,t.array,r.array),e._dirty=!0,e},Kn.set=function(e,t,r,i,n){St.set(e.array,t,r,i,n),e._dirty=!0},Kn.copy=function(e,t){return St.copy(e.array,t.array),e._dirty=!0,e},Kn.dist=function(e,t){return St.distance(e.array,t.array)},Kn.distance=Kn.dist,Kn.div=function(e,t,r){return St.divide(e.array,t.array,r.array),e._dirty=!0,e},Kn.divide=Kn.div,Kn.dot=function(e,t){return St.dot(e.array,t.array)},Kn.len=function(e){return St.length(e.array)},Kn.lerp=function(e,t,r,i){return St.lerp(e.array,t.array,r.array,i),e._dirty=!0,e},Kn.min=function(e,t,r){return St.min(e.array,t.array,r.array),e._dirty=!0,e},Kn.max=function(e,t,r){return St.max(e.array,t.array,r.array),e._dirty=!0,e},Kn.mul=function(e,t,r){return St.multiply(e.array,t.array,r.array),e._dirty=!0,e},Kn.multiply=Kn.mul,Kn.negate=function(e,t){return St.negate(e.array,t.array),e._dirty=!0,e},Kn.normalize=function(e,t){return St.normalize(e.array,t.array),e._dirty=!0,e},Kn.random=function(e,t){return St.random(e.array,t),e._dirty=!0,e},Kn.scale=function(e,t,r){return St.scale(e.array,t.array,r),e._dirty=!0,e},Kn.scaleAndAdd=function(e,t,r,i){return St.scaleAndAdd(e.array,t.array,r.array,i),e._dirty=!0,e},Kn.sqrDist=function(e,t){return St.sqrDist(e.array,t.array)},Kn.squaredDistance=Kn.sqrDist,Kn.sqrLen=function(e){return St.sqrLen(e.array)},Kn.squaredLength=Kn.sqrLen,Kn.sub=function(e,t,r){return St.subtract(e.array,t.array,r.array),e._dirty=!0,e},Kn.subtract=Kn.sub,Kn.transformMat4=function(e,t,r){return St.transformMat4(e.array,t.array,r.array),e._dirty=!0,e},Kn.transformQuat=function(e,t,r){return St.transformQuat(e.array,t.array,r.array),e._dirty=!0,e};var $n=Kn,ea={create:function(){var e=new oe(4);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},clone:function(e){var t=new oe(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},transpose:function(e,t){if(e===t){var r=t[1];e[1]=t[2],e[2]=r}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e},invert:function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=r*a-n*i;return o?(o=1/o,e[0]=a*o,e[1]=-i*o,e[2]=-n*o,e[3]=r*o,e):null},adjoint:function(e,t){var r=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=r,e},determinant:function(e){return e[0]*e[3]-e[2]*e[1]},multiply:function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=r[0],l=r[1],u=r[2],h=r[3];return e[0]=i*s+a*l,e[1]=n*s+o*l,e[2]=i*u+a*h,e[3]=n*u+o*h,e}};ea.mul=ea.multiply,ea.rotate=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=Math.sin(r),l=Math.cos(r);return e[0]=i*l+a*s,e[1]=n*l+o*s,e[2]=i*-s+a*l,e[3]=n*-s+o*l,e},ea.scale=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=r[0],l=r[1];return e[0]=i*s,e[1]=n*s,e[2]=a*l,e[3]=o*l,e},ea.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2))},ea.LDU=function(e,t,r,i){return e[2]=i[2]/i[0],r[0]=i[0],r[1]=i[1],r[3]=i[3]-e[2]*r[1],[e,t,r]};var ta=ea,ra=function(){this.array=ta.create(),this._dirty=!0};ra.prototype={constructor:ra,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},clone:function(){return(new ra).copy(this)},copy:function(e){return ta.copy(this.array,e.array),this._dirty=!0,this},adjoint:function(){return ta.adjoint(this.array,this.array),this._dirty=!0,this},determinant:function(){return ta.determinant(this.array)},identity:function(){return ta.identity(this.array),this._dirty=!0,this},invert:function(){return ta.invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return ta.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return ta.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return ta.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return ta.multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return ta.rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return ta.scale(this.array,this.array,e.array),this._dirty=!0,this},transpose:function(){return ta.transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},ra.adjoint=function(e,t){return ta.adjoint(e.array,t.array),e._dirty=!0,e},ra.copy=function(e,t){return ta.copy(e.array,t.array),e._dirty=!0,e},ra.determinant=function(e){return ta.determinant(e.array)},ra.identity=function(e){return ta.identity(e.array),e._dirty=!0,e},ra.invert=function(e,t){return ta.invert(e.array,t.array),e._dirty=!0,e},ra.mul=function(e,t,r){return ta.mul(e.array,t.array,r.array),e._dirty=!0,e},ra.multiply=ra.mul,ra.rotate=function(e,t,r){return ta.rotate(e.array,t.array,r),e._dirty=!0,e},ra.scale=function(e,t,r){return ta.scale(e.array,t.array,r.array),e._dirty=!0,e},ra.transpose=function(e,t){return ta.transpose(e.array,t.array),e._dirty=!0,e};var ia=ra,na={create:function(){var e=new oe(6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},clone:function(e){var t=new oe(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},invert:function(e,t){var r=t[0],i=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=r*a-i*n;return l?(l=1/l,e[0]=a*l,e[1]=-i*l,e[2]=-n*l,e[3]=r*l,e[4]=(n*s-a*o)*l,e[5]=(i*o-r*s)*l,e):null},determinant:function(e){return e[0]*e[3]-e[1]*e[2]},multiply:function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=r[0],h=r[1],c=r[2],d=r[3],f=r[4],p=r[5];return e[0]=i*u+a*h,e[1]=n*u+o*h,e[2]=i*c+a*d,e[3]=n*c+o*d,e[4]=i*f+a*p+s,e[5]=n*f+o*p+l,e}};na.mul=na.multiply,na.rotate=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=Math.sin(r),h=Math.cos(r);return e[0]=i*h+a*u,e[1]=n*h+o*u,e[2]=i*-u+a*h,e[3]=n*-u+o*h,e[4]=s,e[5]=l,e},na.scale=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=r[0],h=r[1];return e[0]=i*u,e[1]=n*u,e[2]=a*h,e[3]=o*h,e[4]=s,e[5]=l,e},na.translate=function(e,t,r){var i=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=r[0],h=r[1];return e[0]=i,e[1]=n,e[2]=a,e[3]=o,e[4]=i*u+a*h+s,e[5]=n*u+o*h+l,e},na.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+1)};var aa=na,oa=function(){this.array=aa.create(),this._dirty=!0};oa.prototype={constructor:oa,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},clone:function(){return(new oa).copy(this)},copy:function(e){return aa.copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return aa.determinant(this.array)},identity:function(){return aa.identity(this.array),this._dirty=!0,this},invert:function(){return aa.invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return aa.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return aa.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return aa.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return aa.multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return aa.rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return aa.scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return aa.translate(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},oa.copy=function(e,t){return aa.copy(e.array,t.array),e._dirty=!0,e},oa.determinant=function(e){return aa.determinant(e.array)},oa.identity=function(e){return aa.identity(e.array),e._dirty=!0,e},oa.invert=function(e,t){return aa.invert(e.array,t.array),e._dirty=!0,e},oa.mul=function(e,t,r){return aa.mul(e.array,t.array,r.array),e._dirty=!0,e},oa.multiply=oa.mul,oa.rotate=function(e,t,r){return aa.rotate(e.array,t.array,r),e._dirty=!0,e},oa.scale=function(e,t,r){return aa.scale(e.array,t.array,r.array),e._dirty=!0,e},oa.translate=function(e,t,r){return aa.translate(e.array,t.array,r.array),e._dirty=!0,e};var sa=oa,la=function(){this.array=At.create(),this._dirty=!0};la.prototype={constructor:la,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return At.adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return(new la).copy(this)},copy:function(e){return At.copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return At.determinant(this.array)},fromMat2d:function(e){return At.fromMat2d(this.array,e.array),this._dirty=!0,this},fromMat4:function(e){return At.fromMat4(this.array,e.array),this._dirty=!0,this},fromQuat:function(e){return At.fromQuat(this.array,e.array),this._dirty=!0,this},identity:function(){return At.identity(this.array),this._dirty=!0,this},invert:function(){return At.invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return At.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return At.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return At.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return At.multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return At.rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return At.scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return At.translate(this.array,this.array,e.array),this._dirty=!0,this},normalFromMat4:function(e){return At.normalFromMat4(this.array,e.array),this._dirty=!0,this},transpose:function(){return At.transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},la.adjoint=function(e,t){return At.adjoint(e.array,t.array),e._dirty=!0,e},la.copy=function(e,t){return At.copy(e.array,t.array),e._dirty=!0,e},la.determinant=function(e){return At.determinant(e.array)},la.identity=function(e){return At.identity(e.array),e._dirty=!0,e},la.invert=function(e,t){return At.invert(e.array,t.array),e},la.mul=function(e,t,r){return At.mul(e.array,t.array,r.array),e._dirty=!0,e},la.multiply=la.mul,la.fromMat2d=function(e,t){return At.fromMat2d(e.array,t.array),e._dirty=!0,e},la.fromMat4=function(e,t){return At.fromMat4(e.array,t.array),e._dirty=!0,e},la.fromQuat=function(e,t){return At.fromQuat(e.array,t.array),e._dirty=!0,e},la.normalFromMat4=function(e,t){return At.normalFromMat4(e.array,t.array),e._dirty=!0,e},la.rotate=function(e,t,r){return At.rotate(e.array,t.array,r),e._dirty=!0,e},la.scale=function(e,t,r){return At.scale(e.array,t.array,r.array),e._dirty=!0,e},la.transpose=function(e,t){return At.transpose(e.array,t.array),e._dirty=!0,e},la.translate=function(e,t,r){return At.translate(e.array,t.array,r.array),e._dirty=!0,e};var ua=la,ha={linear:function(e){return e},quadraticIn:function(e){return e*e},quadraticOut:function(e){return e*(2-e)},quadraticInOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)},cubicIn:function(e){return e*e*e},cubicOut:function(e){return--e*e*e+1},cubicInOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)},quarticIn:function(e){return e*e*e*e},quarticOut:function(e){return 1- --e*e*e*e},quarticInOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)},quinticIn:function(e){return e*e*e*e*e},quinticOut:function(e){return--e*e*e*e*e+1},quinticInOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)},sinusoidalIn:function(e){return 1-Math.cos(e*Math.PI/2)},sinusoidalOut:function(e){return Math.sin(e*Math.PI/2)},sinusoidalInOut:function(e){return.5*(1-Math.cos(Math.PI*e))},exponentialIn:function(e){return 0===e?0:Math.pow(1024,e-1)},exponentialOut:function(e){return 1===e?1:1-Math.pow(2,-10*e)},exponentialInOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))},circularIn:function(e){return 1-Math.sqrt(1-e*e)},circularOut:function(e){return Math.sqrt(1- --e*e)},circularInOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},elasticIn:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),-r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/i))},elasticOut:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*e)*Math.sin((e-t)*(2*Math.PI)/i)+1)},elasticInOut:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),(e*=2)<1?r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/i)*-.5:r*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/i)*.5+1)},backIn:function(e){var t=1.70158;return e*e*((t+1)*e-t)},backOut:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},backInOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)},bounceIn:function(e){return 1-ha.bounceOut(1-e)},bounceOut:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},bounceInOut:function(e){return e<.5?.5*ha.bounceIn(2*e):.5*ha.bounceOut(2*e-1)+.5}},ca=ha,da=function(){function e(e){this._initialized=!1,this._startTime=0,this._pausedTime=0,this._paused=!1,this._life=e.life||1e3,this._delay=e.delay||0,this.loop=null!=e.loop&&e.loop,this.gap=e.gap||0,this.easing=e.easing||"linear",this.onframe=e.onframe,this.ondestroy=e.ondestroy,this.onrestart=e.onrestart}return e.prototype.step=function(e,t){if(this._initialized||(this._startTime=e+this._delay,this._initialized=!0),!this._paused){var r=(e-this._startTime-this._pausedTime)/this._life;r<0&&(r=0),r=Math.min(r,1);var i=this.easing,n="string"===typeof i?ca[i]:i,a="function"===typeof n?n(r):r;if(this.onframe&&this.onframe(a),1===r){if(!this.loop)return!0;this._restart(e),this.onrestart&&this.onrestart()}return!1}this._pausedTime+=t},e.prototype._restart=function(e){var t=(e-this._startTime-this._pausedTime)%this._life;this._startTime=e-t+this.gap,this._pausedTime=0},e.prototype.pause=function(){this._paused=!0},e.prototype.resume=function(){this._paused=!1},e}(),fa=da,pa={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function ma(e){return e=Math.round(e),e<0?0:e>255?255:e}function ga(e){return e<0?0:e>1?1:e}function _a(e){var t=e;return t.length&&"%"===t.charAt(t.length-1)?ma(parseFloat(t)/100*255):ma(parseInt(t,10))}function va(e){var t=e;return t.length&&"%"===t.charAt(t.length-1)?ga(parseFloat(t)/100):ga(parseFloat(t))}function ya(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}function xa(e,t,r,i,n){return e[0]=t,e[1]=r,e[2]=i,e[3]=n,e}function Ta(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}var ba=new $r(20),wa=null;function Ea(e,t){wa&&Ta(wa,t),wa=ba.put(e,wa||t.slice())}function Sa(e,t){if(e){t=t||[];var r=ba.get(e);if(r)return Ta(t,r);e+="";var i=e.replace(/ /g,"").toLowerCase();if(i in pa)return Ta(t,pa[i]),Ea(e,t),t;var n=i.length;if("#"!==i.charAt(0)){var a=i.indexOf("("),o=i.indexOf(")");if(-1!==a&&o+1===n){var s=i.substr(0,a),l=i.substr(a+1,o-(a+1)).split(","),u=1;switch(s){case"rgba":if(4!==l.length)return 3===l.length?xa(t,+l[0],+l[1],+l[2],1):xa(t,0,0,0,1);u=va(l.pop());case"rgb":return 3!==l.length?void xa(t,0,0,0,1):(xa(t,_a(l[0]),_a(l[1]),_a(l[2]),u),Ea(e,t),t);case"hsla":return 4!==l.length?void xa(t,0,0,0,1):(l[3]=va(l[3]),Ma(l,t),Ea(e,t),t);case"hsl":return 3!==l.length?void xa(t,0,0,0,1):(Ma(l,t),Ea(e,t),t);default:return}}xa(t,0,0,0,1)}else{if(4===n||5===n){var h=parseInt(i.slice(1,4),16);return h>=0&&h<=4095?(xa(t,(3840&h)>>4|(3840&h)>>8,240&h|(240&h)>>4,15&h|(15&h)<<4,5===n?parseInt(i.slice(4),16)/15:1),Ea(e,t),t):void xa(t,0,0,0,1)}if(7===n||9===n){h=parseInt(i.slice(1,7),16);return h>=0&&h<=16777215?(xa(t,(16711680&h)>>16,(65280&h)>>8,255&h,9===n?parseInt(i.slice(7),16)/255:1),Ea(e,t),t):void xa(t,0,0,0,1)}}}}function Ma(e,t){var r=(parseFloat(e[0])%360+360)%360/360,i=va(e[1]),n=va(e[2]),a=n<=.5?n*(i+1):n+i-n*i,o=2*n-a;return t=t||[],xa(t,ma(255*ya(o,a,r+1/3)),ma(255*ya(o,a,r)),ma(255*ya(o,a,r-1/3)),1),4===e.length&&(t[3]=e[3]),t}var Aa=Object.prototype.toString,Na=Array.prototype,Ca=Na.forEach,Pa=(Na.filter,Na.slice),La=(Na.map,function(){}.constructor),Oa=La?La.prototype:null,Da={};function Ra(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];"undefined"!==typeof console&&console.error.apply(console,e)}function Ia(e){return!!e&&("string"!==typeof e&&"number"===typeof e.length)}function Fa(e,t,r){if(e&&t)if(e.forEach&&e.forEach===Ca)e.forEach(t,r);else if(e.length===+e.length)for(var i=0,n=e.length;i<n;i++)t.call(r,e[i],i,e);else for(var a in e)e.hasOwnProperty(a)&&t.call(r,e[a],a,e)}function Ba(e){if(!e)return[];if(Object.keys)return Object.keys(e);var t=[];for(var r in e)e.hasOwnProperty(r)&&t.push(r);return t}function za(e,t){for(var r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];return function(){return e.apply(t,r.concat(Pa.call(arguments)))}}Da.createCanvas=function(){return document.createElement("canvas")};Oa&&Ga(Oa.bind)&&Oa.call.bind(Oa.bind);function Ua(e){return Array.isArray?Array.isArray(e):"[object Array]"===Aa.call(e)}function Ga(e){return"function"===typeof e}(function(){function e(t){this.data={};var r=Ua(t);this.data={};var i=this;function n(e,t){r?i.set(e,t):i.set(t,e)}t instanceof e?t.each(n):t&&Fa(t,n)}e.prototype.get=function(e){return this.data.hasOwnProperty(e)?this.data[e]:null},e.prototype.set=function(e,t){return this.data[e]=t},e.prototype.each=function(e,t){for(var r in this.data)this.data.hasOwnProperty(r)&&e.call(t,this.data[r],r)},e.prototype.keys=function(){return Ba(this.data)},e.prototype.removeKey=function(e){delete this.data[e]}})();function ka(e,t){for(var r=new e.constructor(e.length+t.length),i=0;i<e.length;i++)r[i]=e[i];var n=e.length;for(i=0;i<t.length;i++)r[i+n]=t[i];return r}var Ha=Array.prototype.slice;function Va(e,t,r){return(t-e)*r+e}function Wa(e,t,r){return r>.5?t:e}function ja(e,t,r,i){for(var n=t.length,a=0;a<n;a++)e[a]=Va(t[a],r[a],i)}function Xa(e,t,r,i){for(var n=t.length,a=n&&t[0].length,o=0;o<n;o++){e[o]||(e[o]=[]);for(var s=0;s<a;s++)e[o][s]=Va(t[o][s],r[o][s],i)}}function qa(e,t,r,i){for(var n=t.length,a=0;a<n;a++)e[a]=t[a]+r[a]*i;return e}function Ya(e,t,r,i){for(var n=t.length,a=n&&t[0].length,o=0;o<n;o++){e[o]||(e[o]=[]);for(var s=0;s<a;s++)e[o][s]=t[o][s]+r[o][s]*i}return e}function Za(e,t,r){var i=e,n=t;if(i.push&&n.push){var a=i.length,o=n.length;if(a!==o){var s=a>o;if(s)i.length=o;else for(var l=a;l<o;l++)i.push(1===r?n[l]:Ha.call(n[l]))}var u=i[0]&&i[0].length;for(l=0;l<i.length;l++)if(1===r)isNaN(i[l])&&(i[l]=n[l]);else for(var h=0;h<u;h++)isNaN(i[l][h])&&(i[l][h]=n[l][h])}}function Ka(e,t){var r=e.length;if(r!==t.length)return!1;for(var i=0;i<r;i++)if(e[i]!==t[i])return!1;return!0}function Qa(e,t,r,i,n,a,o){var s=.5*(r-e),l=.5*(i-t);return(2*(t-r)+s+l)*o+(-3*(t-r)-2*s-l)*a+s*n+t}function Ja(e,t,r,i,n,a,o,s){for(var l=t.length,u=0;u<l;u++)e[u]=Qa(t[u],r[u],i[u],n[u],a,o,s)}function $a(e,t,r,i,n,a,o,s){for(var l=t.length,u=t[0].length,h=0;h<l;h++){e[h]||(e[1]=[]);for(var c=0;c<u;c++)e[h][c]=Qa(t[h][c],r[h][c],i[h][c],n[h][c],a,o,s)}}function eo(e){if(Ia(e)){var t=e.length;if(Ia(e[0])){for(var r=[],i=0;i<t;i++)r.push(Ha.call(e[i]));return r}return Ha.call(e)}return e}function to(e){return e[0]=Math.floor(e[0]),e[1]=Math.floor(e[1]),e[2]=Math.floor(e[2]),"rgba("+e.join(",")+")"}function ro(e){return Ia(e&&e[0])?2:1}var io=[0,0,0,0],no=function(){function e(e){this.keyframes=[],this.maxTime=0,this.arrDim=0,this.interpolable=!0,this._needsSort=!1,this._isAllValueEqual=!0,this._lastFrame=0,this._lastFramePercent=0,this.propName=e}return e.prototype.isFinished=function(){return this._finished},e.prototype.setFinished=function(){this._finished=!0,this._additiveTrack&&this._additiveTrack.setFinished()},e.prototype.needsAnimate=function(){return!this._isAllValueEqual&&this.keyframes.length>=2&&this.interpolable},e.prototype.getAdditiveTrack=function(){return this._additiveTrack},e.prototype.addKeyframe=function(e,t){e>=this.maxTime?this.maxTime=e:this._needsSort=!0;var r=this.keyframes,i=r.length;if(this.interpolable)if(Ia(t)){var n=ro(t);if(i>0&&this.arrDim!==n)return void(this.interpolable=!1);if(1===n&&"number"!==typeof t[0]||2===n&&"number"!==typeof t[0][0])return void(this.interpolable=!1);if(i>0){var a=r[i-1];this._isAllValueEqual&&(1===n&&Ka(t,a.value)||(this._isAllValueEqual=!1))}this.arrDim=n}else{if(this.arrDim>0)return void(this.interpolable=!1);if("string"===typeof t){var o=Sa(t);o?(t=o,this.isValueColor=!0):this.interpolable=!1}else if("number"!==typeof t)return void(this.interpolable=!1);if(this._isAllValueEqual&&i>0){a=r[i-1];(this.isValueColor&&!Ka(a.value,t)||a.value!==t)&&(this._isAllValueEqual=!1)}}var s={time:e,value:t,percent:0};return this.keyframes.push(s),s},e.prototype.prepare=function(e){var t=this.keyframes;this._needsSort&&t.sort((function(e,t){return e.time-t.time}));for(var r=this.arrDim,i=t.length,n=t[i-1],a=0;a<i;a++)t[a].percent=t[a].time/this.maxTime,r>0&&a!==i-1&&Za(t[a].value,n.value,r);if(e&&this.needsAnimate()&&e.needsAnimate()&&r===e.arrDim&&this.isValueColor===e.isValueColor&&!e._finished){this._additiveTrack=e;var o=t[0].value;for(a=0;a<i;a++)0===r?this.isValueColor?t[a].additiveValue=qa([],t[a].value,o,-1):t[a].additiveValue=t[a].value-o:1===r?t[a].additiveValue=qa([],t[a].value,o,-1):2===r&&(t[a].additiveValue=Ya([],t[a].value,o,-1))}},e.prototype.step=function(e,t){if(!this._finished){this._additiveTrack&&this._additiveTrack._finished&&(this._additiveTrack=null);var r,i=null!=this._additiveTrack,n=i?"additiveValue":"value",a=this.keyframes,o=this.keyframes.length,s=this.propName,l=this.arrDim,u=this.isValueColor;if(t<0)r=0;else if(t<this._lastFramePercent){var h=Math.min(this._lastFrame+1,o-1);for(r=h;r>=0;r--)if(a[r].percent<=t)break;r=Math.min(r,o-2)}else{for(r=this._lastFrame;r<o;r++)if(a[r].percent>t)break;r=Math.min(r-1,o-2)}var c=a[r+1],d=a[r];if(d&&c){this._lastFrame=r,this._lastFramePercent=t;var f=c.percent-d.percent;if(0!==f){var p=(t-d.percent)/f,m=i?this._additiveValue:u?io:e[s];if((l>0||u)&&!m&&(m=this._additiveValue=[]),this.useSpline){var g=a[r][n],_=a[0===r?r:r-1][n],v=a[r>o-2?o-1:r+1][n],y=a[r>o-3?o-1:r+2][n];if(l>0)1===l?Ja(m,_,g,v,y,p,p*p,p*p*p):$a(m,_,g,v,y,p,p*p,p*p*p);else if(u)Ja(m,_,g,v,y,p,p*p,p*p*p),i||(e[s]=to(m));else{var x=void 0;x=this.interpolable?Qa(_,g,v,y,p,p*p,p*p*p):v,i?this._additiveValue=x:e[s]=x}}else if(l>0)1===l?ja(m,d[n],c[n],p):Xa(m,d[n],c[n],p);else if(u)ja(m,d[n],c[n],p),i||(e[s]=to(m));else{x=void 0;x=this.interpolable?Va(d[n],c[n],p):Wa(d[n],c[n],p),i?this._additiveValue=x:e[s]=x}i&&this._addToTarget(e)}}}},e.prototype._addToTarget=function(e){var t=this.arrDim,r=this.propName,i=this._additiveValue;0===t?this.isValueColor?(Sa(e[r],io),qa(io,io,i,1),e[r]=to(io)):e[r]=e[r]+i:1===t?qa(e[r],e[r],i,1):2===t&&Ya(e[r],e[r],i,1)},e}(),ao=function(){function e(e,t,r){this._tracks={},this._trackKeys=[],this._delay=0,this._maxTime=0,this._paused=!1,this._started=0,this._clip=null,this._target=e,this._loop=t,t&&r?Ra("Can' use additive animation on looped animation."):this._additiveAnimators=r}return e.prototype.getTarget=function(){return this._target},e.prototype.changeTarget=function(e){this._target=e},e.prototype.when=function(e,t){return this.whenWithKeys(e,t,Ba(t))},e.prototype.whenWithKeys=function(e,t,r){for(var i=this._tracks,n=0;n<r.length;n++){var a=r[n],o=i[a];if(!o){o=i[a]=new no(a);var s=void 0,l=this._getAdditiveTrack(a);if(l){var u=l.keyframes[l.keyframes.length-1];s=u&&u.value,l.isValueColor&&s&&(s=to(s))}else s=this._target[a];if(null==s)continue;0!==e&&o.addKeyframe(0,eo(s)),this._trackKeys.push(a)}o.addKeyframe(e,eo(t[a]))}return this._maxTime=Math.max(this._maxTime,e),this},e.prototype.pause=function(){this._clip.pause(),this._paused=!0},e.prototype.resume=function(){this._clip.resume(),this._paused=!1},e.prototype.isPaused=function(){return!!this._paused},e.prototype._doneCallback=function(){this._setTracksFinished(),this._clip=null;var e=this._doneList;if(e)for(var t=e.length,r=0;r<t;r++)e[r].call(this)},e.prototype._abortedCallback=function(){this._setTracksFinished();var e=this.animation,t=this._abortedList;if(e&&e.removeClip(this._clip),this._clip=null,t)for(var r=0;r<t.length;r++)t[r].call(this)},e.prototype._setTracksFinished=function(){for(var e=this._tracks,t=this._trackKeys,r=0;r<t.length;r++)e[t[r]].setFinished()},e.prototype._getAdditiveTrack=function(e){var t,r=this._additiveAnimators;if(r)for(var i=0;i<r.length;i++){var n=r[i].getTrack(e);n&&(t=n)}return t},e.prototype.start=function(e,t){if(!(this._started>0)){this._started=1;for(var r=this,i=[],n=0;n<this._trackKeys.length;n++){var a=this._trackKeys[n],o=this._tracks[a],s=this._getAdditiveTrack(a),l=o.keyframes;if(o.prepare(s),o.needsAnimate())i.push(o);else if(!o.interpolable){var u=l[l.length-1];u&&(r._target[o.propName]=u.value)}}if(i.length||t){var h=new fa({life:this._maxTime,loop:this._loop,delay:this._delay,onframe:function(e){r._started=2;var t=r._additiveAnimators;if(t){for(var n=!1,a=0;a<t.length;a++)if(t[a]._clip){n=!0;break}n||(r._additiveAnimators=null)}for(a=0;a<i.length;a++)i[a].step(r._target,e);var o=r._onframeList;if(o)for(a=0;a<o.length;a++)o[a](r._target,e)},ondestroy:function(){r._doneCallback()}});this._clip=h,this.animation&&this.animation.addClip(h),e&&"spline"!==e&&(h.easing=e)}else this._doneCallback();return this}},e.prototype.stop=function(e){if(this._clip){var t=this._clip;e&&t.onframe(1),this._abortedCallback()}},e.prototype.delay=function(e){return this._delay=e,this},e.prototype.during=function(e){return e&&(this._onframeList||(this._onframeList=[]),this._onframeList.push(e)),this},e.prototype.done=function(e){return e&&(this._doneList||(this._doneList=[]),this._doneList.push(e)),this},e.prototype.aborted=function(e){return e&&(this._abortedList||(this._abortedList=[]),this._abortedList.push(e)),this},e.prototype.getClip=function(){return this._clip},e.prototype.getTrack=function(e){return this._tracks[e]},e.prototype.stopTracks=function(e,t){if(!e.length||!this._clip)return!0;for(var r=this._tracks,i=this._trackKeys,n=0;n<e.length;n++){var a=r[e[n]];a&&(t?a.step(this._target,1):1===this._started&&a.step(this._target,0),a.setFinished())}var o=!0;for(n=0;n<i.length;n++)if(!r[i[n]].isFinished()){o=!1;break}return o&&this._abortedCallback(),o},e.prototype.saveFinalToTarget=function(e,t){if(e){t=t||this._trackKeys;for(var r=0;r<t.length;r++){var i=t[r],n=this._tracks[i];if(n&&!n.isFinished()){var a=n.keyframes,o=a[a.length-1];if(o){var s=eo(o.value);n.isValueColor&&(s=to(s)),e[i]=s}}}}},e.prototype.__changeFinalValue=function(e,t){t=t||Ba(e);for(var r=0;r<t.length;r++){var i=t[r],n=this._tracks[i];if(n){var a=n.keyframes;if(a.length>1){var o=a.pop();n.addKeyframe(o.time,e[i]),n.prepare(n.getAdditiveTrack())}}}},e}(),oo=ao,so={_animators:null,getAnimators:function(){return this._animators=this._animators||[],this._animators},animate:function(e,t){this._animators=this._animators||[];var r,i=this;if(e){for(var n=e.split("."),a=i,o=0,s=n.length;o<s;o++)a&&(a=a[n[o]]);a&&(r=a)}else r=i;if(null==r)throw new Error("Target "+e+" not exists");var l=this._animators,u=new oo(r,t),h=this;return u.during((function(){h.__zr&&h.__zr.refresh()})).done((function(){var e=l.indexOf(u);e>=0&&l.splice(e,1)})),l.push(u),this.__zr&&this.__zr.animation.addAnimator(u),u},stopAnimation:function(e){this._animators=this._animators||[];for(var t=this._animators,r=t.length,i=0;i<r;i++)t[i].stop(e);return t.length=0,this},addAnimatorsToZr:function(e){if(this._animators)for(var t=0;t<this._animators.length;t++)e.animation.addAnimator(this._animators[t])},removeAnimatorsFromZr:function(e){if(this._animators)for(var t=0;t<this._animators.length;t++)e.animation.removeAnimator(this._animators[t])}},lo=so,uo="\n@export clay.util.rand\nhighp float rand(vec2 uv) {\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n return fract(sin(sn) * c);\n}\n@end\n@export clay.util.calculate_attenuation\nuniform float attenuationFactor : 5.0;\nfloat lightAttenuation(float dist, float range)\n{\n float attenuation = 1.0;\n attenuation = dist*dist/(range*range+1.0);\n float att_s = attenuationFactor;\n attenuation = 1.0/(attenuation*att_s+1.0);\n att_s = 1.0/(att_s+1.0);\n attenuation = attenuation - att_s;\n attenuation /= 1.0 - att_s;\n return clamp(attenuation, 0.0, 1.0);\n}\n@end\n@export clay.util.edge_factor\n#ifdef SUPPORT_STANDARD_DERIVATIVES\nfloat edgeFactor(float width)\n{\n vec3 d = fwidth(v_Barycentric);\n vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n return min(min(a3.x, a3.y), a3.z);\n}\n#else\nfloat edgeFactor(float width)\n{\n return 1.0;\n}\n#endif\n@end\n@export clay.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n const vec4 bit_mask = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n vec4 res = fract(depth * bitShifts);\n res -= res.xxyz * bit_mask;\n return res;\n}\n@end\n@export clay.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n return dot(color, bitShifts);\n}\n@end\n@export clay.util.float\n@import clay.util.encode_float\n@import clay.util.decode_float\n@end\n@export clay.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n return range * rgbm.rgb * rgbm.a;\n}\n@end\n@export clay.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n if (dot(color, color) == 0.0) {\n return vec4(0.0);\n }\n vec4 rgbm;\n color /= range;\n rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n rgbm.rgb = color / rgbm.a;\n return rgbm;\n}\n@end\n@export clay.util.rgbm\n@import clay.util.rgbm_decode\n@import clay.util.rgbm_encode\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n return vec4(RGBMDecode(color, 8.12), 1.0);\n#else\n return color;\n#endif\n}\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n return RGBMEncode(color.xyz, 8.12);\n#else\n return color;\n#endif\n}\n@end\n@export clay.util.srgb\nvec4 sRGBToLinear(in vec4 value) {\n return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\nvec4 linearTosRGB(in vec4 value) {\n return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n@export clay.chunk.skinning_header\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n#ifdef USE_SKIN_MATRICES_TEXTURE\nuniform sampler2D skinMatricesTexture : ignore;\nuniform float skinMatricesTextureSize: ignore;\nmat4 getSkinMatrix(sampler2D tex, float idx) {\n float j = idx * 4.0;\n float x = mod(j, skinMatricesTextureSize);\n float y = floor(j / skinMatricesTextureSize) + 0.5;\n vec2 scale = vec2(skinMatricesTextureSize);\n return mat4(\n texture2D(tex, vec2(x + 0.5, y) / scale),\n texture2D(tex, vec2(x + 1.5, y) / scale),\n texture2D(tex, vec2(x + 2.5, y) / scale),\n texture2D(tex, vec2(x + 3.5, y) / scale)\n );\n}\nmat4 getSkinMatrix(float idx) {\n return getSkinMatrix(skinMatricesTexture, idx);\n}\n#else\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\nmat4 getSkinMatrix(float idx) {\n return skinMatrix[int(idx)];\n}\n#endif\n#endif\n@end\n@export clay.chunk.skin_matrix\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\nif (weight.y > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\n}\nif (weight.z > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\n}\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\nif (weightW > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.w) * weightW;\n}\n@end\n@export clay.chunk.instancing_header\n#ifdef INSTANCING\nattribute vec4 instanceMat1;\nattribute vec4 instanceMat2;\nattribute vec4 instanceMat3;\n#endif\n@end\n@export clay.chunk.instancing_matrix\nmat4 instanceMat = mat4(\n vec4(instanceMat1.xyz, 0.0),\n vec4(instanceMat2.xyz, 0.0),\n vec4(instanceMat3.xyz, 0.0),\n vec4(instanceMat1.w, instanceMat2.w, instanceMat3.w, 1.0)\n);\n@end\n@export clay.util.parallax_correct\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n vec3 first = (boxMax - pos) / dir;\n vec3 second = (boxMin - pos) / dir;\n vec3 further = max(first, second);\n float dist = min(further.x, min(further.y, further.z));\n vec3 fixedPos = pos + dir * dist;\n vec3 boxCenter = (boxMax + boxMin) * 0.5;\n return normalize(fixedPos - boxCenter);\n}\n@end\n@export clay.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n float eye = step(0.5, coord.x) * 0.5;\n vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n return texture2D(texture, coordClamped);\n}\n@end\n@export clay.util.ACES\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n@end",ho="\n@export ecgl.common.transformUniforms\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n@end\n\n@export ecgl.common.attributes\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n@end\n\n@export ecgl.common.uv.header\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nuniform vec2 detailUvRepeat : [1.0, 1.0];\nuniform vec2 detailUvOffset : [0.0, 0.0];\n\nvarying vec2 v_Texcoord;\nvarying vec2 v_DetailTexcoord;\n@end\n\n@export ecgl.common.uv.main\nv_Texcoord = texcoord * uvRepeat + uvOffset;\nv_DetailTexcoord = texcoord * detailUvRepeat + detailUvOffset;\n@end\n\n@export ecgl.common.uv.fragmentHeader\nvarying vec2 v_Texcoord;\nvarying vec2 v_DetailTexcoord;\n@end\n\n\n@export ecgl.common.albedo.main\n\n vec4 albedoTexel = vec4(1.0);\n#ifdef DIFFUSEMAP_ENABLED\n albedoTexel = texture2D(diffuseMap, v_Texcoord);\n #ifdef SRGB_DECODE\n albedoTexel = sRGBToLinear(albedoTexel);\n #endif\n#endif\n\n#ifdef DETAILMAP_ENABLED\n vec4 detailTexel = texture2D(detailMap, v_DetailTexcoord);\n #ifdef SRGB_DECODE\n detailTexel = sRGBToLinear(detailTexel);\n #endif\n albedoTexel.rgb = mix(albedoTexel.rgb, detailTexel.rgb, detailTexel.a);\n albedoTexel.a = detailTexel.a + (1.0 - detailTexel.a) * albedoTexel.a;\n#endif\n\n@end\n\n@export ecgl.common.wireframe.vertexHeader\n\n#ifdef WIREFRAME_QUAD\nattribute vec4 barycentric;\nvarying vec4 v_Barycentric;\n#elif defined(WIREFRAME_TRIANGLE)\nattribute vec3 barycentric;\nvarying vec3 v_Barycentric;\n#endif\n\n@end\n\n@export ecgl.common.wireframe.vertexMain\n\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\n v_Barycentric = barycentric;\n#endif\n\n@end\n\n\n@export ecgl.common.wireframe.fragmentHeader\n\nuniform float wireframeLineWidth : 1;\nuniform vec4 wireframeLineColor: [0, 0, 0, 0.5];\n\n#ifdef WIREFRAME_QUAD\nvarying vec4 v_Barycentric;\nfloat edgeFactor () {\n vec4 d = fwidth(v_Barycentric);\n vec4 a4 = smoothstep(vec4(0.0), d * wireframeLineWidth, v_Barycentric);\n return min(min(min(a4.x, a4.y), a4.z), a4.w);\n}\n#elif defined(WIREFRAME_TRIANGLE)\nvarying vec3 v_Barycentric;\nfloat edgeFactor () {\n vec3 d = fwidth(v_Barycentric);\n vec3 a3 = smoothstep(vec3(0.0), d * wireframeLineWidth, v_Barycentric);\n return min(min(a3.x, a3.y), a3.z);\n}\n#endif\n\n@end\n\n\n@export ecgl.common.wireframe.fragmentMain\n\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\n if (wireframeLineWidth > 0.) {\n vec4 lineColor = wireframeLineColor;\n#ifdef SRGB_DECODE\n lineColor = sRGBToLinear(lineColor);\n#endif\n\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor()) * lineColor.a);\n }\n#endif\n@end\n\n\n\n\n@export ecgl.common.bumpMap.header\n\n#ifdef BUMPMAP_ENABLED\nuniform sampler2D bumpMap;\nuniform float bumpScale : 1.0;\n\n\nvec3 bumpNormal(vec3 surfPos, vec3 surfNormal, vec3 baseNormal)\n{\n vec2 dSTdx = dFdx(v_Texcoord);\n vec2 dSTdy = dFdy(v_Texcoord);\n\n float Hll = bumpScale * texture2D(bumpMap, v_Texcoord).x;\n float dHx = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdx).x - Hll;\n float dHy = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdy).x - Hll;\n\n vec3 vSigmaX = dFdx(surfPos);\n vec3 vSigmaY = dFdy(surfPos);\n vec3 vN = surfNormal;\n\n vec3 R1 = cross(vSigmaY, vN);\n vec3 R2 = cross(vN, vSigmaX);\n\n float fDet = dot(vSigmaX, R1);\n\n vec3 vGrad = sign(fDet) * (dHx * R1 + dHy * R2);\n return normalize(abs(fDet) * baseNormal - vGrad);\n\n}\n#endif\n\n@end\n\n@export ecgl.common.normalMap.vertexHeader\n\n#ifdef NORMALMAP_ENABLED\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n@end\n\n@export ecgl.common.normalMap.vertexMain\n\n#ifdef NORMALMAP_ENABLED\n if (dot(tangent, tangent) > 0.0) {\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n }\n#endif\n\n@end\n\n\n@export ecgl.common.normalMap.fragmentHeader\n\n#ifdef NORMALMAP_ENABLED\nuniform sampler2D normalMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n@end\n\n@export ecgl.common.normalMap.fragmentMain\n#ifdef NORMALMAP_ENABLED\n if (dot(v_Tangent, v_Tangent) > 0.0) {\n vec3 normalTexel = texture2D(normalMap, v_DetailTexcoord).xyz;\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n N = normalize(tbn * N);\n }\n }\n#endif\n@end\n\n\n\n@export ecgl.common.vertexAnimation.header\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nattribute vec3 prevNormal;\nuniform float percent;\n#endif\n\n@end\n\n@export ecgl.common.vertexAnimation.main\n\n#ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n vec3 norm = mix(prevNormal, normal, percent);\n#else\n vec3 pos = position;\n vec3 norm = normal;\n#endif\n\n@end\n\n\n@export ecgl.common.ssaoMap.header\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n@end\n\n@export ecgl.common.ssaoMap.main\n float ao = 1.0;\n#ifdef SSAOMAP_ENABLED\n ao = texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\n#endif\n@end\n\n\n\n\n@export ecgl.common.diffuseLayer.header\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\nuniform float layerDiffuseIntensity[LAYER_DIFFUSEMAP_COUNT];\nuniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];\n#endif\n\n@end\n\n@export ecgl.common.emissiveLayer.header\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\nuniform float layerEmissionIntensity[LAYER_EMISSIVEMAP_COUNT];\nuniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];\n#endif\n\n@end\n\n@export ecgl.common.layers.header\n@import ecgl.common.diffuseLayer.header\n@import ecgl.common.emissiveLayer.header\n@end\n\n@export ecgl.common.diffuseLayer.main\n\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\n for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{\n float intensity = layerDiffuseIntensity[_idx_];\n vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);\n #ifdef SRGB_DECODE\n texel2 = sRGBToLinear(texel2);\n #endif\n albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb * intensity, texel2.a);\n albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;\n }}\n#endif\n\n@end\n\n@export ecgl.common.emissiveLayer.main\n\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\n for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++)\n {{\n vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord) * layerEmissionIntensity[_idx_];\n #ifdef SRGB_DECODE\n texel2 = sRGBToLinear(texel2);\n #endif\n float intensity = layerEmissionIntensity[_idx_];\n gl_FragColor.rgb += texel2.rgb * texel2.a * intensity;\n }}\n#endif\n\n@end\n",co="@export ecgl.color.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\n@import ecgl.common.uv.header\n\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position: POSITION;\n\n@import ecgl.common.wireframe.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nuniform float percent : 1.0;\n#endif\n\n#ifdef ATMOSPHERE_ENABLED\nattribute vec3 normal: NORMAL;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nvarying vec3 v_Normal;\n#endif\n\nvoid main()\n{\n#ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n#else\n vec3 pos = position;\n#endif\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n @import ecgl.common.uv.main\n\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n\n#ifdef ATMOSPHERE_ENABLED\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\n#endif\n\n @import ecgl.common.wireframe.vertexMain\n\n}\n\n@end\n\n@export ecgl.color.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n\nuniform sampler2D diffuseMap;\nuniform sampler2D detailMap;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\n#ifdef ATMOSPHERE_ENABLED\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\nuniform vec3 glowColor;\nuniform float glowPower;\nvarying vec3 v_Normal;\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n@import ecgl.common.layers.header\n\n@import ecgl.common.uv.fragmentHeader\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color);\n#else\n gl_FragColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n#endif\n\n @import ecgl.common.albedo.main\n\n @import ecgl.common.diffuseLayer.main\n\n gl_FragColor *= albedoTexel;\n\n#ifdef ATMOSPHERE_ENABLED\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\n gl_FragColor.rgb += glowColor * atmoIntensity;\n#endif\n\n @import ecgl.common.emissiveLayer.main\n\n @import ecgl.common.wireframe.fragmentMain\n\n}\n@end",fo="/**\n * http: */\n\n@export ecgl.lambert.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n\n@import ecgl.common.attributes\n\n@import ecgl.common.wireframe.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\n\n@import ecgl.common.vertexAnimation.header\n\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n @import ecgl.common.uv.main\n\n @import ecgl.common.vertexAnimation.main\n\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\n\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n\n @import ecgl.common.wireframe.vertexMain\n}\n\n@end\n\n\n@export ecgl.lambert.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n\n#define NORMAL_UP_AXIS 1\n#define NORMAL_FRONT_AXIS 2\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\nuniform sampler2D detailMap;\n\n@import ecgl.common.layers.header\n\nuniform float emissionIntensity: 1.0;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef ATMOSPHERE_ENABLED\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\nuniform vec3 glowColor;\nuniform float glowPower;\n#endif\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n\n@import ecgl.common.ssaoMap.header\n\n@import ecgl.common.bumpMap.header\n\n@import clay.util.srgb\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.plugin.compute_shadow_map\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color);\n#else\n gl_FragColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n #ifdef SRGB_DECODE\n gl_FragColor *= sRGBToLinear(v_Color);\n #else\n gl_FragColor *= v_Color;\n #endif\n#endif\n\n @import ecgl.common.albedo.main\n\n @import ecgl.common.diffuseLayer.main\n\n gl_FragColor *= albedoTexel;\n\n vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n\n float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n ambientFactor = dot(v_Normal, N);\n#endif\n\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\n\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n\n @import ecgl.common.ssaoMap.main\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\n {\n diffuseColor += ambientLightColor[i] * ambientFactor * ao;\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseColor += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\n }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n vec3 lightColor = directionalLightColor[i];\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\n\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0);\n }\n#endif\n\n gl_FragColor.rgb *= diffuseColor;\n\n#ifdef ATMOSPHERE_ENABLED\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\n gl_FragColor.rgb += glowColor * atmoIntensity;\n#endif\n\n @import ecgl.common.emissiveLayer.main\n\n @import ecgl.common.wireframe.fragmentMain\n}\n\n@end",po="@export ecgl.realistic.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n@import ecgl.common.attributes\n\n\n@import ecgl.common.wireframe.vertexHeader\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\n#ifdef NORMALMAP_ENABLED\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n@import ecgl.common.vertexAnimation.header\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n\n @import ecgl.common.uv.main\n\n @import ecgl.common.vertexAnimation.main\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\n\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n\n#ifdef NORMALMAP_ENABLED\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n\n @import ecgl.common.wireframe.vertexMain\n\n}\n\n@end\n\n\n\n@export ecgl.realistic.fragment\n\n#define LAYER_DIFFUSEMAP_COUNT 0\n#define LAYER_EMISSIVEMAP_COUNT 0\n#define PI 3.14159265358979\n#define ROUGHNESS_CHANEL 0\n#define METALNESS_CHANEL 1\n\n#define NORMAL_UP_AXIS 1\n#define NORMAL_FRONT_AXIS 2\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\n\nuniform sampler2D detailMap;\nuniform sampler2D metalnessMap;\nuniform sampler2D roughnessMap;\n\n@import ecgl.common.layers.header\n\nuniform float emissionIntensity: 1.0;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nuniform float metalness : 0.0;\nuniform float roughness : 0.5;\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef ATMOSPHERE_ENABLED\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\nuniform vec3 glowColor;\nuniform float glowPower;\n#endif\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import clay.header.ambient_cubemap_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n@import ecgl.common.normalMap.fragmentHeader\n\n@import ecgl.common.ssaoMap.header\n\n@import ecgl.common.bumpMap.header\n\n@import clay.util.srgb\n\n@import clay.util.rgbm\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.plugin.compute_shadow_map\n\nvec3 F_Schlick(float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n\nfloat D_Phong(float g, float ndh) {\n float a = pow(8192.0, g);\n return (a + 2.0) / 8.0 * pow(ndh, a);\n}\n\nvoid main()\n{\n vec4 albedoColor = color;\n\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n#ifdef VERTEX_COLOR\n #ifdef SRGB_DECODE\n albedoColor *= sRGBToLinear(v_Color);\n #else\n albedoColor *= v_Color;\n #endif\n#endif\n\n @import ecgl.common.albedo.main\n\n @import ecgl.common.diffuseLayer.main\n\n albedoColor *= albedoTexel;\n\n float m = metalness;\n\n#ifdef METALNESSMAP_ENABLED\n float m2 = texture2D(metalnessMap, v_DetailTexcoord)[METALNESS_CHANEL];\n m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\n#endif\n\n vec3 baseColor = albedoColor.rgb;\n albedoColor.rgb = baseColor * (1.0 - m);\n vec3 specFactor = mix(vec3(0.04), baseColor, m);\n\n float g = 1.0 - roughness;\n\n#ifdef ROUGHNESSMAP_ENABLED\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n#endif\n\n vec3 N = v_Normal;\n\n#ifdef DOUBLE_SIDED\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n\n float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n ambientFactor = dot(v_Normal, N);\n#endif\n\n@import ecgl.common.normalMap.fragmentMain\n\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\n\n vec3 diffuseTerm = vec3(0.0);\n vec3 specularTerm = vec3(0.0);\n\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n vec3 fresnelTerm = F_Schlick(ndv, specFactor);\n\n @import ecgl.common.ssaoMap.main\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += ambientLightColor[_idx_] * ambientFactor * ao;\n }}\n#endif\n\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\n }}\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n {{\n vec3 L = -directionalLightDirection[_idx_];\n vec3 lc = directionalLightColor[_idx_];\n\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, normalize(L)), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsDir[_idx_];\n }\n#endif\n\n vec3 li = lc * ndl * shadowContrib;\n\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }}\n#endif\n\n\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n vec3 L = reflect(-V, N);\n L = vec3(L.x, L[NORMAL_UP_AXIS], L[NORMAL_FRONT_AXIS]);\n float rough2 = clamp(1.0 - g, 0.0, 1.0);\n float bias2 = rough2 * 5.0;\n vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n vec3 envWeight2 = specFactor * brdfParam2.x + brdfParam2.y;\n vec3 envTexel2;\n for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n {{\n envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 8.12);\n specularTerm += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2 * ao;\n }}\n#endif\n\n gl_FragColor.rgb = albedoColor.rgb * diffuseTerm + specularTerm;\n gl_FragColor.a = albedoColor.a;\n\n#ifdef ATMOSPHERE_ENABLED\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\n gl_FragColor.rgb += glowColor * atmoIntensity;\n#endif\n\n#ifdef SRGB_ENCODE\n gl_FragColor = linearTosRGB(gl_FragColor);\n#endif\n\n @import ecgl.common.emissiveLayer.main\n\n @import ecgl.common.wireframe.fragmentMain\n}\n\n@end",mo="@export ecgl.hatching.vertex\n\n@import ecgl.realistic.vertex\n\n@end\n\n\n@export ecgl.hatching.fragment\n\n#define NORMAL_UP_AXIS 1\n#define NORMAL_FRONT_AXIS 2\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform vec4 color : [0.0, 0.0, 0.0, 1.0];\nuniform vec4 paperColor : [1.0, 1.0, 1.0, 1.0];\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\n\n@import ecgl.common.ssaoMap.header\n\n@import ecgl.common.bumpMap.header\n\n@import clay.util.srgb\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.plugin.compute_shadow_map\n\nuniform sampler2D hatch1;\nuniform sampler2D hatch2;\nuniform sampler2D hatch3;\nuniform sampler2D hatch4;\nuniform sampler2D hatch5;\nuniform sampler2D hatch6;\n\nfloat shade(in float tone) {\n vec4 c = vec4(1. ,1., 1., 1.);\n float step = 1. / 6.;\n vec2 uv = v_DetailTexcoord;\n if (tone <= step / 2.0) {\n c = mix(vec4(0.), texture2D(hatch6, uv), 12. * tone);\n }\n else if (tone <= step) {\n c = mix(texture2D(hatch6, uv), texture2D(hatch5, uv), 6. * tone);\n }\n if(tone > step && tone <= 2. * step){\n c = mix(texture2D(hatch5, uv), texture2D(hatch4, uv) , 6. * (tone - step));\n }\n if(tone > 2. * step && tone <= 3. * step){\n c = mix(texture2D(hatch4, uv), texture2D(hatch3, uv), 6. * (tone - 2. * step));\n }\n if(tone > 3. * step && tone <= 4. * step){\n c = mix(texture2D(hatch3, uv), texture2D(hatch2, uv), 6. * (tone - 3. * step));\n }\n if(tone > 4. * step && tone <= 5. * step){\n c = mix(texture2D(hatch2, uv), texture2D(hatch1, uv), 6. * (tone - 4. * step));\n }\n if(tone > 5. * step){\n c = mix(texture2D(hatch1, uv), vec4(1.), 6. * (tone - 5. * step));\n }\n\n return c.r;\n}\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n vec4 inkColor = sRGBToLinear(color);\n#else\n vec4 inkColor = color;\n#endif\n\n#ifdef VERTEX_COLOR\n #ifdef SRGB_DECODE\n inkColor *= sRGBToLinear(v_Color);\n #else\n inkColor *= v_Color;\n #endif\n#endif\n\n vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n\n float tone = 0.0;\n\n float ambientFactor = 1.0;\n\n#ifdef BUMPMAP_ENABLED\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n ambientFactor = dot(v_Normal, N);\n#endif\n\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\n\n @import ecgl.common.ssaoMap.main\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\n {\n tone += dot(ambientLightColor[i], w) * ambientFactor * ao;\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n tone += dot(calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_], w) * ao;\n }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n float lightTone = dot(directionalLightColor[i], w);\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\n\n tone += lightTone * clamp(ndl, 0.0, 1.0);\n }\n#endif\n\n gl_FragColor = mix(inkColor, paperColor, shade(clamp(tone, 0.0, 1.0)));\n }\n@end\n",go="@export ecgl.sm.depth.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nuniform float percent : 1.0;\n#endif\n\nvarying vec4 v_ViewPosition;\nvarying vec2 v_Texcoord;\n\nvoid main(){\n\n#ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n#else\n vec3 pos = position;\n#endif\n\n v_ViewPosition = worldViewProjection * vec4(pos, 1.0);\n gl_Position = v_ViewPosition;\n\n v_Texcoord = texcoord;\n\n}\n@end\n\n\n\n@export ecgl.sm.depth.fragment\n\n@import clay.sm.depth.fragment\n\n@end";function _o(e){return!e||"none"===e}function vo(e){return e instanceof HTMLCanvasElement||e instanceof HTMLImageElement||e instanceof Image}function yo(e){return e.getZr&&e.setOption}Object.assign(Wt.prototype,lo),Ye.import(uo),Ye.import(Ze),Ye.import(ho),Ye.import(co),Ye.import(fo),Ye.import(po),Ye.import(mo),Ye.import(go);var xo=Zr.prototype.addToScene,To=Zr.prototype.removeFromScene;Zr.prototype.addToScene=function(e){if(xo.call(this,e),this.__zr){var t=this.__zr;e.traverse((function(e){e.__zr=t,e.addAnimatorsToZr&&e.addAnimatorsToZr(t)}))}},Zr.prototype.removeFromScene=function(e){To.call(this,e),e.traverse((function(e){var t=e.__zr;e.__zr=null,t&&e.removeAnimatorsFromZr&&e.removeAnimatorsFromZr(t)}))},ne.prototype.setTextureImage=function(e,t,r,i){if(this.shader){var n,a=r.getZr(),o=this;return o.autoUpdateTextureStatus=!1,o.disableTexture(e),_o(t)||(n=bo.loadTexture(t,r,i,(function(t){o.enableTexture(e),a&&a.refresh()})),o.set(e,n)),n}};var bo={};bo.Renderer=dt,bo.Node=Wt,bo.Mesh=tr,bo.Shader=Ye,bo.Material=ne,bo.Texture=$t,bo.Texture2D=lr,bo.Geometry=Tr,bo.SphereGeometry=kn,bo.PlaneGeometry=wi,bo.CubeGeometry=Ai,bo.AmbientLight=Vn,bo.DirectionalLight=jn,bo.PointLight=qn,bo.SpotLight=Zn,bo.PerspectiveCamera=oi,bo.OrthographicCamera=gn,bo.Vector2=de,bo.Vector3=xt,bo.Vector4=$n,bo.Quaternion=Bt,bo.Matrix2=ia,bo.Matrix2d=sa,bo.Matrix3=ua,bo.Matrix4=Dt,bo.Plane=Or,bo.Ray=wt,bo.BoundingBox=kt,bo.Frustum=Ur;var wo=hn.createBlank("rgba(255,255,255,0)").image;function Eo(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function So(e){if((e.wrapS===$t.REPEAT||e.wrapT===$t.REPEAT)&&e.image){var t=Eo(e.width),r=Eo(e.height);if(t!==e.width||r!==e.height){var i=document.createElement("canvas");i.width=t,i.height=r;var n=i.getContext("2d");n.drawImage(e.image,0,0,t,r),e.image=i}}}bo.loadTexture=function(e,t,r,i){"function"===typeof r&&(i=r,r={}),r=r||{};for(var n=Object.keys(r).sort(),a="",o=0;o<n.length;o++)a+=n[o]+"_"+r[n[o]]+"_";var s=t.__textureCache=t.__textureCache||new $r(20);if(yo(e)){var l=e.__textureid__,u=s.get(a+l);if(u)u.texture.surface.setECharts(e),i&&i(u.texture);else{var h=new pn(e);h.onupdate=function(){t.getZr().refresh()},u={texture:h.getTexture()};for(o=0;o<n.length;o++)u.texture[n[o]]=r[n[o]];l=e.__textureid__||"__ecgl_ec__"+u.texture.__uid__,e.__textureid__=l,s.put(a+l,u),i&&i(u.texture)}return u.texture}if(vo(e)){l=e.__textureid__,u=s.get(a+l);if(!u){u={texture:new bo.Texture2D({image:e})};for(o=0;o<n.length;o++)u.texture[n[o]]=r[n[o]];l=e.__textureid__||"__ecgl_image__"+u.texture.__uid__,e.__textureid__=l,s.put(a+l,u),So(u.texture),i&&i(u.texture)}return u.texture}u=s.get(a+e);if(u)u.callbacks?u.callbacks.push(i):i&&i(u.texture);else if(e.match(/.hdr$|^data:application\/octet-stream/)){u={callbacks:[i]};var c=hn.loadTexture(e,{exposure:r.exposure,fileType:"hdr"},(function(){c.dirty(),u.callbacks.forEach((function(e){e&&e(c)})),u.callbacks=null}));u.texture=c,s.put(a+e,u)}else{for(c=new bo.Texture2D({image:new Image}),o=0;o<n.length;o++)c[n[o]]=r[n[o]];u={texture:c,callbacks:[i]};var d=c.image;d.onload=function(){c.image=d,So(c),c.dirty(),u.callbacks.forEach((function(e){e&&e(c)})),u.callbacks=null},d.crossOrigin="Anonymous",d.src=e,c.image=wo,s.put(a+e,u)}return u.texture},bo.createAmbientCubemap=function(e,t,r,i){e=e||{};var n=e.texture,a=Un.firstNotNull(e.exposure,1),o=new Cn({intensity:Un.firstNotNull(e.specularIntensity,1)}),s=new Ln({intensity:Un.firstNotNull(e.diffuseIntensity,1),coefficients:[.844,.712,.691,-.037,.083,.167,.343,.288,.299,-.041,-.021,-.009,-.003,-.041,-.064,-.011,-.007,-.004,-.031,.034,.081,-.06,-.049,-.06,.046,.056,.05]});return o.cubemap=bo.loadTexture(n,r,{exposure:a},(function(){o.cubemap.flipY=!1,o.prefilter(t,32),s.coefficients=Bn.projectEnvironmentMap(t,o.cubemap,{lod:1}),i&&i()})),{specular:o,diffuse:s}},bo.createBlankTexture=hn.createBlank,bo.isImage=vo,bo.additiveBlend=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)},bo.parseColor=function(e,t){return e instanceof Array?(t||(t=[]),t[0]=e[0],t[1]=e[1],t[2]=e[2],e.length>3?t[3]=e[3]:t[3]=1,t):(t=l["i"].parse(e||"#000",t)||[0,0,0,0],t[0]/=255,t[1]/=255,t[2]/=255,t)},bo.directionFromAlphaBeta=function(e,t){var r=e/180*Math.PI+Math.PI/2,i=-t/180*Math.PI+Math.PI/2,n=[],a=Math.sin(r);return n[0]=a*Math.cos(i),n[1]=-Math.cos(r),n[2]=a*Math.sin(i),n},bo.getShadowResolution=function(e){var t=1024;switch(e){case"low":t=512;break;case"medium":break;case"high":t=2048;break;case"ultra":t=4096;break}return t},bo.COMMON_SHADERS=["lambert","color","realistic","hatching","shadow"],bo.createShader=function(e){"ecgl.shadow"===e&&(e="ecgl.displayShadow");var t=Ye.source(e+".vertex"),r=Ye.source(e+".fragment");t||console.error("Vertex shader of '%s' not exits",e),r||console.error("Fragment shader of '%s' not exits",e);var i=new Ye(t,r);return i.name=e,i},bo.createMaterial=function(e,t){t instanceof Array||(t=[t]);var r=bo.createShader(e),i=new ne({shader:r});return t.forEach((function(e){"string"===typeof e&&i.define(e)})),i},bo.setMaterialFromModel=function(e,t,r,i){t.autoUpdateTextureStatus=!1;var n=r.getModel(e+"Material"),a=n.get("detailTexture"),o=Un.firstNotNull(n.get("textureTiling"),1),s=Un.firstNotNull(n.get("textureOffset"),0);"number"===typeof o&&(o=[o,o]),"number"===typeof s&&(s=[s,s]);var l=o[0]>1||o[1]>1?bo.Texture.REPEAT:bo.Texture.CLAMP_TO_EDGE,u={anisotropic:8,wrapS:l,wrapT:l};if("realistic"===e){var h=n.get("roughness"),c=n.get("metalness");null!=c?isNaN(c)&&(t.setTextureImage("metalnessMap",c,i,u),c=Un.firstNotNull(n.get("metalnessAdjust"),.5)):c=0,null!=h?isNaN(h)&&(t.setTextureImage("roughnessMap",h,i,u),h=Un.firstNotNull(n.get("roughnessAdjust"),.5)):h=.5;var d=n.get("normalTexture");t.setTextureImage("detailMap",a,i,u),t.setTextureImage("normalMap",d,i,u),t.set({roughness:h,metalness:c,detailUvRepeat:o,detailUvOffset:s})}else if("lambert"===e)t.setTextureImage("detailMap",a,i,u),t.set({detailUvRepeat:o,detailUvOffset:s});else if("color"===e)t.setTextureImage("detailMap",a,i,u),t.set({detailUvRepeat:o,detailUvOffset:s});else if("hatching"===e){var f=n.get("hatchingTextures")||[];f.length;for(var p=0;p<6;p++)t.setTextureImage("hatch"+(p+1),f[p],i,{anisotropic:8,wrapS:bo.Texture.REPEAT,wrapT:bo.Texture.REPEAT});t.set({detailUvRepeat:o,detailUvOffset:s})}},bo.updateVertexAnimation=function(e,t,r,i){var n=i.get("animation"),a=i.get("animationDurationUpdate"),o=i.get("animationEasingUpdate"),s=r.shadowDepthMaterial;if(n&&t&&a>0&&t.geometry.vertexCount===r.geometry.vertexCount){r.material.define("vertex","VERTEX_ANIMATION"),r.ignorePreZ=!0,s&&s.define("vertex","VERTEX_ANIMATION");for(var l=0;l<e.length;l++)r.geometry.attributes[e[l][0]].value=t.geometry.attributes[e[l][1]].value;r.geometry.dirty(),r.__percent=0,r.material.set("percent",0),r.stopAnimation(),r.animate().when(a,{__percent:1}).during((function(){r.material.set("percent",r.__percent),s&&s.set("percent",r.__percent)})).done((function(){r.ignorePreZ=!1,r.material.undefine("vertex","VERTEX_ANIMATION"),s&&s.undefine("vertex","VERTEX_ANIMATION")})).start(o)}else r.material.undefine("vertex","VERTEX_ANIMATION"),s&&s.undefine("vertex","VERTEX_ANIMATION")};var Mo,Ao=bo;Mo="undefined"!==typeof window&&(window.requestAnimationFrame&&window.requestAnimationFrame.bind(window)||window.msRequestAnimationFrame&&window.msRequestAnimationFrame.bind(window)||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame)||function(e){return setTimeout(e,16)};var No=Mo,Co=function(e,t){this.id=e,this.zr=t;try{this.renderer=new dt({clearBit:0,devicePixelRatio:t.painter.dpr,preserveDrawingBuffer:!0,premultipliedAlpha:!0}),this.renderer.resize(t.painter.getWidth(),t.painter.getHeight())}catch(i){return this.renderer=null,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute; left: 0; top: 0; right: 0; bottom: 0;",this.dom.className="ecgl-nowebgl",this.dom.innerHTML="Sorry, your browser does not support WebGL",void console.error(i)}this.onglobalout=this.onglobalout.bind(this),t.on("globalout",this.onglobalout),this.dom=this.renderer.canvas;var r=this.dom.style;r.position="absolute",r.left="0",r.top="0",this.views=[],this._picking=new Yt({renderer:this.renderer}),this._viewsToDispose=[],this._accumulatingId=0,this._zrEventProxy=new l["z"].Rect({shape:{x:-1,y:-1,width:2,height:2},__isGLToZRProxy:!0}),this._backgroundColor=null};function Po(e){var t=e.__zr;e.__zr=null,t&&e.removeAnimatorsFromZr&&e.removeAnimatorsFromZr(t)}Co.prototype.setUnpainted=function(){},Co.prototype.addView=function(e){if(e.layer!==this){var t=this._viewsToDispose.indexOf(e);t>=0&&this._viewsToDispose.splice(t,1),this.views.push(e),e.layer=this;var r=this.zr;e.scene.traverse((function(e){e.__zr=r,e.addAnimatorsToZr&&e.addAnimatorsToZr(r)}))}},Co.prototype.removeView=function(e){if(e.layer===this){var t=this.views.indexOf(e);t>=0&&(this.views.splice(t,1),e.scene.traverse(Po,this),e.layer=null,this._viewsToDispose.push(e))}},Co.prototype.removeViewsAll=function(){this.views.forEach((function(e){e.scene.traverse(Po,this),e.layer=null,this._viewsToDispose.push(e)}),this),this.views.length=0},Co.prototype.resize=function(e,t){var r=this.renderer;r.resize(e,t)},Co.prototype.clear=function(){var e=this.renderer.gl,t=this._backgroundColor||[0,0,0,0];e.clearColor(t[0],t[1],t[2],t[3]),e.depthMask(!0),e.colorMask(!0,!0,!0,!0),e.clear(e.DEPTH_BUFFER_BIT|e.COLOR_BUFFER_BIT)},Co.prototype.clearDepth=function(){var e=this.renderer.gl;e.clear(e.DEPTH_BUFFER_BIT)},Co.prototype.clearColor=function(){var e=this.renderer.gl;e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT)},Co.prototype.needsRefresh=function(){this.zr.refresh()},Co.prototype.refresh=function(e){this._backgroundColor=e?Ao.parseColor(e):[0,0,0,0],this.renderer.clearColor=this._backgroundColor;for(var t=0;t<this.views.length;t++)this.views[t].prepareRender(this.renderer);this._doRender(!1),this._trackAndClean();for(t=0;t<this._viewsToDispose.length;t++)this._viewsToDispose[t].dispose(this.renderer);this._viewsToDispose.length=0,this._startAccumulating()},Co.prototype.renderToCanvas=function(e){this._startAccumulating(!0),e.drawImage(this.dom,0,0,e.canvas.width,e.canvas.height)},Co.prototype._doRender=function(e){this.clear(),this.renderer.saveViewport();for(var t=0;t<this.views.length;t++)this.views[t].render(this.renderer,e);this.renderer.restoreViewport()},Co.prototype._stopAccumulating=function(){this._accumulatingId=0,clearTimeout(this._accumulatingTimeout)};var Lo=1;function Oo(e){for(var t=0;t<e.length;t++)e[t].__used__=0}function Do(e,t){for(var r=0;r<t.length;r++)t[r].__used__||t[r].dispose(e)}function Ro(e,t){e.__used__=e.__used__||0,e.__used__++,1===e.__used__&&t.push(e)}function Io(e,t,r){var i,n;e.traverse((function(e){if(e.isRenderable()){var a=e.geometry,o=e.material;if(o!==i)for(var s=o.getTextureUniforms(),l=0;l<s.length;l++){var u=s[l],h=o.uniforms[u].value;if(h)if(h instanceof $t)Ro(h,t);else if(h instanceof Array)for(var c=0;c<h.length;c++)h[c]instanceof $t&&Ro(h[c],t)}a!==n&&Ro(a,r),i=o,n=a}}));for(var a=0;a<e.lights.length;a++)e.lights[a].cubemap&&Ro(e.lights[a].cubemap,t)}Co.prototype._startAccumulating=function(e){var t=this;this._stopAccumulating();for(var r=!1,i=0;i<this.views.length;i++)r=this.views[i].needsAccumulate()||r;function n(i){if(t._accumulatingId&&i===t._accumulatingId){for(var a=!0,o=0;o<t.views.length;o++)a=t.views[o].isAccumulateFinished()&&r;a||(t._doRender(!0),e?n(i):No((function(){n(i)})))}}r&&(this._accumulatingId=Lo++,e?n(t._accumulatingId):this._accumulatingTimeout=setTimeout((function(){n(t._accumulatingId)}),50))},Co.prototype._trackAndClean=function(){var e=[],t=[];this._textureList&&(Oo(this._textureList),Oo(this._geometriesList));for(var r=0;r<this.views.length;r++)Io(this.views[r].scene,e,t);this._textureList&&(Do(this.renderer,this._textureList),Do(this.renderer,this._geometriesList)),this._textureList=e,this._geometriesList=t},Co.prototype.dispose=function(){this._stopAccumulating(),this.renderer.disposeScene(this.scene),this.zr.off("globalout",this.onglobalout)},Co.prototype.onmousedown=function(e){if(!e.target||!e.target.__isGLToZRProxy){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY);t&&(this._dispatchEvent("mousedown",e,t),this._dispatchDataEvent("mousedown",e,t)),this._downX=e.offsetX,this._downY=e.offsetY}},Co.prototype.onmousemove=function(e){if(!e.target||!e.target.__isGLToZRProxy){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY),r=t&&t.target,i=this._hovered;this._hovered=t,i&&r!==i.target&&(i.relatedTarget=r,this._dispatchEvent("mouseout",e,i),this.zr.setCursorStyle("default")),this._dispatchEvent("mousemove",e,t),t&&(this.zr.setCursorStyle("pointer"),i&&r===i.target||this._dispatchEvent("mouseover",e,t)),this._dispatchDataEvent("mousemove",e,t)}},Co.prototype.onmouseup=function(e){if(!e.target||!e.target.__isGLToZRProxy){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY);t&&(this._dispatchEvent("mouseup",e,t),this._dispatchDataEvent("mouseup",e,t)),this._upX=e.offsetX,this._upY=e.offsetY}},Co.prototype.onclick=Co.prototype.dblclick=function(e){if(!e.target||!e.target.__isGLToZRProxy){var t=this._upX-this._downX,r=this._upY-this._downY;if(!(Math.sqrt(t*t+r*r)>20)){e=e.event;var i=this.pickObject(e.offsetX,e.offsetY);i&&(this._dispatchEvent(e.type,e,i),this._dispatchDataEvent(e.type,e,i));var n=this._clickToSetFocusPoint(e);if(n){var a=n.view.setDOFFocusOnPoint(n.distance);a&&this.zr.refresh()}}}},Co.prototype._clickToSetFocusPoint=function(e){for(var t=this.renderer,r=t.viewport,i=this.views.length-1;i>=0;i--){var n=this.views[i];if(n.hasDOF()&&n.containPoint(e.offsetX,e.offsetY)){this._picking.scene=n.scene,this._picking.camera=n.camera,t.viewport=n.viewport;var a=this._picking.pick(e.offsetX,e.offsetY,!0);if(a)return a.view=n,a}}t.viewport=r},Co.prototype.onglobalout=function(e){var t=this._hovered;t&&this._dispatchEvent("mouseout",e,{target:t.target})},Co.prototype.pickObject=function(e,t){for(var r=[],i=this.renderer,n=i.viewport,a=0;a<this.views.length;a++){var o=this.views[a];o.containPoint(e,t)&&(this._picking.scene=o.scene,this._picking.camera=o.camera,i.viewport=o.viewport,this._picking.pickAll(e,t,r))}return i.viewport=n,r.sort((function(e,t){return e.distance-t.distance})),r[0]},Co.prototype._dispatchEvent=function(e,t,r){r||(r={});var i=r.target;r.cancelBubble=!1,r.event=t,r.type=e,r.offsetX=t.offsetX,r.offsetY=t.offsetY;while(i)if(i.trigger(e,r),i=i.getParent(),r.cancelBubble)break;this._dispatchToView(e,r)},Co.prototype._dispatchDataEvent=function(e,t,r){var i=r&&r.target,n=i&&i.dataIndex,a=i&&i.seriesIndex,o=i&&i.eventData,s=!1,u=this._zrEventProxy;u.x=t.offsetX,u.y=t.offsetY,u.update();var h={target:u};const c=l["A"].getECData(u);"mousemove"===e&&(null!=n?n!==this._lastDataIndex&&(parseInt(this._lastDataIndex,10)>=0&&(c.dataIndex=this._lastDataIndex,c.seriesIndex=this._lastSeriesIndex,this.zr.handler.dispatchToElement(h,"mouseout",t)),s=!0):null!=o&&o!==this._lastEventData&&(null!=this._lastEventData&&(c.eventData=this._lastEventData,this.zr.handler.dispatchToElement(h,"mouseout",t)),s=!0),this._lastEventData=o,this._lastDataIndex=n,this._lastSeriesIndex=a),c.eventData=o,c.dataIndex=n,c.seriesIndex=a,(null!=o||parseInt(n,10)>=0&&parseInt(a,10)>=0)&&(this.zr.handler.dispatchToElement(h,e,t),s&&this.zr.handler.dispatchToElement(h,"mouseover",t))},Co.prototype._dispatchToView=function(e,t){for(var r=0;r<this.views.length;r++)this.views[r].containPoint(t.offsetX,t.offsetY)&&this.views[r].trigger(e,t)},Object.assign(Co.prototype,v);var Fo=Co,Bo=["bar3D","line3D","map3D","scatter3D","surface","lines3D","scatterGL","scatter3D"];function zo(e,t){if(e&&e[t]&&(e[t].normal||e[t].emphasis)){var r=e[t].normal,i=e[t].emphasis;r&&(e[t]=r),i&&(e.emphasis=e.emphasis||{},e.emphasis[t]=i)}}function Uo(e){zo(e,"itemStyle"),zo(e,"lineStyle"),zo(e,"areaStyle"),zo(e,"label")}function Go(e){e&&(e instanceof Array||(e=[e]),l["Y"].each(e,(function(e){if(e.axisLabel){var t=e.axisLabel;Object.assign(t,t.textStyle),t.textStyle=null}})))}var ko=function(e){l["Y"].each(e.series,(function(t){l["Y"].indexOf(Bo,t.type)>=0&&(Uo(t),"mapbox"===t.coordinateSystem&&(t.coordinateSystem="mapbox3D",e.mapbox3D=e.mapbox))})),Go(e.xAxis3D),Go(e.yAxis3D),Go(e.zAxis3D),Go(e.grid3D),zo(e.geo3D)};function Ho(e){this._layers={},this._zr=e}Ho.prototype.update=function(e,t){var r=this,i=t.getZr();if(i.getWidth()&&i.getHeight()){for(var n in this._layers)this._layers[n].removeViewsAll();e.eachComponent((function(r,i){if("series"!==r){var n=t.getViewOfComponentModel(i),s=i.coordinateSystem;if(n.__ecgl__){if(s){if(!s.viewGL)return void console.error("Can't find viewGL in coordinateSystem of component "+i.id);l=s.viewGL}else{if(!i.viewGL)return void console.error("Can't find viewGL of component "+i.id);l=s.viewGL}var l=s.viewGL,u=a(i);u.addView(l),n.afterRender&&n.afterRender(i,e,t,u),o(n.groupGL,i.get("silent"))}}})),e.eachSeries((function(r){var i=t.getViewOfSeriesModel(r),n=r.coordinateSystem;if(i.__ecgl__){if(n&&!n.viewGL&&!i.viewGL)return void console.error("Can't find viewGL of series "+i.id);var s=n&&n.viewGL||i.viewGL,l=a(r);l.addView(s),i.afterRender&&i.afterRender(r,e,t,l),o(i.groupGL,r.get("silent"))}}))}else console.warn("Dom has no width or height");function a(e){var t;i.setSleepAfterStill(0),t=(e.coordinateSystem&&e.coordinateSystem.model,e.get("zlevel"));var n=r._layers,a=n[t];if(!a){if(a=n[t]=new Fo("gl-"+t,i),i.painter.isSingleCanvas()){a.virtual=!0;var o=new l["z"].Image({z:1e4,style:{image:a.renderer.canvas},silent:!0});a.__hostImage=o,i.add(o)}i.painter.insertLayer(t,a)}return a.__hostImage&&a.__hostImage.setStyle({width:a.renderer.getWidth(),height:a.renderer.getHeight()}),a}function o(e,t){e&&e.traverse((function(e){e.isRenderable&&e.isRenderable()&&(e.ignorePicking=null!=e.$ignorePicking?e.$ignorePicking:t)}))}},l["N"]((function(e){e.getZr().painter.getRenderedCanvas=function(e){if(e=e||{},this._singleCanvas)return this._layers[0].dom;var t=document.createElement("canvas"),r=e.pixelRatio||this.dpr;t.width=this.getWidth()*r,t.height=this.getHeight()*r;var i=t.getContext("2d");i.dpr=r,i.clearRect(0,0,t.width,t.height),e.backgroundColor&&(i.fillStyle=e.backgroundColor,i.fillRect(0,0,t.width,t.height));var n,a=this.storage.getDisplayList(!0),o={},s=this;function l(e,t){var r,n=s._zlevelList;null==e&&(e=-1/0);for(var a=0;a<n.length;a++){var o=n[a],l=s._layers[o];if(!l.__builtin__&&o>e&&o<t){r=l;break}}r&&r.renderToCanvas&&(i.save(),r.renderToCanvas(i),i.restore())}for(var u={ctx:i},h=0;h<a.length;h++){var c=a[h];c.zlevel!==n&&(l(n,c.zlevel),n=c.zlevel),this._doPaintEl(c,u,!0,o)}return l(n,1/0),t}})),l["O"]((function(e,t){var r=t.getZr(),i=r.__egl=r.__egl||new Ho(r);i.update(e,t)})),l["P"](ko);var Vo={defaultOption:{viewControl:{projection:"perspective",autoRotate:!1,autoRotateDirection:"cw",autoRotateSpeed:10,autoRotateAfterStill:3,damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,panMouseButton:"middle",rotateMouseButton:"left",distance:150,minDistance:40,maxDistance:400,orthographicSize:150,maxOrthographicSize:400,minOrthographicSize:20,center:[0,0,0],alpha:0,beta:0,minAlpha:-90,maxAlpha:90}},setView:function(e){e=e||{},this.option.viewControl=this.option.viewControl||{},null!=e.alpha&&(this.option.viewControl.alpha=e.alpha),null!=e.beta&&(this.option.viewControl.beta=e.beta),null!=e.distance&&(this.option.viewControl.distance=e.distance),null!=e.center&&(this.option.viewControl.center=e.center)}},Wo={defaultOption:{postEffect:{enable:!1,bloom:{enable:!0,intensity:.1},depthOfField:{enable:!1,focalRange:20,focalDistance:50,blurRadius:10,fstop:2.8,quality:"medium"},screenSpaceAmbientOcclusion:{enable:!1,radius:2,quality:"medium",intensity:1},screenSpaceReflection:{enable:!1,quality:"medium",maxRoughness:.8},colorCorrection:{enable:!0,exposure:0,brightness:0,contrast:1,saturation:1,lookupTexture:""},edge:{enable:!1},FXAA:{enable:!1}},temporalSuperSampling:{enable:"auto"}}},jo={defaultOption:{light:{main:{shadow:!1,shadowQuality:"high",color:"#fff",intensity:1,alpha:0,beta:0},ambient:{color:"#fff",intensity:.2},ambientCubemap:{texture:null,exposure:1,diffuseIntensity:.5,specularIntensity:.5}}}},Xo=l["c"].extend({type:"grid3D",dependencies:["xAxis3D","yAxis3D","zAxis3D"],defaultOption:{show:!0,zlevel:-10,left:0,top:0,width:"100%",height:"100%",environment:"auto",boxWidth:100,boxHeight:100,boxDepth:100,axisPointer:{show:!0,lineStyle:{color:"rgba(0, 0, 0, 0.8)",width:1},label:{show:!0,formatter:null,margin:8,textStyle:{fontSize:14,color:"#fff",backgroundColor:"rgba(0,0,0,0.5)",padding:3,borderRadius:3}}},axisLine:{show:!0,lineStyle:{color:"#333",width:2,type:"solid"}},axisTick:{show:!0,inside:!1,length:3,lineStyle:{width:1}},axisLabel:{show:!0,inside:!1,rotate:0,margin:8,textStyle:{fontSize:12}},splitLine:{show:!0,lineStyle:{color:["#ccc"],width:1,type:"solid"}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}},light:{main:{alpha:30,beta:40},ambient:{intensity:.4}},viewControl:{alpha:20,beta:40,autoRotate:!1,distance:200,minDistance:40,maxDistance:400}}});l["Y"].merge(Xo.prototype,Vo),l["Y"].merge(Xo.prototype,Wo),l["Y"].merge(Xo.prototype,jo);var qo=Xo,Yo=r("7837"),Zo=Un.firstNotNull,Ko={left:0,middle:1,right:2};function Qo(e){return e instanceof Array||(e=[e,e]),e}var Jo=S.extend((function(){return{zr:null,viewGL:null,_center:new xt,minDistance:.5,maxDistance:1.5,maxOrthographicSize:300,minOrthographicSize:30,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,panMouseButton:"middle",rotateMouseButton:"left",_mode:"rotate",_camera:null,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new de,_panVelocity:new de,_distance:500,_zoomSpeed:0,_stillTimeout:0,_animators:[]}}),(function(){["_mouseDownHandler","_mouseWheelHandler","_mouseMoveHandler","_mouseUpHandler","_pinchHandler","_contextMenuHandler","_update"].forEach((function(e){this[e]=this[e].bind(this)}),this)}),{init:function(){var e=this.zr;e&&(e.on("mousedown",this._mouseDownHandler),e.on("globalout",this._mouseUpHandler),e.on("mousewheel",this._mouseWheelHandler),e.on("pinch",this._pinchHandler),e.animation.on("frame",this._update),e.dom.addEventListener("contextmenu",this._contextMenuHandler))},dispose:function(){var e=this.zr;e&&(e.off("mousedown",this._mouseDownHandler),e.off("mousemove",this._mouseMoveHandler),e.off("mouseup",this._mouseUpHandler),e.off("mousewheel",this._mouseWheelHandler),e.off("pinch",this._pinchHandler),e.off("globalout",this._mouseUpHandler),e.dom.removeEventListener("contextmenu",this._contextMenuHandler),e.animation.off("frame",this._update)),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(e){this._distance=e,this._needsUpdate=!0},getOrthographicSize:function(){return this._orthoSize},setOrthographicSize:function(e){this._orthoSize=e,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(e){e=Math.max(Math.min(this.maxAlpha,e),this.minAlpha),this._theta=e/180*Math.PI,this._needsUpdate=!0},setBeta:function(e){e=Math.max(Math.min(this.maxBeta,e),this.minBeta),this._phi=-e/180*Math.PI,this._needsUpdate=!0},setCenter:function(e){this._center.setArray(e)},setViewGL:function(e){this.viewGL=e},getCamera:function(){return this.viewGL.camera},setFromViewControlModel:function(e,t){t=t||{};var r=t.baseDistance||0,i=t.baseOrthoSize||1,n=e.get("projection");"perspective"!==n&&"orthographic"!==n&&"isometric"!==n&&(n="perspective"),this._projection=n,this.viewGL.setProjection(n);var a=e.get("distance")+r,o=e.get("orthographicSize")+i;[["damping",.8],["autoRotate",!1],["autoRotateAfterStill",3],["autoRotateDirection","cw"],["autoRotateSpeed",10],["minDistance",30],["maxDistance",400],["minOrthographicSize",30],["maxOrthographicSize",300],["minAlpha",-90],["maxAlpha",90],["minBeta",-1/0],["maxBeta",1/0],["rotateSensitivity",1],["zoomSensitivity",1],["panSensitivity",1],["panMouseButton","left"],["rotateMouseButton","middle"]].forEach((function(t){this[t[0]]=Zo(e.get(t[0]),t[1])}),this),this.minDistance+=r,this.maxDistance+=r,this.minOrthographicSize+=i,this.maxOrthographicSize+=i;var s=e.ecModel,l={};["animation","animationDurationUpdate","animationEasingUpdate"].forEach((function(t){l[t]=Zo(e.get(t),s&&s.get(t))}));var u=Zo(t.alpha,e.get("alpha"))||0,h=Zo(t.beta,e.get("beta"))||0,c=Zo(t.center,e.get("center"))||[0,0,0];l.animation&&l.animationDurationUpdate>0&&this._notFirst?this.animateTo({alpha:u,beta:h,center:c,distance:a,orthographicSize:o,easing:l.animationEasingUpdate,duration:l.animationDurationUpdate}):(this.setDistance(a),this.setAlpha(u),this.setBeta(h),this.setCenter(c),this.setOrthographicSize(o)),this._notFirst=!0,this._validateProperties()},_validateProperties:function(){0},animateTo:function(e){var t=this.zr,r=this,i={},n={};return null!=e.distance&&(i.distance=this.getDistance(),n.distance=e.distance),null!=e.orthographicSize&&(i.orthographicSize=this.getOrthographicSize(),n.orthographicSize=e.orthographicSize),null!=e.alpha&&(i.alpha=this.getAlpha(),n.alpha=e.alpha),null!=e.beta&&(i.beta=this.getBeta(),n.beta=e.beta),null!=e.center&&(i.center=this.getCenter(),n.center=e.center),this._addAnimator(t.animation.animate(i).when(e.duration||1e3,n).during((function(){null!=i.alpha&&r.setAlpha(i.alpha),null!=i.beta&&r.setBeta(i.beta),null!=i.distance&&r.setDistance(i.distance),null!=i.center&&r.setCenter(i.center),null!=i.orthographicSize&&r.setOrthographicSize(i.orthographicSize),r._needsUpdate=!0}))).start(e.easing||"linear")},stopAllAnimation:function(){for(var e=0;e<this._animators.length;e++)this._animators[e].stop();this._animators.length=0},update:function(){this._needsUpdate=!0,this._update(20)},_isAnimating:function(){return this._animators.length>0},_update:function(e){if(this._rotating){var t=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=t*e/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.1||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(e=Math.min(e,50),this._updateDistanceOrSize(e),this._updatePan(e),this._updateRotate(e),this._updateTransform(),this.getCamera().update(),this.zr&&this.zr.refresh(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(e){var t=this._rotateVelocity;this._phi=t.y*e/20+this._phi,this._theta=t.x*e/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(t,Math.pow(this.damping,e/16))},_updateDistanceOrSize:function(e){"perspective"===this._projection?this._setDistance(this._distance+this._zoomSpeed*e/20):this._setOrthoSize(this._orthoSize+this._zoomSpeed*e/20),this._zoomSpeed*=Math.pow(this.damping,e/16)},_setDistance:function(e){this._distance=Math.max(Math.min(e,this.maxDistance),this.minDistance)},_setOrthoSize:function(e){this._orthoSize=Math.max(Math.min(e,this.maxOrthographicSize),this.minOrthographicSize);var t=this.getCamera(),r=this._orthoSize,i=r/this.viewGL.viewport.height*this.viewGL.viewport.width;t.left=-i/2,t.right=i/2,t.top=r/2,t.bottom=-r/2},_updatePan:function(e){var t=this._panVelocity,r=this._distance,i=this.getCamera(),n=i.worldTransform.y,a=i.worldTransform.x;this._center.scaleAndAdd(a,-t.x*r/200).scaleAndAdd(n,-t.y*r/200),this._vectorDamping(t,0)},_updateTransform:function(){var e=this.getCamera(),t=new xt,r=this._theta+Math.PI/2,i=this._phi+Math.PI/2,n=Math.sin(r);t.x=n*Math.cos(i),t.y=-Math.cos(r),t.z=n*Math.sin(i),e.position.copy(this._center).scaleAndAdd(t,this._distance),e.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var e=this.autoRotateAfterStill,t=this;!isNaN(e)&&e>0&&(this._stillTimeout=setTimeout((function(){t._rotating=!0}),1e3*e))},_vectorDamping:function(e,t){var r=e.len();r*=t,r<1e-4&&(r=0),e.normalize().scale(r)},_decomposeTransform:function(){if(this.getCamera()){this.getCamera().updateWorldTransform();var e=this.getCamera().worldTransform.z,t=Math.asin(e.y),r=Math.atan2(e.x,e.z);this._theta=t,this._phi=-r,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this.getCamera().aspect?this._setDistance(this.getCamera().position.dist(this._center)):this._setOrthoSize(this.getCamera().top-this.getCamera().bottom)}},_mouseDownHandler:function(e){if(!e.target&&!this._isAnimating()){var t=e.offsetX,r=e.offsetY;this.viewGL&&!this.viewGL.containPoint(t,r)||(this.zr.on("mousemove",this._mouseMoveHandler),this.zr.on("mouseup",this._mouseUpHandler),e.event.targetTouches?1===e.event.targetTouches.length&&(this._mode="rotate"):e.event.button===Ko[this.rotateMouseButton]?this._mode="rotate":e.event.button===Ko[this.panMouseButton]?this._mode="pan":this._mode="",this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=e.offsetX,this._mouseY=e.offsetY)}},_mouseMoveHandler:function(e){if((!e.target||!e.target.__isGLToZRProxy)&&!this._isAnimating()){var t=Qo(this.panSensitivity),r=Qo(this.rotateSensitivity);"rotate"===this._mode?(this._rotateVelocity.y=(e.offsetX-this._mouseX)/this.zr.getHeight()*2*r[0],this._rotateVelocity.x=(e.offsetY-this._mouseY)/this.zr.getWidth()*2*r[1]):"pan"===this._mode&&(this._panVelocity.x=(e.offsetX-this._mouseX)/this.zr.getWidth()*t[0]*400,this._panVelocity.y=(-e.offsetY+this._mouseY)/this.zr.getHeight()*t[1]*400),this._mouseX=e.offsetX,this._mouseY=e.offsetY,e.event.preventDefault()}},_mouseWheelHandler:function(e){if(!this._isAnimating()){var t=e.event.wheelDelta||-e.event.detail;this._zoomHandler(e,t)}},_pinchHandler:function(e){this._isAnimating()||(this._zoomHandler(e,e.pinchScale>1?1:-1),this._mode="")},_zoomHandler:function(e,t){if(0!==t){var r,i=e.offsetX,n=e.offsetY;if(!this.viewGL||this.viewGL.containPoint(i,n))r="perspective"===this._projection?Math.max(Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance))/20,.5):Math.max(Math.max(Math.min(this._orthoSize-this.minOrthographicSize,this.maxOrthographicSize-this._orthoSize))/20,.5),this._zoomSpeed=(t>0?-1:1)*r*this.zoomSensitivity,this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),e.event.preventDefault()}},_mouseUpHandler:function(){this.zr.off("mousemove",this._mouseMoveHandler),this.zr.off("mouseup",this._mouseUpHandler)},_isRightMouseButtonUsed:function(){return"right"===this.rotateMouseButton||"right"===this.panMouseButton},_contextMenuHandler:function(e){this._isRightMouseButtonUsed()&&e.preventDefault()},_addAnimator:function(e){var t=this._animators;return t.push(e),e.done((function(){var r=t.indexOf(e);r>=0&&t.splice(r,1)})),e}});Object.defineProperty(Jo.prototype,"autoRotate",{get:function(e){return this._autoRotate},set:function(e){this._autoRotate=e,this._rotating=e}});var $o=Jo,es={convertToDynamicArray:function(e){e&&this.resetOffset();var t=this.attributes;for(var r in t)e||!t[r].value?t[r].value=[]:t[r].value=Array.prototype.slice.call(t[r].value);e||!this.indices?this.indices=[]:this.indices=Array.prototype.slice.call(this.indices)},convertToTypedArray:function(){var e=this.attributes;for(var t in e)e[t].value&&e[t].value.length>0?e[t].value=new Float32Array(e[t].value):e[t].value=null;this.indices&&this.indices.length>0&&(this.indices=this.vertexCount>65535?new Uint32Array(this.indices):new Uint16Array(this.indices)),this.dirty()}},ts={vec2:ue,vec3:$e,vec4:St,mat2:ta,mat2d:aa,mat3:At,mat4:Qe,quat:Ct},rs=ts,is=rs.vec3,ns=[[0,0],[1,1]],as=Tr.extend((function(){return{segmentScale:1,dynamic:!0,useNativeLine:!0,attributes:{position:new Tr.Attribute("position","float",3,"POSITION"),positionPrev:new Tr.Attribute("positionPrev","float",3),positionNext:new Tr.Attribute("positionNext","float",3),prevPositionPrev:new Tr.Attribute("prevPositionPrev","float",3),prevPosition:new Tr.Attribute("prevPosition","float",3),prevPositionNext:new Tr.Attribute("prevPositionNext","float",3),offset:new Tr.Attribute("offset","float",1),color:new Tr.Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0,this._itemVertexOffsets=[]},setVertexCount:function(e){var t=this.attributes;this.vertexCount!==e&&(t.position.init(e),t.color.init(e),this.useNativeLine||(t.positionPrev.init(e),t.positionNext.init(e),t.offset.init(e)),e>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(e){this.triangleCount!==e&&(this.indices=0===e?null:this.vertexCount>65535?new Uint32Array(3*e):new Uint16Array(3*e))},_getCubicCurveApproxStep:function(e,t,r,i){var n=is.dist(e,t)+is.dist(r,t)+is.dist(i,r),a=1/(n+1)*this.segmentScale;return a},getCubicCurveVertexCount:function(e,t,r,i){var n=this._getCubicCurveApproxStep(e,t,r,i),a=Math.ceil(1/n);return this.useNativeLine?2*a:2*a+2},getCubicCurveTriangleCount:function(e,t,r,i){var n=this._getCubicCurveApproxStep(e,t,r,i),a=Math.ceil(1/n);return this.useNativeLine?0:2*a},getLineVertexCount:function(){return this.getPolylineVertexCount(ns)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(ns)},getPolylineVertexCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/3}return this.useNativeLine?2*(t-1):2*(t-1)+2},getPolylineTriangleCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/3}return this.useNativeLine?0:2*Math.max(t-1,0)},addCubicCurve:function(e,t,r,i,n,a){null==a&&(a=1);var o=e[0],s=e[1],l=e[2],u=t[0],h=t[1],c=t[2],d=r[0],f=r[1],p=r[2],m=i[0],g=i[1],_=i[2],v=this._getCubicCurveApproxStep(e,t,r,i),y=v*v,x=y*v,T=3*v,b=3*y,w=6*y,E=6*x,S=o-2*u+d,M=s-2*h+f,A=l-2*c+p,N=3*(u-d)-o+m,C=3*(h-f)-s+g,P=3*(c-p)-l+_,L=o,O=s,D=l,R=(u-o)*T+S*b+N*x,I=(h-s)*T+M*b+C*x,F=(c-l)*T+A*b+P*x,B=S*w+N*E,z=M*w+C*E,U=A*w+P*E,G=N*E,k=C*E,H=P*E,V=0,W=0,j=Math.ceil(1/v),X=new Float32Array(3*(j+1)),q=(X=[],0);for(W=0;W<j+1;W++)X[q++]=L,X[q++]=O,X[q++]=D,L+=R,O+=I,D+=F,R+=B,I+=z,F+=U,B+=G,z+=k,U+=H,V+=v,V>1&&(L=R>0?Math.min(L,m):Math.max(L,m),O=I>0?Math.min(O,g):Math.max(O,g),D=F>0?Math.min(D,_):Math.max(D,_));return this.addPolyline(X,n,a)},addLine:function(e,t,r,i){return this.addPolyline([e,t],r,i)},addPolyline:function(e,t,r,i,n){if(e.length){var a="number"!==typeof e[0];if(null==n&&(n=a?e.length:e.length/3),!(n<2)){null==i&&(i=0),null==r&&(r=1),this._itemVertexOffsets.push(this._vertexOffset);a="number"!==typeof e[0];var o,s,l=a?"number"!==typeof t[0]:t.length/4===n,u=this.attributes.position,h=this.attributes.positionPrev,c=this.attributes.positionNext,d=this.attributes.color,f=this.attributes.offset,p=this.indices,m=this._vertexOffset;r=Math.max(r,.01);for(var g=i;g<n;g++){if(a)o=e[g],s=l?t[g]:t;else{var _=3*g;if(o=o||[],o[0]=e[_],o[1]=e[_+1],o[2]=e[_+2],l){var v=4*g;s=s||[],s[0]=t[v],s[1]=t[v+1],s[2]=t[v+2],s[3]=t[v+3]}else s=t}if(this.useNativeLine?g>1&&(u.copy(m,m-1),d.copy(m,m-1),m++):(g<n-1&&(h.set(m+2,o),h.set(m+3,o)),g>0&&(c.set(m-2,o),c.set(m-1,o)),u.set(m,o),u.set(m+1,o),d.set(m,s),d.set(m+1,s),f.set(m,r/2),f.set(m+1,-r/2),m+=2),this.useNativeLine)d.set(m,s),u.set(m,o),m++;else if(g>0){var y=3*this._triangleOffset;p=this.indices;p[y]=m-4,p[y+1]=m-3,p[y+2]=m-2,p[y+3]=m-3,p[y+4]=m-1,p[y+5]=m-2,this._triangleOffset+=2}}if(!this.useNativeLine){var x=this._vertexOffset,T=this._vertexOffset+2*n;h.copy(x,x+2),h.copy(x+1,x+3),c.copy(T-1,T-3),c.copy(T-2,T-4)}return this._vertexOffset=m,this._vertexOffset}}},setItemColor:function(e,t){for(var r=this._itemVertexOffsets[e],i=e<this._itemVertexOffsets.length-1?this._itemVertexOffsets[e+1]:this._vertexOffset,n=r;n<i;n++)this.attributes.color.set(n,t);this.dirty("color")},currentTriangleOffset:function(){return this._triangleOffset},currentVertexOffset:function(){return this._vertexOffset}});l["Y"].defaults(as.prototype,es);var os=as;function ss(e,t,r,i,n,a,o){this._zr=e,this._x=0,this._y=0,this._rowHeight=0,this.width=i,this.height=n,this.offsetX=t,this.offsetY=r,this.dpr=o,this.gap=a}function ls(e){e=e||{},e.width=e.width||512,e.height=e.height||512,e.devicePixelRatio=e.devicePixelRatio||1,e.gap=null==e.gap?2:e.gap;var t=document.createElement("canvas");t.width=e.width*e.devicePixelRatio,t.height=e.height*e.devicePixelRatio,this._canvas=t,this._texture=new lr({image:t,flipY:!1});var r=this;this._zr=l["cb"].init(t);var i=this._zr.refreshImmediately;this._zr.refreshImmediately=function(){i.call(this),r._texture.dirty(),r.onupdate&&r.onupdate()},this._dpr=e.devicePixelRatio,this._coords={},this.onupdate=e.onupdate,this._gap=e.gap,this._textureAtlasNodes=[new ss(this._zr,0,0,e.width,e.height,this._gap,this._dpr)],this._nodeWidth=e.width,this._nodeHeight=e.height,this._currentNodeIdx=0}ss.prototype={constructor:ss,clear:function(){this._x=0,this._y=0,this._rowHeight=0},add:function(e,t,r){var i=e.getBoundingRect();null==t&&(t=i.width),null==r&&(r=i.height),t*=this.dpr,r*=this.dpr,this._fitElement(e,t,r);var n=this._x,a=this._y,o=this.width*this.dpr,s=this.height*this.dpr,l=this.gap;if(n+t+l>o&&(n=this._x=0,a+=this._rowHeight+l,this._y=a,this._rowHeight=0),this._x+=t+l,this._rowHeight=Math.max(this._rowHeight,r),a+r+l>s)return null;e.x+=this.offsetX*this.dpr+n,e.y+=this.offsetY*this.dpr+a,this._zr.add(e);var u=[this.offsetX/this.width,this.offsetY/this.height],h=[[n/o+u[0],a/s+u[1]],[(n+t)/o+u[0],(a+r)/s+u[1]]];return h},_fitElement:function(e,t,r){var i=e.getBoundingRect(),n=t/i.width,a=r/i.height;e.x=-i.x*n,e.y=-i.y*a,e.scaleX=n,e.scaleY=a,e.update()}},ls.prototype={clear:function(){for(var e=0;e<this._textureAtlasNodes.length;e++)this._textureAtlasNodes[e].clear();this._currentNodeIdx=0,this._zr.clear(),this._coords={}},getWidth:function(){return this._width},getHeight:function(){return this._height},getTexture:function(){return this._texture},getDevicePixelRatio:function(){return this._dpr},getZr:function(){return this._zr},_getCurrentNode:function(){return this._textureAtlasNodes[this._currentNodeIdx]},_expand:function(){if(this._currentNodeIdx++,this._textureAtlasNodes[this._currentNodeIdx])return this._textureAtlasNodes[this._currentNodeIdx];var e=4096/this._dpr,t=this._textureAtlasNodes,r=t.length,i=r*this._nodeWidth%e,n=Math.floor(r*this._nodeWidth/e)*this._nodeHeight;if(!(n>=e)){var a=(i+this._nodeWidth)*this._dpr,o=(n+this._nodeHeight)*this._dpr;try{this._zr.resize({width:a,height:o})}catch(l){this._canvas.width=a,this._canvas.height=o}var s=new ss(this._zr,i,n,this._nodeWidth,this._nodeHeight,this._gap,this._dpr);return this._textureAtlasNodes.push(s),s}},add:function(e,t,r){if(this._coords[e.id])return this._coords[e.id];var i=this._getCurrentNode().add(e,t,r);if(!i){var n=this._expand();if(!n)return;i=n.add(e,t,r)}return this._coords[e.id]=i,i},getCoordsScale:function(){var e=this._dpr;return[this._nodeWidth/this._canvas.width*e,this._nodeHeight/this._canvas.height*e]},getCoords:function(e){return this._coords[e]}};var us=ls;function hs(){}hs.prototype={constructor:hs,setScene:function(e){this._scene=e,this._skybox&&this._skybox.attachScene(this._scene)},initLight:function(e){this._lightRoot=e,this.mainLight=new Ao.DirectionalLight({shadowBias:.005}),this.ambientLight=new Ao.AmbientLight,e.add(this.mainLight),e.add(this.ambientLight)},dispose:function(){this._lightRoot&&(this._lightRoot.remove(this.mainLight),this._lightRoot.remove(this.ambientLight))},updateLight:function(e){var t=this.mainLight,r=this.ambientLight,i=e.getModel("light"),n=i.getModel("main"),a=i.getModel("ambient");t.intensity=n.get("intensity"),r.intensity=a.get("intensity"),t.color=Ao.parseColor(n.get("color")).slice(0,3),r.color=Ao.parseColor(a.get("color")).slice(0,3);var o=n.get("alpha")||0,s=n.get("beta")||0;t.position.setArray(Ao.directionFromAlphaBeta(o,s)),t.lookAt(Ao.Vector3.ZERO),t.castShadow=n.get("shadow"),t.shadowResolution=Ao.getShadowResolution(n.get("shadowQuality"))},updateAmbientCubemap:function(e,t,r){var i=t.getModel("light.ambientCubemap"),n=i.get("texture");if(n){this._cubemapLightsCache=this._cubemapLightsCache||{};var a=this._cubemapLightsCache[n];if(!a){var o=this;a=this._cubemapLightsCache[n]=Ao.createAmbientCubemap(i.option,e,r,(function(){o._isSkyboxFromAmbientCubemap&&o._skybox.setEnvironmentMap(a.specular.cubemap),r.getZr().refresh()}))}this._lightRoot.add(a.diffuse),this._lightRoot.add(a.specular),this._currentCubemapLights=a}else this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights=null)},updateSkybox:function(e,t,r){var i=t.get("environment"),n=this;function a(){return n._skybox=n._skybox||new Pi,n._skybox}var o=a();if(i&&"none"!==i)if("auto"===i)if(this._isSkyboxFromAmbientCubemap=!0,this._currentCubemapLights){var s=this._currentCubemapLights.specular.cubemap;o.setEnvironmentMap(s),this._scene&&o.attachScene(this._scene),o.material.set("lod",3)}else this._skybox&&this._skybox.detachScene();else if("object"===typeof i&&i.colorStops||"string"===typeof i&&l["i"].parse(i)){this._isSkyboxFromAmbientCubemap=!1;var u=new Ao.Texture2D({anisotropic:8,flipY:!1});o.setEnvironmentMap(u);var h=u.image=document.createElement("canvas");h.width=h.height=16;var c=h.getContext("2d"),d=new l["z"].Rect({shape:{x:0,y:0,width:16,height:16},style:{fill:i}});l["C"](c,d),o.attachScene(this._scene)}else{this._isSkyboxFromAmbientCubemap=!1;u=Ao.loadTexture(i,r,{anisotropic:8,flipY:!1});o.setEnvironmentMap(u),o.attachScene(this._scene)}else this._skybox&&this._skybox.detachScene(this._scene),this._skybox=null;var f=t.coordinateSystem;if(this._skybox)if(!f||!f.viewGL||"auto"===i||i.match&&i.match(/.hdr$/))this._skybox.material.undefine("fragment","SRGB_DECODE");else{var p=f.viewGL.isLinearSpace()?"define":"undefine";this._skybox.material[p]("fragment","SRGB_DECODE")}}};var cs=hs,ds=rs.vec3,fs=Tr.extend((function(){return{segmentScale:1,useNativeLine:!0,attributes:{position:new Tr.Attribute("position","float",3,"POSITION"),normal:new Tr.Attribute("normal","float",3,"NORMAL"),color:new Tr.Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setQuadCount:function(e){var t=this.attributes,r=this.getQuadVertexCount()*e,i=this.getQuadTriangleCount()*e;this.vertexCount!==r&&(t.position.init(r),t.normal.init(r),t.color.init(r)),this.triangleCount!==i&&(this.indices=r>65535?new Uint32Array(3*i):new Uint16Array(3*i))},getQuadVertexCount:function(){return 4},getQuadTriangleCount:function(){return 2},addQuad:function(){var e=ds.create(),t=ds.create(),r=ds.create(),i=[0,3,1,3,2,1];return function(n,a){var o=this.attributes.position,s=this.attributes.normal,l=this.attributes.color;ds.sub(e,n[1],n[0]),ds.sub(t,n[2],n[1]),ds.cross(r,e,t),ds.normalize(r,r);for(var u=0;u<4;u++)o.set(this._vertexOffset+u,n[u]),l.set(this._vertexOffset+u,a),s.set(this._vertexOffset+u,r);var h=3*this._faceOffset;for(u=0;u<6;u++)this.indices[h+u]=i[u]+this._vertexOffset;this._vertexOffset+=4,this._faceOffset+=2}}()});l["Y"].defaults(fs.prototype,es);var ps=fs,ms=Un.firstNotNull,gs={x:0,y:2,z:1};function _s(e,t,r,i){var n=[0,0,0],a=i<0?r.getExtentMin():r.getExtentMax();n[gs[r.dim]]=a,e.position.setArray(n),e.rotation.identity(),t.distance=-Math.abs(a),t.normal.set(0,0,0),"x"===r.dim?(e.rotation.rotateY(i*Math.PI/2),t.normal.x=-i):"z"===r.dim?(e.rotation.rotateX(-i*Math.PI/2),t.normal.y=-i):(i>0&&e.rotation.rotateY(Math.PI),t.normal.z=-i)}function vs(e,t,r){this.rootNode=new Ao.Node;var i=new Ao.Mesh({geometry:new os({useNativeLine:!1}),material:t,castShadow:!1,ignorePicking:!0,$ignorePicking:!0,renderOrder:1}),n=new Ao.Mesh({geometry:new ps,material:r,castShadow:!1,culling:!1,ignorePicking:!0,$ignorePicking:!0,renderOrder:0});this.rootNode.add(n),this.rootNode.add(i),this.faceInfo=e,this.plane=new Ao.Plane,this.linesMesh=i,this.quadsMesh=n}vs.prototype.update=function(e,t,r){var i=e.coordinateSystem,n=[i.getAxis(this.faceInfo[0]),i.getAxis(this.faceInfo[1])],a=this.linesMesh.geometry,o=this.quadsMesh.geometry;a.convertToDynamicArray(!0),o.convertToDynamicArray(!0),this._updateSplitLines(a,n,e,r),this._udpateSplitAreas(o,n,e,r),a.convertToTypedArray(),o.convertToTypedArray();var s=i.getAxis(this.faceInfo[2]);_s(this.rootNode,this.plane,s,this.faceInfo[3])},vs.prototype._updateSplitLines=function(e,t,r,i){var n=i.getDevicePixelRatio();t.forEach((function(i,a){var o=i.model,s=t[1-a].getExtent();if(!i.scale.isBlank()){var u=o.getModel("splitLine",r.getModel("splitLine"));if(u.get("show")){var h=u.getModel("lineStyle"),c=h.get("color"),d=ms(h.get("opacity"),1),f=ms(h.get("width"),1);c=l["Y"].isArray(c)?c:[c];for(var p=i.getTicksCoords({tickModel:u}),m=0,g=0;g<p.length;g++){var _=p[g].coord,v=Ao.parseColor(c[m%c.length]);v[3]*=d;var y=[0,0,0],x=[0,0,0];y[a]=x[a]=_,y[1-a]=s[0],x[1-a]=s[1],e.addLine(y,x,v,f*n),m++}}}}))},vs.prototype._udpateSplitAreas=function(e,t,r,i){t.forEach((function(i,n){var a=i.model,o=t[1-n].getExtent();if(!i.scale.isBlank()){var s=a.getModel("splitArea",r.getModel("splitArea"));if(s.get("show")){var u=s.getModel("areaStyle"),h=u.get("color"),c=ms(u.get("opacity"),1);h=l["Y"].isArray(h)?h:[h];for(var d=i.getTicksCoords({tickModel:s,clamp:!0}),f=0,p=[0,0,0],m=[0,0,0],g=0;g<d.length;g++){var _=d[g].coord,v=[0,0,0],y=[0,0,0];if(v[n]=y[n]=_,v[1-n]=o[0],y[1-n]=o[1],0!==g){var x=Ao.parseColor(h[f%h.length]);x[3]*=c,e.addQuad([p,v,y,m],x),p=v,m=y,f++}else p=v,m=y}}}}))};var ys=vs,xs=[0,1,2,0,2,3],Ts=Tr.extend((function(){return{attributes:{position:new Tr.Attribute("position","float",3,"POSITION"),texcoord:new Tr.Attribute("texcoord","float",2,"TEXCOORD_0"),offset:new Tr.Attribute("offset","float",2),color:new Tr.Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setSpriteCount:function(e){this._spriteCount=e;var t=4*e,r=2*e;this.vertexCount!==t&&(this.attributes.position.init(t),this.attributes.offset.init(t),this.attributes.color.init(t)),this.triangleCount!==r&&(this.indices=t>65535?new Uint32Array(3*r):new Uint16Array(3*r))},setSpriteAlign:function(e,t,r,i,n){var a,o,s,l;switch(null==r&&(r="left"),null==i&&(i="top"),n=n||0,r){case"left":a=n,s=t[0]+n;break;case"center":case"middle":a=-t[0]/2,s=t[0]/2;break;case"right":a=-t[0]-n,s=-n;break}switch(i){case"bottom":o=n,l=t[1]+n;break;case"middle":o=-t[1]/2,l=t[1]/2;break;case"top":o=-t[1]-n,l=-n;break}var u=4*e,h=this.attributes.offset;h.set(u,[a,l]),h.set(u+1,[s,l]),h.set(u+2,[s,o]),h.set(u+3,[a,o])},addSprite:function(e,t,r,i,n,a){var o=this._vertexOffset;this.setSprite(this._vertexOffset/4,e,t,r,i,n,a);for(var s=0;s<xs.length;s++)this.indices[3*this._faceOffset+s]=xs[s]+o;return this._faceOffset+=2,this._vertexOffset+=4,o/4},setSprite:function(e,t,r,i,n,a,o){for(var s=4*e,l=this.attributes,u=0;u<4;u++)l.position.set(s+u,t);var h=l.texcoord;h.set(s,[i[0][0],i[0][1]]),h.set(s+1,[i[1][0],i[0][1]]),h.set(s+2,[i[1][0],i[1][1]]),h.set(s+3,[i[0][0],i[1][1]]),this.setSpriteAlign(e,r,n,a,o)}});l["Y"].defaults(Ts.prototype,es);var bs=Ts,ws="@export ecgl.labels.vertex\n\nattribute vec3 position: POSITION;\nattribute vec2 texcoord: TEXCOORD_0;\nattribute vec2 offset;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n vec4 proj = worldViewProjection * vec4(position, 1.0);\n\n vec2 screen = (proj.xy / abs(proj.w) + 1.0) * 0.5 * viewport.zw;\n\n screen += offset;\n\n proj.xy = (screen / viewport.zw - 0.5) * 2.0 * abs(proj.w);\n gl_Position = proj;\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n v_Texcoord = texcoord;\n}\n@end\n\n\n@export ecgl.labels.fragment\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\nuniform sampler2D textureAtlas;\nuniform vec2 uvScale: [1.0, 1.0];\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\nvarying float v_Miter;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n gl_FragColor = vec4(color, alpha) * texture2D(textureAtlas, v_Texcoord * uvScale);\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n#endif\n}\n\n@end";Ao.Shader.import(ws);var Es=Ao.Mesh.extend((function(){var e=new bs({dynamic:!0}),t=new Ao.Material({shader:Ao.createShader("ecgl.labels"),transparent:!0,depthMask:!1});return{geometry:e,material:t,culling:!1,castShadow:!1,ignorePicking:!0}})),Ss=Un.firstNotNull,Ms={x:0,y:2,z:1};function As(e,t){var r=new Ao.Mesh({geometry:new os({useNativeLine:!1}),material:t,castShadow:!1,ignorePicking:!0,renderOrder:2}),i=new Es;i.material.depthMask=!1;var n=new Ao.Node;n.add(r),n.add(i),this.rootNode=n,this.dim=e,this.linesMesh=r,this.labelsMesh=i,this.axisLineCoords=null,this.labelElements=[]}var Ns={x:"y",y:"x",z:"y"};As.prototype.update=function(e,t,r){var i=e.coordinateSystem,n=i.getAxis(this.dim),a=this.linesMesh.geometry,o=this.labelsMesh.geometry;a.convertToDynamicArray(!0),o.convertToDynamicArray(!0);var s=n.model,u=n.getExtent(),h=r.getDevicePixelRatio(),c=s.getModel("axisLine",e.getModel("axisLine")),d=s.getModel("axisTick",e.getModel("axisTick")),f=s.getModel("axisLabel",e.getModel("axisLabel")),p=c.get("lineStyle.color");if(c.get("show")){var m=c.getModel("lineStyle"),g=[0,0,0],_=[0,0,0],v=Ms[n.dim];g[v]=u[0],_[v]=u[1],this.axisLineCoords=[g,_];var y=Ao.parseColor(p),x=Ss(m.get("width"),1),T=Ss(m.get("opacity"),1);y[3]*=T,a.addLine(g,_,y,x*h)}if(d.get("show")){var b=d.getModel("lineStyle"),w=Ao.parseColor(Ss(b.get("color"),p));x=Ss(b.get("width"),1);w[3]*=Ss(b.get("opacity"),1);for(var E=n.getTicksCoords(),S=d.get("length"),M=0;M<E.length;M++){var A=E[M].coord,N=(g=[0,0,0],_=[0,0,0],v=Ms[n.dim],Ms[Ns[n.dim]]);g[v]=_[v]=A,_[N]=S,a.addLine(g,_,w,x*h)}}this.labelElements=[];h=r.getDevicePixelRatio();if(f.get("show")){E=n.getTicksCoords();var C=s.get("data"),P=f.get("margin"),L=n.getViewLabels();for(M=0;M<L.length;M++){var O=L[M].tickValue,D=L[M].formattedLabel,R=L[M].rawLabel,I=(A=n.dataToCoord(O),[0,0,0]);v=Ms[n.dim],N=Ms[Ns[n.dim]];I[v]=I[v]=A,I[N]=P;var F=f;C&&C[O]&&C[O].textStyle&&(F=new l["f"](C[O].textStyle,f,s.ecModel));var B=Ss(F.get("color"),p),z=new l["z"].Text({style:Object(Yo["c"])(F,{text:D,fill:"function"===typeof B?B("category"===n.type?R:"value"===n.type?O+"":O,M):B,verticalAlign:"top",align:"left"})}),U=t.add(z),G=z.getBoundingRect();o.addSprite(I,[G.width*h,G.height*h],U),this.labelElements.push(z)}}if(s.get("name")){var k=s.getModel("nameTextStyle"),H=(I=[0,0,0],v=Ms[n.dim],N=Ms[Ns[n.dim]],Ss(k.get("color"),p)),V=k.get("borderColor");x=k.get("borderWidth");I[v]=I[v]=(u[0]+u[1])/2,I[N]=s.get("nameGap");z=new l["z"].Text({style:Object(Yo["c"])(k,{text:s.get("name"),fill:H,stroke:V,lineWidth:x})}),U=t.add(z),G=z.getBoundingRect();o.addSprite(I,[G.width*h,G.height*h],U),z.__idx=this.labelElements.length,this.nameLabelElement=z}this.labelsMesh.material.set("textureAtlas",t.getTexture()),this.labelsMesh.material.set("uvScale",t.getCoordsScale()),a.convertToTypedArray(),o.convertToTypedArray()},As.prototype.setSpriteAlign=function(e,t,r){for(var i=r.getDevicePixelRatio(),n=this.labelsMesh.geometry,a=0;a<this.labelElements.length;a++){var o=this.labelElements[a],s=o.getBoundingRect();n.setSpriteAlign(a,[s.width*i,s.height*i],e,t)}var l=this.nameLabelElement;if(l){s=l.getBoundingRect();n.setSpriteAlign(l.__idx,[s.width*i,s.height*i],e,t),n.dirty()}this.textAlign=e,this.textVerticalAlign=t};var Cs=As,Ps="@export ecgl.lines3D.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position: POSITION;\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(position, 1.0);\n v_Color = a_Color;\n}\n\n@end\n\n@export ecgl.lines3D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\n\n@import clay.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color * v_Color);\n#else\n gl_FragColor = color * v_Color;\n#endif\n}\n@end\n\n\n\n@export ecgl.lines3D.clipNear\n\nvec4 clipNear(vec4 p1, vec4 p2) {\n float n = (p1.w - near) / (p1.w - p2.w);\n return vec4(mix(p1.xy, p2.xy, n), -near, near);\n}\n\n@end\n\n@export ecgl.lines3D.expandLine\n#ifdef VERTEX_ANIMATION\n vec4 prevProj = worldViewProjection * vec4(mix(prevPositionPrev, positionPrev, percent), 1.0);\n vec4 currProj = worldViewProjection * vec4(mix(prevPosition, position, percent), 1.0);\n vec4 nextProj = worldViewProjection * vec4(mix(prevPositionNext, positionNext, percent), 1.0);\n#else\n vec4 prevProj = worldViewProjection * vec4(positionPrev, 1.0);\n vec4 currProj = worldViewProjection * vec4(position, 1.0);\n vec4 nextProj = worldViewProjection * vec4(positionNext, 1.0);\n#endif\n\n if (currProj.w < 0.0) {\n if (nextProj.w > 0.0) {\n currProj = clipNear(currProj, nextProj);\n }\n else if (prevProj.w > 0.0) {\n currProj = clipNear(currProj, prevProj);\n }\n }\n\n vec2 prevScreen = (prevProj.xy / abs(prevProj.w) + 1.0) * 0.5 * viewport.zw;\n vec2 currScreen = (currProj.xy / abs(currProj.w) + 1.0) * 0.5 * viewport.zw;\n vec2 nextScreen = (nextProj.xy / abs(nextProj.w) + 1.0) * 0.5 * viewport.zw;\n\n vec2 dir;\n float len = offset;\n if (position == positionPrev) {\n dir = normalize(nextScreen - currScreen);\n }\n else if (position == positionNext) {\n dir = normalize(currScreen - prevScreen);\n }\n else {\n vec2 dirA = normalize(currScreen - prevScreen);\n vec2 dirB = normalize(nextScreen - currScreen);\n\n vec2 tanget = normalize(dirA + dirB);\n\n float miter = 1.0 / max(dot(tanget, dirA), 0.5);\n len *= miter;\n dir = tanget;\n }\n\n dir = vec2(-dir.y, dir.x) * len;\n currScreen += dir;\n\n currProj.xy = (currScreen / viewport.zw - 0.5) * 2.0 * abs(currProj.w);\n@end\n\n\n@export ecgl.meshLines3D.vertex\n\nattribute vec3 position: POSITION;\nattribute vec3 positionPrev;\nattribute vec3 positionNext;\nattribute float offset;\nattribute vec4 a_Color : COLOR;\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nattribute vec3 prevPositionPrev;\nattribute vec3 prevPositionNext;\nuniform float percent : 1.0;\n#endif\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\nuniform float near : NEAR;\n\nvarying vec4 v_Color;\n\n@import ecgl.common.wireframe.vertexHeader\n\n@import ecgl.lines3D.clipNear\n\nvoid main()\n{\n @import ecgl.lines3D.expandLine\n\n gl_Position = currProj;\n\n v_Color = a_Color;\n\n @import ecgl.common.wireframe.vertexMain\n}\n@end\n\n\n@export ecgl.meshLines3D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.util.srgb\n\nvoid main()\n{\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color * v_Color);\n#else\n gl_FragColor = color * v_Color;\n#endif\n\n @import ecgl.common.wireframe.fragmentMain\n}\n\n@end",Ls=Un.firstNotNull;Ao.Shader.import(Ps);var Os={x:0,y:2,z:1},Ds=l["d"].extend({type:"grid3D",__ecgl__:!0,init:function(e,t){var r=[["y","z","x",-1,"left"],["y","z","x",1,"right"],["x","y","z",-1,"bottom"],["x","y","z",1,"top"],["x","z","y",-1,"far"],["x","z","y",1,"near"]],i=["x","y","z"],n=new Ao.Material({shader:Ao.createShader("ecgl.color"),depthMask:!1,transparent:!0}),a=new Ao.Material({shader:Ao.createShader("ecgl.meshLines3D"),depthMask:!1,transparent:!0});n.define("fragment","DOUBLE_SIDED"),n.define("both","VERTEX_COLOR"),this.groupGL=new Ao.Node,this._control=new $o({zr:t.getZr()}),this._control.init(),this._faces=r.map((function(e){var t=new ys(e,a,n);return this.groupGL.add(t.rootNode),t}),this),this._axes=i.map((function(e){var t=new Cs(e,a);return this.groupGL.add(t.rootNode),t}),this);var o=t.getDevicePixelRatio();this._axisLabelSurface=new us({width:256,height:256,devicePixelRatio:o}),this._axisLabelSurface.onupdate=function(){t.getZr().refresh()},this._axisPointerLineMesh=new Ao.Mesh({geometry:new os({useNativeLine:!1}),material:a,castShadow:!1,ignorePicking:!0,renderOrder:3}),this.groupGL.add(this._axisPointerLineMesh),this._axisPointerLabelsSurface=new us({width:128,height:128,devicePixelRatio:o}),this._axisPointerLabelsMesh=new Es({ignorePicking:!0,renderOrder:4,castShadow:!1}),this._axisPointerLabelsMesh.material.set("textureAtlas",this._axisPointerLabelsSurface.getTexture()),this.groupGL.add(this._axisPointerLabelsMesh),this._lightRoot=new Ao.Node,this._sceneHelper=new cs,this._sceneHelper.initLight(this._lightRoot)},render:function(e,t,r){this._model=e,this._api=r;var i=e.coordinateSystem;i.viewGL.add(this._lightRoot),e.get("show")?i.viewGL.add(this.groupGL):i.viewGL.remove(this.groupGL);var n=this._control;n.setViewGL(i.viewGL);var a=e.getModel("viewControl");n.setFromViewControlModel(a,0),this._axisLabelSurface.clear(),n.off("update"),e.get("show")&&(this._faces.forEach((function(i){i.update(e,t,r)}),this),this._axes.forEach((function(t){t.update(e,this._axisLabelSurface,r)}),this)),n.on("update",this._onCameraChange.bind(this,e,r),this),this._sceneHelper.setScene(i.viewGL.scene),this._sceneHelper.updateLight(e),i.viewGL.setPostEffect(e.getModel("postEffect"),r),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._initMouseHandler(e)},afterRender:function(e,t,r,i){var n=i.renderer;this._sceneHelper.updateAmbientCubemap(n,e,r),this._sceneHelper.updateSkybox(n,e,r)},showAxisPointer:function(e,t,r,i){this._doShowAxisPointer(),this._updateAxisPointer(i.value)},hideAxisPointer:function(e,t,r,i){this._doHideAxisPointer()},_initMouseHandler:function(e){var t=e.coordinateSystem,r=t.viewGL;e.get("show")&&e.get("axisPointer.show")?r.on("mousemove",this._updateAxisPointerOnMousePosition,this):r.off("mousemove",this._updateAxisPointerOnMousePosition)},_updateAxisPointerOnMousePosition:function(e){if(!e.target){for(var t,r=this._model,i=r.coordinateSystem,n=i.viewGL,a=n.castRay(e.offsetX,e.offsetY,new Ao.Ray),o=0;o<this._faces.length;o++){var s=this._faces[o];if(!s.rootNode.invisible){s.plane.normal.dot(n.camera.worldTransform.z)<0&&s.plane.normal.negate();var l=a.intersectPlane(s.plane);if(l){var u=i.getAxis(s.faceInfo[0]),h=i.getAxis(s.faceInfo[1]),c=Os[s.faceInfo[0]],d=Os[s.faceInfo[1]];u.contain(l.array[c])&&h.contain(l.array[d])&&(t=l)}}}if(t){var f=i.pointToData(t.array,[],!0);this._updateAxisPointer(f),this._doShowAxisPointer()}else this._doHideAxisPointer()}},_onCameraChange:function(e,t){e.get("show")&&(this._updateFaceVisibility(),this._updateAxisLinePosition());var r=this._control;t.dispatchAction({type:"grid3DChangeCamera",alpha:r.getAlpha(),beta:r.getBeta(),distance:r.getDistance(),center:r.getCenter(),from:this.uid,grid3DId:e.id})},_updateFaceVisibility:function(){var e=this._control.getCamera(),t=new Ao.Vector3;e.update();for(var r=0;r<this._faces.length/2;r++){for(var i=[],n=0;n<2;n++){var a=this._faces[2*r+n];a.rootNode.getWorldPosition(t),t.transformMat4(e.viewMatrix),i[n]=t.z}var o=i[0]>i[1]?0:1,s=this._faces[2*r+o],l=this._faces[2*r+1-o];s.rootNode.invisible=!0,l.rootNode.invisible=!1}},_updateAxisLinePosition:function(){var e=this._model.coordinateSystem,t=e.getAxis("x"),r=e.getAxis("y"),i=e.getAxis("z"),n=i.getExtentMax(),a=i.getExtentMin(),o=t.getExtentMin(),s=t.getExtentMax(),l=r.getExtentMax(),u=r.getExtentMin(),h=this._axes[0].rootNode,c=this._axes[1].rootNode,d=this._axes[2].rootNode,f=this._faces,p=f[4].rootNode.invisible?u:l,m=f[2].rootNode.invisible?n:a,g=f[0].rootNode.invisible?o:s,_=f[2].rootNode.invisible?n:a,v=f[0].rootNode.invisible?s:o,y=f[4].rootNode.invisible?u:l;h.rotation.identity(),c.rotation.identity(),d.rotation.identity(),f[4].rootNode.invisible&&(this._axes[0].flipped=!0,h.rotation.rotateX(Math.PI)),f[0].rootNode.invisible&&(this._axes[1].flipped=!0,c.rotation.rotateZ(Math.PI)),f[4].rootNode.invisible&&(this._axes[2].flipped=!0,d.rotation.rotateY(Math.PI)),h.position.set(0,m,p),c.position.set(g,_,0),d.position.set(v,0,y),h.update(),c.update(),d.update(),this._updateAxisLabelAlign()},_updateAxisLabelAlign:function(){var e=this._control.getCamera(),t=[new Ao.Vector4,new Ao.Vector4],r=new Ao.Vector4;this.groupGL.getWorldPosition(r),r.w=1,r.transformMat4(e.viewMatrix).transformMat4(e.projectionMatrix),r.x/=r.w,r.y/=r.w,this._axes.forEach((function(i){for(var n=i.axisLineCoords,a=(i.labelsMesh.geometry,0);a<t.length;a++)t[a].setArray(n[a]),t[a].w=1,t[a].transformMat4(i.rootNode.worldTransform).transformMat4(e.viewMatrix).transformMat4(e.projectionMatrix),t[a].x/=t[a].w,t[a].y/=t[a].w;var o,s,l=t[1].x-t[0].x,u=t[1].y-t[0].y,h=(t[1].x+t[0].x)/2,c=(t[1].y+t[0].y)/2;Math.abs(u/l)<.5?(o="center",s=c>r.y?"bottom":"top"):(s="middle",o=h>r.x?"left":"right"),i.setSpriteAlign(o,s,this._api)}),this)},_doShowAxisPointer:function(){this._axisPointerLineMesh.invisible&&(this._axisPointerLineMesh.invisible=!1,this._axisPointerLabelsMesh.invisible=!1,this._api.getZr().refresh())},_doHideAxisPointer:function(){this._axisPointerLineMesh.invisible||(this._axisPointerLineMesh.invisible=!0,this._axisPointerLabelsMesh.invisible=!0,this._api.getZr().refresh())},_updateAxisPointer:function(e){var t=this._model.coordinateSystem,r=t.dataToPoint(e),i=this._axisPointerLineMesh,n=i.geometry,a=this._model.getModel("axisPointer"),o=this._api.getDevicePixelRatio();function s(e){return Un.firstNotNull(e.model.get("axisPointer.show"),a.get("show"))}function l(e){var t=e.model.getModel("axisPointer",a),r=t.getModel("lineStyle"),i=Ao.parseColor(r.get("color")),n=Ls(r.get("width"),1),o=Ls(r.get("opacity"),1);return i[3]*=o,{color:i,lineWidth:n}}n.convertToDynamicArray(!0);for(var u=0;u<this._faces.length;u++){var h=this._faces[u];if(!h.rootNode.invisible){for(var c=h.faceInfo,d=c[3]<0?t.getAxis(c[2]).getExtentMin():t.getAxis(c[2]).getExtentMax(),f=Os[c[2]],p=0;p<2;p++){var m=c[p],g=c[1-p],_=t.getAxis(m),v=t.getAxis(g);if(s(_)){var y=[0,0,0],x=[0,0,0],T=Os[m],b=Os[g];y[T]=x[T]=r[T],y[f]=x[f]=d,y[b]=v.getExtentMin(),x[b]=v.getExtentMax();var w=l(_);n.addLine(y,x,w.color,w.lineWidth*o)}}if(s(t.getAxis(c[2]))){y=r.slice(),x=r.slice();x[f]=d;w=l(t.getAxis(c[2]));n.addLine(y,x,w.color,w.lineWidth*o)}}}n.convertToTypedArray(),this._updateAxisPointerLabelsMesh(e),this._api.getZr().refresh()},_updateAxisPointerLabelsMesh:function(e){var t=this._model,r=this._axisPointerLabelsMesh,i=this._axisPointerLabelsSurface,n=t.coordinateSystem,a=t.getModel("axisPointer");r.geometry.convertToDynamicArray(!0),i.clear();var o={x:"y",y:"x",z:"y"};this._axes.forEach((function(t,s){var u=n.getAxis(t.dim),h=u.model,c=h.getModel("axisPointer",a),d=c.getModel("label"),f=c.get("lineStyle.color");if(d.get("show")&&c.get("show")){var p=e[s],m=d.get("formatter"),g=u.scale.getLabel({value:p});if(null!=m)g=m(g,e);else if("interval"===u.scale.type||"log"===u.scale.type){var _=l["E"].getPrecisionSafe(u.scale.getTicks()[0]);g=p.toFixed(_+2)}var v=d.get("color"),y=new l["z"].Text({style:Object(Yo["c"])(d,{text:g,fill:v||f,align:"left",verticalAlign:"top"})}),x=i.add(y),T=y.getBoundingRect(),b=this._api.getDevicePixelRatio(),w=t.rootNode.position.toArray(),E=Os[o[t.dim]];w[E]+=(t.flipped?-1:1)*d.get("margin"),w[Os[t.dim]]=u.dataToCoord(e[s]),r.geometry.addSprite(w,[T.width*b,T.height*b],x,t.textAlign,t.textVerticalAlign)}}),this),i.getZr().refreshImmediately(),r.material.set("uvScale",i.getCoordsScale()),r.geometry.convertToTypedArray()},dispose:function(){this.groupGL.removeAll(),this._control.dispose()}}),Rs=r("cf7e");function Is(e){Rs["a"].call(this,e),this.type="cartesian3D",this.dimensions=["x","y","z"],this.size=[0,0,0]}Is.prototype={constructor:Is,model:null,containPoint:function(e){return this.getAxis("x").contain(e[0])&&this.getAxis("y").contain(e[2])&&this.getAxis("z").contain(e[1])},containData:function(e){return this.getAxis("x").containData(e[0])&&this.getAxis("y").containData(e[1])&&this.getAxis("z").containData(e[2])},dataToPoint:function(e,t,r){return t=t||[],t[0]=this.getAxis("x").dataToCoord(e[0],r),t[2]=this.getAxis("y").dataToCoord(e[1],r),t[1]=this.getAxis("z").dataToCoord(e[2],r),t},pointToData:function(e,t,r){return t=t||[],t[0]=this.getAxis("x").coordToData(e[0],r),t[1]=this.getAxis("y").coordToData(e[2],r),t[2]=this.getAxis("z").coordToData(e[1],r),t}},l["Y"].inherits(Is,Rs["a"]);var Fs=Is;function Bs(e,t,r){l["a"].call(this,e,t,r)}Bs.prototype={constructor:Bs,getExtentMin:function(){var e=this._extent;return Math.min(e[0],e[1])},getExtentMax:function(){var e=this._extent;return Math.max(e[0],e[1])},calculateCategoryInterval:function(){return Math.floor(this.scale.count()/8)}},l["Y"].inherits(Bs,l["a"]);var zs=Bs,Us=r("f934"),Gs=function(){this._pool={},this._allocatedTextures=[]};Gs.prototype={constructor:Gs,get:function(e){var t=Vs(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var r=this._pool[t];if(!r.length){var i=new lr(e);return this._allocatedTextures.push(i),i}return r.pop()},put:function(e){var t=Vs(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var r=this._pool[t];r.push(e)},clear:function(e){for(var t=0;t<this._allocatedTextures.length;t++)this._allocatedTextures[t].dispose(e);this._pool={},this._allocatedTextures=[]}};var ks={width:512,height:512,type:P.UNSIGNED_BYTE,format:P.RGBA,wrapS:P.CLAMP_TO_EDGE,wrapT:P.CLAMP_TO_EDGE,minFilter:P.LINEAR_MIPMAP_LINEAR,magFilter:P.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},Hs=Object.keys(ks);function Vs(e){w.defaultsWithPropList(e,ks,Hs),Ws(e);for(var t="",r=0;r<Hs.length;r++){var i=Hs[r],n=e[i].toString();t+=n}return t}function Ws(e){var t=js(e.width,e.height);e.format===P.DEPTH_COMPONENT&&(e.useMipmap=!1),t&&e.useMipmap||(e.minFilter==P.NEAREST_MIPMAP_NEAREST||e.minFilter==P.NEAREST_MIPMAP_LINEAR?e.minFilter=P.NEAREST:e.minFilter!=P.LINEAR_MIPMAP_LINEAR&&e.minFilter!=P.LINEAR_MIPMAP_NEAREST||(e.minFilter=P.LINEAR)),t||(e.wrapS=P.CLAMP_TO_EDGE,e.wrapT=P.CLAMP_TO_EDGE)}function js(e,t){return 0===(e&e-1)&&0===(t&t-1)}var Xs=Gs,qs="@export clay.sm.depth.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nuniform vec2 uvRepeat = vec2(1.0, 1.0);\nuniform vec2 uvOffset = vec2(0.0, 0.0);\n@import clay.chunk.skinning_header\n@import clay.chunk.instancing_header\nvarying vec4 v_ViewPosition;\nvarying vec2 v_Texcoord;\nvoid main(){\n vec4 P = vec4(position, 1.0);\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n P = skinMatrixWS * P;\n#endif\n#ifdef INSTANCING\n @import clay.chunk.instancing_matrix\n P = instanceMat * P;\n#endif\n v_ViewPosition = worldViewProjection * P;\n gl_Position = v_ViewPosition;\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n}\n@end\n@export clay.sm.depth.fragment\nvarying vec4 v_ViewPosition;\nvarying vec2 v_Texcoord;\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\nuniform sampler2D alphaMap;\nuniform float alphaCutoff: 0.0;\n@import clay.util.encode_float\nvoid main(){\n float depth = v_ViewPosition.z / v_ViewPosition.w;\n if (alphaCutoff > 0.0) {\n if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {\n discard;\n }\n }\n#ifdef USE_VSM\n depth = depth * 0.5 + 0.5;\n float moment1 = depth;\n float moment2 = depth * depth;\n #ifdef SUPPORT_STANDARD_DERIVATIVES\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n moment2 += 0.25*(dx*dx+dy*dy);\n #endif\n gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n #ifdef SUPPORT_STANDARD_DERIVATIVES\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n #else\n depth += bias;\n #endif\n gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n@export clay.sm.debug_depth\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n@import clay.util.decode_float\nvoid main() {\n vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n float depth = decodeFloat(tex);\n gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n@end\n@export clay.sm.distance.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\n@import clay.chunk.skinning_header\nvarying vec3 v_WorldPosition;\nvoid main (){\n vec4 P = vec4(position, 1.0);\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n P = skinMatrixWS * P;\n#endif\n#ifdef INSTANCING\n @import clay.chunk.instancing_matrix\n P = instanceMat * P;\n#endif\n gl_Position = worldViewProjection * P;\n v_WorldPosition = (world * P).xyz;\n}\n@end\n@export clay.sm.distance.fragment\nuniform vec3 lightPosition;\nuniform float range : 100;\nvarying vec3 v_WorldPosition;\n@import clay.util.encode_float\nvoid main(){\n float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n dist = dist / range;\n gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n@export clay.plugin.shadow_map_common\n@import clay.util.decode_float\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n vec4 tex = texture2D(map, uv);\n return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n float shadowContrib = tapShadowMap(map, uv, z);\n vec2 offset = vec2(1.0 / textureSize) * scale;\n#ifdef PCF_KERNEL_SIZE\n for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\n shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\n }}\n return shadowContrib / float(PCF_KERNEL_SIZE + 1);\n#else\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n return shadowContrib / 9.0;\n#endif\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n return pcf(map, uv, z, textureSize, vec2(1.0));\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n float p = 0.0;\n z = z * 0.5 + 0.5;\n if (z <= moments.x) {\n p = 1.0;\n }\n float variance = moments.y - moments.x * moments.x;\n variance = max(variance, 0.0000001);\n float mD = moments.x - z;\n float pMax = variance / (variance + mD * mD);\n pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n return max(p, pMax);\n}\nfloat computeShadowContrib(\n sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n posInLightSpace.xyz /= posInLightSpace.w;\n float z = posInLightSpace.z;\n if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n #ifdef USE_VSM\n vec2 moments = texture2D(map, uv * scale + offset).xy;\n return chebyshevUpperBound(moments, z);\n #else\n return pcf(map, uv * scale + offset, z, textureSize, scale);\n #endif\n }\n return 1.0;\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n float dist = length(direction);\n vec4 shadowTex = textureCube(map, direction);\n#ifdef USE_VSM\n vec2 moments = shadowTex.xy;\n float variance = moments.y - moments.x * moments.x;\n float mD = moments.x - dist;\n float p = variance / (variance + mD * mD);\n if(moments.x + 0.001 < dist){\n return clamp(p, 0.0, 1.0);\n }else{\n return 1.0;\n }\n#else\n return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n@end\n@export clay.plugin.compute_shadow_map\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1]:unconfigurable;\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE]:unconfigurable;\nuniform float directionalLightShadowMapSizes[1]:unconfigurable;\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE]:unconfigurable;\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE]:unconfigurable;\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\n#endif\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\nuniform bool shadowEnabled : true;\n#ifdef PCF_KERNEL_SIZE\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\n#endif\n@import clay.plugin.shadow_map_common\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n float shadowContrib;\n for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n spotLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n#ifdef SHADOW_CASCADE\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n / (gl_DepthRange.far - gl_DepthRange.near);\n float shadowContrib;\n shadowContribs[0] = 1.0;\n for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n if (\n depth >= shadowCascadeClipsNear[_idx_] &&\n depth <= shadowCascadeClipsFar[_idx_]\n ) {\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[0],\n vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n );\n shadowContribs[0] = shadowContrib;\n }\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#else\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float shadowContrib;\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#endif\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n vec3 lightPosition;\n vec3 direction;\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n lightPosition = pointLightPosition[_idx_];\n direction = position - lightPosition;\n shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n }}\n for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#endif\n@end",Ys=["px","nx","py","ny","pz","nz"];function Zs(e,t,r){if("alphaMap"===r)return e.material.get("diffuseMap");if("alphaCutoff"===r){if(e.material.isDefined("fragment","ALPHA_TEST")&&e.material.get("diffuseMap")){var i=e.material.get("alphaCutoff");return i||0}return 0}return"uvRepeat"===r?e.material.get("uvRepeat"):"uvOffset"===r?e.material.get("uvOffset"):t.get(r)}function Ks(e,t){var r=e.material,i=t.material;return r.get("diffuseMap")!==i.get("diffuseMap")||(r.get("alphaCutoff")||0)!==(i.get("alphaCutoff")||0)}Ye["import"](qs);var Qs=S.extend((function(){return{softShadow:Qs.PCF,shadowBlur:1,lightFrustumBias:"auto",kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"highp",_lastRenderNotCastShadow:!1,_frameBuffer:new vi,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_depthMaterials:{},_distanceMaterials:{},_receivers:[],_lightsCastShadow:[],_lightCameras:{},_lightMaterials:{},_texturePool:new Xs}}),(function(){this._gaussianPassH=new bn({fragment:Ye.source("clay.compositor.gaussian_blur")}),this._gaussianPassV=new bn({fragment:Ye.source("clay.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new bn({fragment:Ye.source("clay.sm.debug_depth")})}),{render:function(e,t,r,i){r||(r=t.getMainCamera()),this.trigger("beforerender",this,e,t,r),this._renderShadowPass(e,t,r,i),this.trigger("afterrender",this,e,t,r)},renderDebug:function(e,t){e.saveClear();var r=e.viewport,i=0,n=0,a=t||r.width/4,o=a;for(var s in this.softShadow===Qs.VSM?this._outputDepthPass.material.define("fragment","USE_VSM"):this._outputDepthPass.material.undefine("fragment","USE_VSM"),this._textures){var l=this._textures[s];e.setViewport(i,n,a*l.width/l.height,o),this._outputDepthPass.setUniform("depthMap",l),this._outputDepthPass.render(e),i+=a*l.width/l.height}e.setViewport(r),e.restoreClear()},_updateReceivers:function(e,t){if(t.receiveShadow?(this._receivers.push(t),t.material.set("shadowEnabled",1),t.material.set("pcfKernel",this.kernelPCF)):t.material.set("shadowEnabled",0),this.softShadow===Qs.VSM)t.material.define("fragment","USE_VSM"),t.material.undefine("fragment","PCF_KERNEL_SIZE");else{t.material.undefine("fragment","USE_VSM");var r=this.kernelPCF;r&&r.length?t.material.define("fragment","PCF_KERNEL_SIZE",r.length/2):t.material.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(e,t){var r=this;t.traverse((function(t){t.isRenderable()&&r._updateReceivers(e,t)}));for(var i=0;i<t.lights.length;i++){var n=t.lights[i];n.castShadow&&!n.invisible&&this._lightsCastShadow.push(n)}},_renderShadowPass:function(e,t,r,i){for(var n in this._shadowMapNumber)this._shadowMapNumber[n]=0;this._lightsCastShadow.length=0,this._receivers.length=0;var a=e.gl;if(i||t.update(),r&&r.update(),t.updateLights(),this._update(e,t),this._lightsCastShadow.length||!this._lastRenderNotCastShadow){this._lastRenderNotCastShadow=0===this._lightsCastShadow,a.enable(a.DEPTH_TEST),a.depthMask(!0),a.disable(a.BLEND),a.clearColor(1,1,1,1);for(var o,s=[],l=[],u=[],h=[],c=[],d=[],f=0;f<this._lightsCastShadow.length;f++){var p=this._lightsCastShadow[f];if("DIRECTIONAL_LIGHT"===p.type){if(o){console.warn("Only one direectional light supported with shadow cascade");continue}if(p.shadowCascade>4){console.warn("Support at most 4 cascade");continue}p.shadowCascade>1&&(o=p),this.renderDirectionalLightShadow(e,t,r,p,c,h,u)}else"SPOT_LIGHT"===p.type?this.renderSpotLightShadow(e,t,p,l,s):"POINT_LIGHT"===p.type&&this.renderPointLightShadow(e,t,p,d);this._shadowMapNumber[p.type]++}for(var m in this._shadowMapNumber){var g=this._shadowMapNumber[m],_=m+"_SHADOWMAP_COUNT";for(f=0;f<this._receivers.length;f++){var v=this._receivers[f],y=v.material;y.fragmentDefines[_]!==g&&(g>0?y.define("fragment",_,g):y.isDefined("fragment",_)&&y.undefine("fragment",_))}}for(f=0;f<this._receivers.length;f++){v=this._receivers[f],y=v.material;o?y.define("fragment","SHADOW_CASCADE",o.shadowCascade):y.undefine("fragment","SHADOW_CASCADE")}var x=t.shadowUniforms;if(u.length>0){var T=u.map(S);if(x.directionalLightShadowMaps={value:u,type:"tv"},x.directionalLightMatrices={value:h,type:"m4v"},x.directionalLightShadowMapSizes={value:T,type:"1fv"},o){var b=c.slice(),w=c.slice();b.pop(),w.shift(),b.reverse(),w.reverse(),h.reverse(),x.shadowCascadeClipsNear={value:b,type:"1fv"},x.shadowCascadeClipsFar={value:w,type:"1fv"}}}if(s.length>0){var E=s.map(S);x=t.shadowUniforms;x.spotLightShadowMaps={value:s,type:"tv"},x.spotLightMatrices={value:l,type:"m4v"},x.spotLightShadowMapSizes={value:E,type:"1fv"}}d.length>0&&(x.pointLightShadowMaps={value:d,type:"tv"})}function S(e){return e.height}},renderDirectionalLightShadow:function(){var e=new Ur,t=new Dt,r=new kt,i=new Dt,n=new Dt,a=new Dt,o=new Dt;return function(s,l,u,h,c,d,f){var p=this._getDepthMaterial(h),m={getMaterial:function(e){return e.shadowDepthMaterial||p},isMaterialChanged:Ks,getUniform:Zs,ifRender:function(e){return e.castShadow},sortCompare:dt.opaqueSortCompare};if(!l.viewBoundingBoxLastFrame.isFinite()){var g=l.getBoundingBox();l.viewBoundingBoxLastFrame.copy(g).applyTransform(u.viewMatrix)}var _=Math.min(-l.viewBoundingBoxLastFrame.min.z,u.far),v=Math.max(-l.viewBoundingBoxLastFrame.max.z,u.near),y=this._getDirectionalLightCamera(h,l,u),x=a.array;o.copy(y.projectionMatrix),Qe.invert(n.array,y.worldTransform.array),Qe.multiply(n.array,n.array,u.worldTransform.array),Qe.multiply(x,o.array,n.array);for(var T=[],b=u instanceof oi,w=(u.near+u.far)/(u.near-u.far),E=2*u.near*u.far/(u.near-u.far),S=0;S<=h.shadowCascade;S++){var M=v*Math.pow(_/v,S/h.shadowCascade),A=v+(_-v)*S/h.shadowCascade,N=M*h.cascadeSplitLogFactor+A*(1-h.cascadeSplitLogFactor);T.push(N),c.push(-(-N*w+E)/-N)}var C=this._getTexture(h,h.shadowCascade);f.push(C);var P=s.viewport,L=s.gl;this._frameBuffer.attach(C),this._frameBuffer.bind(s),L.clear(L.COLOR_BUFFER_BIT|L.DEPTH_BUFFER_BIT);for(S=0;S<h.shadowCascade;S++){var O=T[S],D=T[S+1];b?Qe.perspective(t.array,u.fov/180*Math.PI,u.aspect,O,D):Qe.ortho(t.array,u.left,u.right,u.bottom,u.top,O,D),e.setFromProjection(t),e.getTransformedBoundingBox(r,n),r.applyProjection(o);var R=r.min.array,I=r.max.array;R[0]=Math.max(R[0],-1),R[1]=Math.max(R[1],-1),I[0]=Math.min(I[0],1),I[1]=Math.min(I[1],1),i.ortho(R[0],I[0],R[1],I[1],1,-1),y.projectionMatrix.multiplyLeft(i);var F=h.shadowResolution||512;s.setViewport((h.shadowCascade-S-1)*F,0,F,F,1);var B=l.updateRenderList(y);s.renderPass(B.opaque,y,m),this.softShadow===Qs.VSM&&this._gaussianFilter(s,C,C.width);var z=new Dt;z.copy(y.viewMatrix).multiplyLeft(y.projectionMatrix),d.push(z.array),y.projectionMatrix.copy(o)}this._frameBuffer.unbind(s),s.setViewport(P)}}(),renderSpotLightShadow:function(e,t,r,i,n){var a=this._getTexture(r),o=this._getSpotLightCamera(r),s=e.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(e),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT);var l=this._getDepthMaterial(r),u={getMaterial:function(e){return e.shadowDepthMaterial||l},isMaterialChanged:Ks,getUniform:Zs,ifRender:function(e){return e.castShadow},sortCompare:dt.opaqueSortCompare},h=t.updateRenderList(o);e.renderPass(h.opaque,o,u),this._frameBuffer.unbind(e),this.softShadow===Qs.VSM&&this._gaussianFilter(e,a,a.width);var c=new Dt;c.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),n.push(a),i.push(c.array)},renderPointLightShadow:function(e,t,r,i){var n=this._getTexture(r),a=e.gl;i.push(n);var o=this._getDepthMaterial(r),s={getMaterial:function(e){return e.shadowDepthMaterial||o},getUniform:Zs,sortCompare:dt.opaqueSortCompare},l={px:[],py:[],pz:[],nx:[],ny:[],nz:[]},u=new kt,h=r.getWorldPosition().array,c=new kt,d=r.range;c.min.setArray(h),c.max.setArray(h);var f=new xt(d,d,d);c.max.add(f),c.min.sub(f);var p={px:!1,py:!1,pz:!1,nx:!1,ny:!1,nz:!1};t.traverse((function(e){if(e.isRenderable()&&e.castShadow){var t=e.geometry;if(!t.boundingBox){for(var r=0;r<Ys.length;r++)l[Ys[r]].push(e);return}if(u.transformFrom(t.boundingBox,e.worldTransform),!u.intersectBoundingBox(c))return;u.updateVertices();for(r=0;r<Ys.length;r++)p[Ys[r]]=!1;for(r=0;r<8;r++){var i=u.vertices[r],n=i[0]-h[0],a=i[1]-h[1],o=i[2]-h[2],s=Math.abs(n),d=Math.abs(a),f=Math.abs(o);s>d?s>f?p[n>0?"px":"nx"]=!0:p[o>0?"pz":"nz"]=!0:d>f?p[a>0?"py":"ny"]=!0:p[o>0?"pz":"nz"]=!0}for(r=0;r<Ys.length;r++)p[Ys[r]]&&l[Ys[r]].push(e)}}));for(var m=0;m<6;m++){var g=Ys[m],_=this._getPointLightCamera(r,g);this._frameBuffer.attach(n,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+m),this._frameBuffer.bind(e),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),e.renderPass(l[g],_,s)}this._frameBuffer.unbind(e)},_getDepthMaterial:function(e){var t=this._lightMaterials[e.__uid__],r="POINT_LIGHT"===e.type;if(!t){var i=r?"clay.sm.distance.":"clay.sm.depth.";t=new ne({precision:this.precision,shader:new Ye(Ye.source(i+"vertex"),Ye.source(i+"fragment"))}),this._lightMaterials[e.__uid__]=t}return null!=e.shadowSlopeScale&&t.setUniform("slopeScale",e.shadowSlopeScale),null!=e.shadowBias&&t.setUniform("bias",e.shadowBias),this.softShadow===Qs.VSM?t.define("fragment","USE_VSM"):t.undefine("fragment","USE_VSM"),r&&(t.set("lightPosition",e.getWorldPosition().array),t.set("range",e.range)),t},_gaussianFilter:function(e,t,r){var i={width:r,height:r,type:$t.FLOAT},n=this._texturePool.get(i);this._frameBuffer.attach(n),this._frameBuffer.bind(e),this._gaussianPassH.setUniform("texture",t),this._gaussianPassH.setUniform("textureWidth",r),this._gaussianPassH.render(e),this._frameBuffer.attach(t),this._gaussianPassV.setUniform("texture",n),this._gaussianPassV.setUniform("textureHeight",r),this._gaussianPassV.render(e),this._frameBuffer.unbind(e),this._texturePool.put(n)},_getTexture:function(e,t){var r=e.__uid__,i=this._textures[r],n=e.shadowResolution||512;return t=t||1,i||(i="POINT_LIGHT"===e.type?new ni:new lr,i.width=n*t,i.height=n,this.softShadow===Qs.VSM?(i.type=$t.FLOAT,i.anisotropic=4):(i.minFilter=P.NEAREST,i.magFilter=P.NEAREST,i.useMipmap=!1),this._textures[r]=i),i},_getPointLightCamera:function(e,t){this._lightCameras.point||(this._lightCameras.point={px:new oi,nx:new oi,py:new oi,ny:new oi,pz:new oi,nz:new oi});var r=this._lightCameras.point[t];switch(r.far=e.range,r.fov=90,r.position.set(0,0,0),t){case"px":r.lookAt(xt.POSITIVE_X,xt.NEGATIVE_Y);break;case"nx":r.lookAt(xt.NEGATIVE_X,xt.NEGATIVE_Y);break;case"py":r.lookAt(xt.POSITIVE_Y,xt.POSITIVE_Z);break;case"ny":r.lookAt(xt.NEGATIVE_Y,xt.NEGATIVE_Z);break;case"pz":r.lookAt(xt.POSITIVE_Z,xt.NEGATIVE_Y);break;case"nz":r.lookAt(xt.NEGATIVE_Z,xt.NEGATIVE_Y);break}return e.getWorldPosition(r.position),r.update(),r},_getDirectionalLightCamera:function(){var e=new Dt,t=new kt,r=new kt;return function(i,n,a){this._lightCameras.directional||(this._lightCameras.directional=new gn);var o=this._lightCameras.directional;t.copy(n.viewBoundingBoxLastFrame),t.intersection(a.frustum.boundingBox),o.position.copy(t.min).add(t.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(i.rotation),o.scale.copy(i.scale),o.updateWorldTransform(),Dt.invert(e,o.worldTransform),Dt.multiply(e,e,a.worldTransform),r.copy(t).applyTransform(e);var s=r.min.array,l=r.max.array;return o.position.set((s[0]+l[0])/2,(s[1]+l[1])/2,l[2]).transformMat4(o.worldTransform),o.near=0,o.far=-s[2]+l[2],isNaN(this.lightFrustumBias)?o.far*=4:o.far+=this.lightFrustumBias,o.left=s[0],o.right=l[0],o.top=l[1],o.bottom=s[1],o.update(!0),o}}(),_getSpotLightCamera:function(e){this._lightCameras.spot||(this._lightCameras.spot=new oi);var t=this._lightCameras.spot;return t.fov=2*e.penumbraAngle,t.far=e.range,t.worldTransform.copy(e.worldTransform),t.updateProjectionMatrix(),Qe.invert(t.viewMatrix.array,t.worldTransform.array),t},dispose:function(e){var t=e.gl||e;for(var r in this._frameBuffer&&this._frameBuffer.dispose(t),this._textures)this._textures[r].dispose(t);this._texturePool.clear(e.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var i=0;i<this._receivers.length;i++){var n=this._receivers[i];if(n.material){var a=n.material;a.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),a.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),a.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),a.set("shadowEnabled",0)}}this._receivers=[],this._lightsCastShadow=[]}});Qs.VSM=1,Qs.PCF=2;var Js=Qs,$s=S.extend((function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}}),{updateParameter:function(e,t){var r,i,n=this.outputs[e],a=n.parameters,o=n._parametersCopy;if(o||(o=n._parametersCopy={}),a)for(var s in a)"width"!==s&&"height"!==s&&(o[s]=a[s]);return r=a.width instanceof Function?a.width.call(this,t):a.width,i=a.height instanceof Function?a.height.call(this,t):a.height,o.width===r&&o.height===i||this._outputTextures[e]&&this._outputTextures[e].dispose(t.gl),o.width=r,o.height=i,o},setParameter:function(e,t){},getParameter:function(e){},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},render:function(){},getOutput:function(e,t){if(null==t)return t=e,this._outputTextures[t];var r=this.outputs[t];return r?this._rendered?r.outputLastFrame?this._prevOutputTextures[t]:this._outputTextures[t]:this._rendering?(this._prevOutputTextures[t]||(this._prevOutputTextures[t]=this._compositor.allocateTexture(r.parameters||{})),this._prevOutputTextures[t]):(this.render(e),this._outputTextures[t]):void 0},removeReference:function(e){if(this._outputReferences[e]--,0===this._outputReferences[e]){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,r){this.inputLinks[e]={node:t,pin:r},t.outputLinks[r]||(t.outputLinks[r]=[]),t.outputLinks[r].push({node:this,pin:e}),this.pass.material.enableTexture(e)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(e){if(!this._rendering){for(var t in this._rendering=!0,this.inputLinks){var r=this.inputLinks[t];r.node.updateReference(r.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){for(var e in this._rendered=!1,this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}}),el=$s,tl=S.extend((function(){return{nodes:[]}}),{dirty:function(){this._dirty=!0},addNode:function(e){this.nodes.indexOf(e)>=0||(this.nodes.push(e),this._dirty=!0)},removeNode:function(e){"string"===typeof e&&(e=this.getNodeByName(e));var t=this.nodes.indexOf(e);t>=0&&(this.nodes.splice(t,1),this._dirty=!0)},getNodeByName:function(e){for(var t=0;t<this.nodes.length;t++)if(this.nodes[t].name===e)return this.nodes[t]},update:function(){for(var e=0;e<this.nodes.length;e++)this.nodes[e].clear();for(e=0;e<this.nodes.length;e++){var t=this.nodes[e];if(t.inputs)for(var r in t.inputs)if(t.inputs[r])if(!t.pass||t.pass.material.isUniformEnabled(r)){var i=t.inputs[r],n=this.findPin(i);n?t.link(r,n.node,n.pin):"string"===typeof i?console.warn("Node "+i+" not exist"):console.warn("Pin of "+i.node+"."+i.pin+" not exist")}else console.warn("Pin "+t.name+"."+r+" not used.")}},findPin:function(e){var t;if(("string"===typeof e||e instanceof el)&&(e={node:e}),"string"===typeof e.node)for(var r=0;r<this.nodes.length;r++){var i=this.nodes[r];i.name===e.node&&(t=i)}else t=e.node;if(t){var n=e.pin;if(n||t.outputs&&(n=Object.keys(t.outputs)[0]),t.outputs[n])return{node:t,pin:n}}}}),rl=tl,il=rl.extend((function(){return{_outputs:[],_texturePool:new Xs,_frameBuffer:new vi({depthBuffer:!1})}}),{addNode:function(e){rl.prototype.addNode.call(this,e),e._compositor=this},render:function(e,t){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var r=0;r<this.nodes.length;r++)this.nodes[r].outputs||this._outputs.push(this.nodes[r])}for(r=0;r<this.nodes.length;r++)this.nodes[r].beforeFrame();for(r=0;r<this._outputs.length;r++)this._outputs[r].updateReference();for(r=0;r<this._outputs.length;r++)this._outputs[r].render(e,t);for(r=0;r<this.nodes.length;r++)this.nodes[r].afterFrame()},allocateTexture:function(e){return this._texturePool.get(e)},releaseTexture:function(e){this._texturePool.put(e)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(e){this._texturePool.clear(e)}}),nl=il,al=el.extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},(function(){this.frameBuffer=new vi}),{render:function(e){this._rendering=!0;var t,r=e.gl;if(this.trigger("beforerender"),this.outputs){var i=this.frameBuffer;for(var n in this.outputs){var a=this.updateParameter(n,e),o=this.outputs[n],s=this._compositor.allocateTexture(a);this._outputTextures[n]=s;var l=o.attachment||r.COLOR_ATTACHMENT0;"string"==typeof l&&(l=r[l]),i.attach(s,l)}i.bind(e);var u=e.getGLExtension("EXT_draw_buffers");if(u){var h=[];for(var l in this.outputs)l=parseInt(l),l>=r.COLOR_ATTACHMENT0&&l<=r.COLOR_ATTACHMENT0+8&&h.push(l);u.drawBuffersEXT(h)}e.saveClear(),e.clearBit=P.DEPTH_BUFFER_BIT|P.COLOR_BUFFER_BIT,t=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),e.restoreClear(),i.unbind(e)}else t=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",t),this._rendering=!1,this._rendered=!0}}),ol=al,sl=el.extend((function(){return{texture:null,outputs:{color:{}}}}),(function(){}),{getOutput:function(e,t){return this.texture},beforeFrame:function(){},afterFrame:function(){}}),ll=sl,ul=el.extend((function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}}),(function(){var e=new bn({fragment:this.shader});this.pass=e}),{render:function(e,t){this.trigger("beforerender",e),this._rendering=!0;var r=e.gl;for(var i in this.inputLinks){var n=this.inputLinks[i],a=n.node.getOutput(e,n.pin);this.pass.setUniform(i,a)}if(this.outputs){this.pass.outputs={};var o={};for(var s in this.outputs){var l=this.updateParameter(s,e);isNaN(l.width)&&this.updateParameter(s,e);var u=this.outputs[s],h=this._compositor.allocateTexture(l);this._outputTextures[s]=h;var c=u.attachment||r.COLOR_ATTACHMENT0;"string"===typeof c&&(c=r[c]),o[c]=h}for(var c in this._compositor.getFrameBuffer().bind(e),o)this._compositor.getFrameBuffer().attach(o[c],c);this.pass.render(e),this._compositor.getFrameBuffer().updateMipmap(e)}else this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(e),this.pass.render(e,t);for(var i in this.inputLinks){n=this.inputLinks[i];n.node.removeReference(n.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",e)},updateParameter:function(e,t){var r,i,n=this.outputs[e],a=n.parameters,o=n._parametersCopy;if(o||(o=n._parametersCopy={}),a)for(var s in a)"width"!==s&&"height"!==s&&(o[s]=a[s]);return r="function"===typeof a.width?a.width.call(this,t):a.width,i="function"===typeof a.height?a.height.call(this,t):a.height,r=Math.ceil(r),i=Math.ceil(i),o.width===r&&o.height===i||this._outputTextures[e]&&this._outputTextures[e].dispose(t),o.width=r,o.height=i,o},setParameter:function(e,t){this.pass.setUniform(e,t)},getParameter:function(e){return this.pass.getUniform(e)},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},define:function(e,t){this.pass.material.define("fragment",e,t)},undefine:function(e){this.pass.material.undefine("fragment",e)},removeReference:function(e){if(this._outputReferences[e]--,0===this._outputReferences[e]){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},clear:function(){el.prototype.clear.call(this),this.pass.material.disableTexturesAll()}}),hl=ul,cl="@export clay.compositor.coloradjust\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n float luminance = dot( color, w );\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = tex.rgb + vec3(brightness);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float contrast : 1.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float exposure : 0.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb * pow(2.0, exposure);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float gamma : 1.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = pow(tex.rgb, vec3(gamma));\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb;\n float luminance = dot(color, w);\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end",dl="@export clay.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n@export clay.compositor.kernel.gaussian_13\nfloat gaussianKernel[13];\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n@end\n@export clay.compositor.gaussian_blur\n#define SHADER_NAME gaussian_blur\nuniform sampler2D texture;varying vec2 v_Texcoord;\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main (void)\n{\n @import clay.compositor.kernel.gaussian_9\n vec2 off = blurSize / textureSize;\n off *= vec2(1.0 - blurDir, blurDir);\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n for (int i = 0; i < 9; i++) {\n float w = gaussianKernel[i];\n vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n sum += texel * w;\n weightAll += w;\n }\n gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n@end\n",fl="@export clay.compositor.hdr.log_lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n float luminance = dot(tex.rgb, w);\n luminance = log(luminance + 0.001);\n gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n@end\n@export clay.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\nuniform float frameTime : 0.02;\n@import clay.util.rgbm\nvoid main()\n{\n float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n@export clay.compositor.lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord );\n float luminance = dot(tex.rgb, w);\n gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n@end",pl="\n@export clay.compositor.lut\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform sampler2D lookup;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n float blueColor = tex.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec4 newColor1 = texture2D(lookup, texPos1);\n vec4 newColor2 = texture2D(lookup, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n@end",ml="@export clay.compositor.vignette\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float darkness: 1;\nuniform float offset: 1;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = texel.rgb;\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n@end",gl="@export clay.compositor.output\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = tex.rgb;\n#ifdef OUTPUT_ALPHA\n gl_FragColor.a = tex.a;\n#else\n gl_FragColor.a = 1.0;\n#endif\n gl_FragColor = encodeHDR(gl_FragColor);\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",_l="@export clay.compositor.bright\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\nuniform vec2 textureSize: [512, 512];\nvarying vec2 v_Texcoord;\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n#ifdef ANTI_FLICKER\n vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n texel = median(median(texel, s1, s2), s3, s4);\n#endif\n float lum = dot(texel.rgb , lumWeight);\n vec4 color;\n if (lum > threshold && texel.a > 0.0)\n {\n color = vec4(texel.rgb * scale, texel.a * scale);\n }\n else\n {\n color = vec4(0.0);\n }\n gl_FragColor = encodeHDR(color);\n}\n@end\n",vl="@export clay.compositor.downsample\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nfloat brightness(vec3 c)\n{\n return max(max(c.r, c.g), c.b);\n}\n@import clay.util.clamp_sample\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n#ifdef ANTI_FLICKER\n vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n float s1w = 1.0 / (brightness(s1) + 1.0);\n float s2w = 1.0 / (brightness(s2) + 1.0);\n float s3w = 1.0 / (brightness(s3) + 1.0);\n float s4w = 1.0 / (brightness(s4) + 1.0);\n float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n vec4 color = vec4(\n (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n 1.0\n );\n#else\n vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n color *= 0.25;\n#endif\n gl_FragColor = encodeHDR(color);\n}\n@end",yl="\n@export clay.compositor.upsample\n#define HIGH_QUALITY\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main()\n{\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n gl_FragColor = encodeHDR(s / 16.0);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n@end",xl="@export clay.compositor.hdr.composite\n#define TONEMAPPING\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\nvarying vec2 v_Texcoord;\n@import clay.util.srgb\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nfloat eyeAdaption(float fLum)\n{\n return mix(0.2, fLum, 0.5);\n}\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n float blueColor = color.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec4 newColor1 = texture2D(lut, texPos1);\n vec4 newColor2 = texture2D(lut, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n return newColor.rgb;\n}\n#endif\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = vec4(0.0);\n vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n texel = decodeHDR(texture2D(texture, v_Texcoord));\n originalTexel = texel;\n#endif\n#ifdef BLOOM_ENABLED\n vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n texel.rgb += bloomTexel.rgb * bloomIntensity;\n texel.a += bloomTexel.a * bloomIntensity;\n#endif\n#ifdef LENSFLARE_ENABLED\n texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n texel.a = min(texel.a, 1.0);\n#ifdef LUM_ENABLED\n float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n float exposureBias = adaptedLumDest * exposure;\n#else\n float exposureBias = exposure;\n#endif\n#ifdef TONEMAPPING\n texel.rgb *= exposureBias;\n texel.rgb = ACESToneMapping(texel.rgb);\n#endif\n texel = linearTosRGB(texel);\n#ifdef LUT_ENABLED\n texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n#ifdef COLOR_CORRECTION\n texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n#ifdef VIGNETTE\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n gl_FragColor = encodeHDR(texel);\n#ifdef DEBUG\n #if DEBUG == 1\n gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n #elif DEBUG == 2\n gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n #elif DEBUG == 3\n gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n #endif\n#endif\n if (originalTexel.a <= 0.01 && gl_FragColor.a > 1e-5) {\n gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n }\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",Tl="@export clay.compositor.lensflare\n#define SAMPLE_NUMBER 8\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\nuniform vec2 textureSize : [512, 512];\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvec4 textureDistorted(\n in vec2 texcoord,\n in vec2 direction,\n in vec3 distortion\n) {\n return vec4(\n decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n 1.0\n );\n}\nvoid main()\n{\n vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;\n vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n vec2 haloVec = normalize(ghostVec) * haloWidth;\n vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n vec4 result = vec4(0.0);\n for (int i = 0; i < SAMPLE_NUMBER; i++)\n {\n vec2 offset = fract(texcoord + ghostVec * float(i));\n float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n }\n result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n vec2 offset = fract(texcoord + haloVec);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n gl_FragColor = result;\n}\n@end",bl="@export clay.compositor.blend\n#define SHADER_NAME blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n gl_FragColor = encodeHDR(tex);\n}\n@end",wl="@export clay.compositor.fxaa\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nvarying vec2 v_Texcoord;\n#define FXAA_REDUCE_MIN (1.0/128.0)\n#define FXAA_REDUCE_MUL (1.0/8.0)\n#define FXAA_SPAN_MAX 8.0\n@import clay.util.rgbm\nvoid main()\n{\n vec2 resolution = 1.0 / viewport.zw;\n vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );\n vec3 rgbM = rgbaM.xyz;\n float opacity = rgbaM.w;\n vec3 luma = vec3( 0.299, 0.587, 0.114 );\n float lumaNW = dot( rgbNW, luma );\n float lumaNE = dot( rgbNE, luma );\n float lumaSW = dot( rgbSW, luma );\n float lumaSE = dot( rgbSE, luma );\n float lumaM = dot( rgbM, luma );\n float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n vec2 dir;\n dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n dir * rcpDirMin)) * resolution;\n vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA *= 0.5;\n vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;\n rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;\n rgbB *= 0.25;\n rgbB += rgbA * 0.5;\n float lumaB = dot( rgbB, luma );\n if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n {\n gl_FragColor = vec4( rgbA, opacity );\n }\n else {\n gl_FragColor = vec4( rgbB, opacity );\n }\n}\n@end";function El(e){e["import"](cl),e["import"](dl),e["import"](fl),e["import"](pl),e["import"](ml),e["import"](gl),e["import"](_l),e["import"](vl),e["import"](yl),e["import"](xl),e["import"](Tl),e["import"](bl),e["import"](wl)}El(Ye);var Sl=/^#source\((.*?)\)/;function Ml(e,t){var r=new nl;t=t||{};var i={textures:{},parameters:{}},n=function(n,a){for(var o=0;o<e.nodes.length;o++){var s=e.nodes[o],l=Al(s,i,t);l&&r.addNode(l)}};for(var a in e.parameters){var o=e.parameters[a];i.parameters[a]=Pl(o)}return Ll(e,i,t,(function(e){i.textures=e,n()})),r}function Al(e,t,r){var i,n,a,o,s=e.type||"filter";if("filter"===s){var l=e.shader.trim(),u=Sl.exec(l);if(u?i=Ye.source(u[1].trim()):"#"===l.charAt(0)&&(i=t.shaders[l.substr(1)]),i||(i=l),!i)return}if(e.inputs)for(var h in n={},e.inputs)"string"===typeof e.inputs[h]?n[h]=e.inputs[h]:n[h]={node:e.inputs[h].node,pin:e.inputs[h].pin};if(e.outputs)for(var h in a={},e.outputs){var c=e.outputs[h];a[h]={},null!=c.attachment&&(a[h].attachment=c.attachment),null!=c.keepLastFrame&&(a[h].keepLastFrame=c.keepLastFrame),null!=c.outputLastFrame&&(a[h].outputLastFrame=c.outputLastFrame),c.parameters&&(a[h].parameters=Pl(c.parameters))}if(o="scene"===s?new ol({name:e.name,scene:r.scene,camera:r.camera,outputs:a}):"texture"===s?new ll({name:e.name,outputs:a}):new hl({name:e.name,shader:i,inputs:n,outputs:a}),o){if(e.parameters)for(var h in e.parameters){var d=e.parameters[h];"string"===typeof d?(d=d.trim(),"#"===d.charAt(0)?d=t.textures[d.substr(1)]:o.on("beforerender",Ol(h,Rl(d)))):"function"===typeof d&&o.on("beforerender",d),o.setParameter(h,d)}if(e.defines&&o.pass)for(var h in e.defines){d=e.defines[h];o.pass.material.define("fragment",h,d)}}return o}function Nl(e,t){return e}function Cl(e,t){return t}function Pl(e){var t={};if(!e)return t;["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach((function(r){var i=e[r];null!=i&&("string"===typeof i&&(i=$t[i]),t[r]=i)}));var r=e.scale||1;return["width","height"].forEach((function(i){if(null!=e[i]){var n=e[i];"string"===typeof n?(n=n.trim(),t[i]=Dl(i,Rl(n),r)):t[i]=n}})),t.width||(t.width=Nl),t.height||(t.height=Cl),null!=e.useMipmap&&(t.useMipmap=e.useMipmap),t}function Ll(e,t,r,i){if(e.textures){var n={},a=0,o=!1,s=r.textureRootPath;w.each(e.textures,(function(e,t){var r,l=e.path,u=Pl(e.parameters);if(Array.isArray(l)&&6===l.length)s&&(l=l.map((function(e){return w.relative2absolute(e,s)}))),r=new ni(u);else{if("string"!==typeof l)return;s&&(l=w.relative2absolute(l,s)),r=new lr(u)}r.load(l),a++,r.once("success",(function(){n[t]=r,a--,0===a&&(i(n),o=!0)}))})),0!==a||o||i(n)}else i({})}function Ol(e,t){return function(r){var i=r.getDevicePixelRatio(),n=r.getWidth(),a=r.getHeight(),o=t(n,a,i);this.setParameter(e,o)}}function Dl(e,t,r){return r=r||1,function(e){var i=e.getDevicePixelRatio(),n=e.getWidth()*r,a=e.getHeight()*r;return t(n,a,i)}}function Rl(e){var t=/^expr\((.*)\)$/.exec(e);if(t)try{var r=new Function("width","height","dpr","return "+t[1]);return r(1,1),r}catch(i){throw new Error("Invalid expression.")}}var Il=Ml,Fl=Il;function Bl(e,t){var r=0,i=1/t,n=e;while(n>0)r+=i*(n%t),n=Math.floor(n/t),i/=t;return r}var zl=Bl,Ul="@export ecgl.ssao.estimate\n\nuniform sampler2D depthTex;\n\nuniform sampler2D normalTex;\n\nuniform sampler2D noiseTex;\n\nuniform vec2 depthTexSize;\n\nuniform vec2 noiseTexSize;\n\nuniform mat4 projection;\n\nuniform mat4 projectionInv;\n\nuniform mat4 viewInverseTranspose;\n\nuniform vec3 kernel[KERNEL_SIZE];\n\nuniform float radius : 1;\n\nuniform float power : 1;\n\nuniform float bias: 1e-2;\n\nuniform float intensity: 1.0;\n\nvarying vec2 v_Texcoord;\n\nfloat ssaoEstimator(in vec3 originPos, in mat3 kernelBasis) {\n float occlusion = 0.0;\n\n for (int i = 0; i < KERNEL_SIZE; i++) {\n vec3 samplePos = kernel[i];\n#ifdef NORMALTEX_ENABLED\n samplePos = kernelBasis * samplePos;\n#endif\n samplePos = samplePos * radius + originPos;\n\n vec4 texCoord = projection * vec4(samplePos, 1.0);\n texCoord.xy /= texCoord.w;\n\n vec4 depthTexel = texture2D(depthTex, texCoord.xy * 0.5 + 0.5);\n\n float sampleDepth = depthTexel.r * 2.0 - 1.0;\n if (projection[3][3] == 0.0) {\n sampleDepth = projection[3][2] / (sampleDepth * projection[2][3] - projection[2][2]);\n }\n else {\n sampleDepth = (sampleDepth - projection[3][2]) / projection[2][2];\n }\n \n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - sampleDepth));\n occlusion += rangeCheck * step(samplePos.z, sampleDepth - bias);\n }\n#ifdef NORMALTEX_ENABLED\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\n#else\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\n#endif\n return pow(occlusion, power);\n}\n\nvoid main()\n{\n\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\n\n#ifdef NORMALTEX_ENABLED\n vec4 tex = texture2D(normalTex, v_Texcoord);\n if (dot(tex.rgb, tex.rgb) == 0.0) {\n gl_FragColor = vec4(1.0);\n return;\n }\n vec3 N = tex.rgb * 2.0 - 1.0;\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\n\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\n vec3 T = normalize(rvec - N * dot(rvec, N));\n vec3 BT = normalize(cross(N, T));\n mat3 kernelBasis = mat3(T, BT, N);\n#else\n if (depthTexel.r > 0.99999) {\n gl_FragColor = vec4(1.0);\n return;\n }\n mat3 kernelBasis;\n#endif\n\n float z = depthTexel.r * 2.0 - 1.0;\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * projectedPos;\n\n vec3 position = p4.xyz / p4.w;\n\n float ao = ssaoEstimator(position, kernelBasis);\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\n gl_FragColor = vec4(vec3(ao), 1.0);\n}\n\n@end\n\n\n@export ecgl.ssao.blur\n#define SHADER_NAME SSAO_BLUR\n\nuniform sampler2D ssaoTexture;\n\n#ifdef NORMALTEX_ENABLED\nuniform sampler2D normalTex;\n#endif\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\nuniform int direction: 0.0;\n\n#ifdef DEPTHTEX_ENABLED\nuniform sampler2D depthTex;\nuniform mat4 projection;\nuniform float depthRange : 0.5;\n\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(depthTex, coord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n#endif\n\nvoid main()\n{\n float kernel[5];\n kernel[0] = 0.122581;\n kernel[1] = 0.233062;\n kernel[2] = 0.288713;\n kernel[3] = 0.233062;\n kernel[4] = 0.122581;\n\n vec2 off = vec2(0.0);\n if (direction == 0) {\n off[0] = blurSize / textureSize.x;\n }\n else {\n off[1] = blurSize / textureSize.y;\n }\n\n vec2 coord = v_Texcoord;\n\n float sum = 0.0;\n float weightAll = 0.0;\n\n#ifdef NORMALTEX_ENABLED\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\n#endif\n#if defined(DEPTHTEX_ENABLED)\n float centerDepth = getLinearDepth(v_Texcoord);\n#endif\n\n for (int i = 0; i < 5; i++) {\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 2.0) * off, vec2(0.0), vec2(1.0));\n\n float w = kernel[i];\n#ifdef NORMALTEX_ENABLED\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\n w *= clamp(dot(normal, centerNormal), 0.0, 1.0);\n#endif\n#ifdef DEPTHTEX_ENABLED\n float d = getLinearDepth(coord);\n w *= (1.0 - smoothstep(abs(centerDepth - d) / depthRange, 0.0, 1.0));\n#endif\n\n weightAll += w;\n sum += texture2D(ssaoTexture, coord).r * w;\n }\n\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\n}\n\n@end\n";function Gl(e){for(var t=new Uint8Array(e*e*4),r=0,i=new xt,n=0;n<e;n++)for(var a=0;a<e;a++)i.set(2*Math.random()-1,2*Math.random()-1,0).normalize(),t[r++]=255*(.5*i.x+.5),t[r++]=255*(.5*i.y+.5),t[r++]=0,t[r++]=255;return t}function kl(e){return new lr({pixels:Gl(e),wrapS:$t.REPEAT,wrapT:$t.REPEAT,width:e,height:e})}function Hl(e,t,r){var i=new Float32Array(3*e);t=t||0;for(var n=0;n<e;n++){var a=zl(n+t,2)*(r?1:2)*Math.PI,o=zl(n+t,3)*Math.PI,s=Math.random(),l=Math.cos(a)*Math.sin(o)*s,u=Math.cos(o)*s,h=Math.sin(a)*Math.sin(o)*s;i[3*n]=l,i[3*n+1]=u,i[3*n+2]=h}return i}function Vl(e){e=e||{},this._ssaoPass=new bn({fragment:Ye.source("ecgl.ssao.estimate")}),this._blurPass=new bn({fragment:Ye.source("ecgl.ssao.blur")}),this._framebuffer=new vi({depthBuffer:!1}),this._ssaoTexture=new lr,this._blurTexture=new lr,this._blurTexture2=new lr,this._depthTex=e.depthTexture,this._normalTex=e.normalTexture,this.setNoiseSize(4),this.setKernelSize(e.kernelSize||12),null!=e.radius&&this.setParameter("radius",e.radius),null!=e.power&&this.setParameter("power",e.power),this._normalTex||(this._ssaoPass.material.disableTexture("normalTex"),this._blurPass.material.disableTexture("normalTex")),this._depthTex||this._blurPass.material.disableTexture("depthTex"),this._blurPass.material.setUniform("normalTex",this._normalTex),this._blurPass.material.setUniform("depthTex",this._depthTex)}Ye.import(Ul),Vl.prototype.setDepthTexture=function(e){this._depthTex=e},Vl.prototype.setNormalTexture=function(e){this._normalTex=e,this._ssaoPass.material[e?"enableTexture":"disableTexture"]("normalTex"),this.setKernelSize(this._kernelSize)},Vl.prototype.update=function(e,t,r){var i=e.getWidth(),n=e.getHeight(),a=this._ssaoPass,o=this._blurPass;a.setUniform("kernel",this._kernels[r%this._kernels.length]),a.setUniform("depthTex",this._depthTex),null!=this._normalTex&&a.setUniform("normalTex",this._normalTex),a.setUniform("depthTexSize",[this._depthTex.width,this._depthTex.height]);var s=new Dt;Dt.transpose(s,t.worldTransform),a.setUniform("projection",t.projectionMatrix.array),a.setUniform("projectionInv",t.invProjectionMatrix.array),a.setUniform("viewInverseTranspose",s.array);var l=this._ssaoTexture,u=this._blurTexture,h=this._blurTexture2;l.width=i/2,l.height=n/2,u.width=i,u.height=n,h.width=i,h.height=n,this._framebuffer.attach(l),this._framebuffer.bind(e),e.gl.clearColor(1,1,1,1),e.gl.clear(e.gl.COLOR_BUFFER_BIT),a.render(e),o.setUniform("textureSize",[i/2,n/2]),o.setUniform("projection",t.projectionMatrix.array),this._framebuffer.attach(u),o.setUniform("direction",0),o.setUniform("ssaoTexture",l),o.render(e),this._framebuffer.attach(h),o.setUniform("textureSize",[i,n]),o.setUniform("direction",1),o.setUniform("ssaoTexture",u),o.render(e),this._framebuffer.unbind(e);var c=e.clearColor;e.gl.clearColor(c[0],c[1],c[2],c[3])},Vl.prototype.getTargetTexture=function(){return this._blurTexture2},Vl.prototype.setParameter=function(e,t){"noiseTexSize"===e?this.setNoiseSize(t):"kernelSize"===e?this.setKernelSize(t):"intensity"===e?this._ssaoPass.material.set("intensity",t):this._ssaoPass.setUniform(e,t)},Vl.prototype.setKernelSize=function(e){this._kernelSize=e,this._ssaoPass.material.define("fragment","KERNEL_SIZE",e),this._kernels=this._kernels||[];for(var t=0;t<30;t++)this._kernels[t]=Hl(e,t*e,!!this._normalTex)},Vl.prototype.setNoiseSize=function(e){var t=this._ssaoPass.getUniform("noiseTex");t?(t.data=Gl(e),t.width=t.height=e,t.dirty()):(t=kl(e),this._ssaoPass.setUniform("noiseTex",kl(e))),this._ssaoPass.setUniform("noiseTexSize",[e,e])},Vl.prototype.dispose=function(e){this._blurTexture.dispose(e),this._ssaoTexture.dispose(e),this._blurTexture2.dispose(e)};var Wl=Vl,jl="@export ecgl.ssr.main\n\n#define SHADER_NAME SSR\n#define MAX_ITERATION 20;\n#define SAMPLE_PER_FRAME 5;\n#define TOTAL_SAMPLES 128;\n\nuniform sampler2D sourceTexture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform samplerCube specularCubemap;\nuniform float specularIntensity: 1;\n\nuniform mat4 projection;\nuniform mat4 projectionInv;\nuniform mat4 toViewSpace;\nuniform mat4 toWorldSpace;\n\nuniform float maxRayDistance: 200;\n\nuniform float pixelStride: 16;\nuniform float pixelStrideZCutoff: 50; \nuniform float screenEdgeFadeStart: 0.9; \nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 1;\n\nuniform float nearZ;\nuniform vec2 viewportSize : VIEWPORT_SIZE;\n\nuniform float jitterOffset: 0;\n\nvarying vec2 v_Texcoord;\n\n#ifdef DEPTH_DECODE\n@import clay.util.decode_float\n#endif\n\n#ifdef PHYSICALLY_CORRECT\nuniform sampler2D normalDistribution;\nuniform float sampleOffset: 0;\nuniform vec2 normalDistributionSize;\n\nvec3 transformNormal(vec3 H, vec3 N) {\n vec3 upVector = N.y > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nvec3 importanceSampleNormalGGX(float i, float roughness, vec3 N) {\n float p = fract((i + sampleOffset) / float(TOTAL_SAMPLES));\n vec3 H = texture2D(normalDistribution,vec2(roughness, p)).rgb;\n return transformNormal(H, N);\n}\nfloat G_Smith(float g, float ndv, float ndl) {\n float roughness = 1.0 - g;\n float k = roughness * roughness / 2.0;\n float G1V = ndv / (ndv * (1.0 - k) + k);\n float G1L = ndl / (ndl * (1.0 - k) + k);\n return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n#endif\n\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\n{\n vec4 depthTexel = texture2D(depthTexture, uv);\n return depthTexel.r * 2.0 - 1.0;\n}\n\nfloat linearDepth(float depth)\n{\n if (projection[3][3] == 0.0) {\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n }\n else {\n return (depth - projection[3][2]) / projection[2][2];\n }\n}\n\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\n{\n if (rayZFar > rayZNear)\n {\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\n }\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\n}\n\n\nbool traceScreenSpaceRay(\n vec3 rayOrigin, vec3 rayDir, float jitter,\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\n)\n{\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\n\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\n\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\n vec4 H1 = projection * vec4(rayEnd, 1.0);\n\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\n\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\n\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\n\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\n vec2 delta = P1 - P0;\n\n bool permute = false;\n if (abs(delta.x) < abs(delta.y)) {\n permute = true;\n delta = delta.yx;\n P0 = P0.yx;\n P1 = P1.yx;\n }\n float stepDir = sign(delta.x);\n float invdx = stepDir / delta.x;\n\n vec3 dQ = (Q1 - Q0) * invdx;\n float dk = (k1 - k0) * invdx;\n\n vec2 dP = vec2(stepDir, delta.y * invdx);\n\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\n float pixStride = 1.0 + strideScaler * pixelStride;\n\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\n\n vec4 pqk = vec4(P0, Q0.z, k0);\n vec4 dPQK = vec4(dP, dQ.z, dk);\n\n pqk += dPQK * jitter;\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n float rayZNear;\n\n bool intersect = false;\n\n vec2 texelSize = 1.0 / viewportSize;\n\n iterationCount = 0.0;\n\n for (int i = 0; i < MAX_ITERATION; i++)\n {\n pqk += dPQK;\n\n rayZNear = rayZFar;\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n\n hitPixel = permute ? pqk.yx : pqk.xy;\n hitPixel *= texelSize;\n\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\n\n iterationCount += 1.0;\n\n dPQK *= 1.2;\n\n if (intersect) {\n break;\n }\n }\n\n Q0.xy += dQ.xy * iterationCount;\n Q0.z = pqk.z;\n hitPoint = Q0 / pqk.w;\n\n return intersect;\n}\n\nfloat calculateAlpha(\n float iterationCount, float reflectivity,\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\n)\n{\n float alpha = clamp(reflectivity, 0.0, 1.0);\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\n\n float _eyeFadeStart = eyeFadeStart;\n float _eyeFadeEnd = eyeFadeEnd;\n if (_eyeFadeStart > _eyeFadeEnd) {\n float tmp = _eyeFadeEnd;\n _eyeFadeEnd = _eyeFadeStart;\n _eyeFadeStart = tmp;\n }\n\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\n\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\n\n return alpha;\n}\n\n@import clay.util.rand\n\n@import clay.util.rgbm\n\nvoid main()\n{\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\n\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n\n float g = normalAndGloss.a;\n#if !defined(PHYSICALLY_CORRECT)\n if (g <= minGlossiness) {\n discard;\n }\n#endif\n\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\n\n vec3 N = normalize(normalAndGloss.rgb * 2.0 - 1.0);\n N = normalize((toViewSpace * vec4(N, 0.0)).xyz);\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\n vec4 pos = projectionInv * projectedPos;\n vec3 rayOrigin = pos.xyz / pos.w;\n vec3 V = -normalize(rayOrigin);\n\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n float iterationCount;\n float jitter = rand(fract(v_Texcoord + jitterOffset));\n\n#ifdef PHYSICALLY_CORRECT\n vec4 color = vec4(vec3(0.0), 1.0);\n vec4 albedoMetalness = texture2D(gBufferTexture3, v_Texcoord);\n vec3 albedo = albedoMetalness.rgb;\n float m = albedoMetalness.a;\n vec3 diffuseColor = albedo * (1.0 - m);\n vec3 spec = mix(vec3(0.04), albedo, m);\n\n float jitter2 = rand(fract(v_Texcoord)) * float(TOTAL_SAMPLES);\n\n for (int i = 0; i < SAMPLE_PER_FRAME; i++) {\n vec3 H = importanceSampleNormalGGX(float(i) + jitter2, 1.0 - g, N);\n vec3 rayDir = normalize(reflect(-V, H));\n#else\n vec3 rayDir = normalize(reflect(-V, N));\n#endif\n vec2 hitPixel;\n vec3 hitPoint;\n\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\n\n float dist = distance(rayOrigin, hitPoint);\n\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\n hitNormal = normalize((toViewSpace * vec4(hitNormal, 0.0)).xyz);\n#ifdef PHYSICALLY_CORRECT\n float ndl = clamp(dot(N, rayDir), 0.0, 1.0);\n float vdh = clamp(dot(V, H), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n vec3 litTexel = vec3(0.0);\n if (dot(hitNormal, rayDir) < 0.0 && intersect) {\n litTexel = texture2D(sourceTexture, hitPixel).rgb;\n litTexel *= pow(clamp(1.0 - dist / 200.0, 0.0, 1.0), 3.0);\n\n }\n else {\n #ifdef SPECULARCUBEMAP_ENABLED\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\n litTexel = RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, 0.0), 8.12).rgb * specularIntensity;\n#endif\n }\n color.rgb += ndl * litTexel * (\n F_Schlick(ndl, spec) * G_Smith(g, ndv, ndl) * vdh / (ndh * ndv + 0.001)\n );\n }\n color.rgb /= float(SAMPLE_PER_FRAME);\n#else\n #if !defined(SPECULARCUBEMAP_ENABLED)\n if (dot(hitNormal, rayDir) >= 0.0) {\n discard;\n }\n if (!intersect) {\n discard;\n }\n#endif\n float alpha = clamp(calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir), 0.0, 1.0);\n vec4 color = texture2D(sourceTexture, hitPixel);\n color.rgb *= alpha;\n\n#ifdef SPECULARCUBEMAP_ENABLED\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\n alpha = alpha * (intersect ? 1.0 : 0.0);\n float bias = (1.0 -g) * 5.0;\n color.rgb += (1.0 - alpha)\n * RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, bias), 8.12).rgb\n * specularIntensity;\n#endif\n\n#endif\n\n gl_FragColor = encodeHDR(color);\n}\n@end\n\n@export ecgl.ssr.blur\n\nuniform sampler2D texture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform mat4 projection;\nuniform float depthRange : 0.05;\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\n#ifdef BLEND\n #ifdef SSAOTEX_ENABLED\nuniform sampler2D ssaoTex;\n #endif\nuniform sampler2D sourceTexture;\n#endif\n\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(gBufferTexture2, coord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n\n@import clay.util.rgbm\n\n\nvoid main()\n{\n @import clay.compositor.kernel.gaussian_9\n\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\n float g = centerNTexel.a;\n float maxBlurSize = clamp(1.0 - g, 0.0, 1.0) * blurSize;\n#ifdef VERTICAL\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\n#else\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\n#endif\n\n vec2 coord = v_Texcoord;\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\n float cD = getLinearDepth(v_Texcoord);\n for (int i = 0; i < 9; i++) {\n vec2 coord = clamp((float(i) - 4.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\n float w = gaussianKernel[i]\n * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\n float d = getLinearDepth(coord);\n w *= (1.0 - smoothstep(abs(cD - d) / depthRange, 0.0, 1.0));\n\n weightAll += w;\n sum += decodeHDR(texture2D(texture, coord)) * w;\n }\n\n#ifdef BLEND\n float aoFactor = 1.0;\n #ifdef SSAOTEX_ENABLED\n aoFactor = texture2D(ssaoTex, v_Texcoord).r;\n #endif\n gl_FragColor = encodeHDR(\n sum / weightAll * aoFactor + decodeHDR(texture2D(sourceTexture, v_Texcoord))\n );\n#else\n gl_FragColor = encodeHDR(sum / weightAll);\n#endif\n}\n\n@end";function Xl(e){e=e||{},this._ssrPass=new bn({fragment:Ye.source("ecgl.ssr.main"),clearColor:[0,0,0,0]}),this._blurPass1=new bn({fragment:Ye.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blurPass2=new bn({fragment:Ye.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blendPass=new bn({fragment:Ye.source("clay.compositor.blend")}),this._blendPass.material.disableTexturesAll(),this._blendPass.material.enableTexture(["texture1","texture2"]),this._ssrPass.setUniform("gBufferTexture1",e.normalTexture),this._ssrPass.setUniform("gBufferTexture2",e.depthTexture),this._blurPass1.setUniform("gBufferTexture1",e.normalTexture),this._blurPass1.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.material.define("fragment","VERTICAL"),this._blurPass2.material.define("fragment","BLEND"),this._ssrTexture=new lr({type:$t.HALF_FLOAT}),this._texture2=new lr({type:$t.HALF_FLOAT}),this._texture3=new lr({type:$t.HALF_FLOAT}),this._prevTexture=new lr({type:$t.HALF_FLOAT}),this._currentTexture=new lr({type:$t.HALF_FLOAT}),this._frameBuffer=new vi({depthBuffer:!1}),this._normalDistribution=null,this._totalSamples=256,this._samplePerFrame=4,this._ssrPass.material.define("fragment","SAMPLE_PER_FRAME",this._samplePerFrame),this._ssrPass.material.define("fragment","TOTAL_SAMPLES",this._totalSamples),this._downScale=1}Ye.import(jl),Xl.prototype.setAmbientCubemap=function(e,t){this._ssrPass.material.set("specularCubemap",e),this._ssrPass.material.set("specularIntensity",t);var r=e&&t;this._ssrPass.material[r?"enableTexture":"disableTexture"]("specularCubemap")},Xl.prototype.update=function(e,t,r,i){var n=e.getWidth(),a=e.getHeight(),o=this._ssrTexture,s=this._texture2,l=this._texture3;o.width=this._prevTexture.width=this._currentTexture.width=n/this._downScale,o.height=this._prevTexture.height=this._currentTexture.height=a/this._downScale,s.width=l.width=n,s.height=l.height=a;var u=this._frameBuffer,h=this._ssrPass,c=this._blurPass1,d=this._blurPass2,f=this._blendPass,p=new Dt,m=new Dt;Dt.transpose(p,t.worldTransform),Dt.transpose(m,t.viewMatrix),h.setUniform("sourceTexture",r),h.setUniform("projection",t.projectionMatrix.array),h.setUniform("projectionInv",t.invProjectionMatrix.array),h.setUniform("toViewSpace",p.array),h.setUniform("toWorldSpace",m.array),h.setUniform("nearZ",t.near);var g=i/this._totalSamples*this._samplePerFrame;if(h.setUniform("jitterOffset",g),h.setUniform("sampleOffset",i*this._samplePerFrame),c.setUniform("textureSize",[o.width,o.height]),d.setUniform("textureSize",[n,a]),d.setUniform("sourceTexture",r),c.setUniform("projection",t.projectionMatrix.array),d.setUniform("projection",t.projectionMatrix.array),u.attach(o),u.bind(e),h.render(e),this._physicallyCorrect&&(u.attach(this._currentTexture),f.setUniform("texture1",this._prevTexture),f.setUniform("texture2",o),f.material.set({weight1:i>=1?.95:0,weight2:i>=1?.05:1}),f.render(e)),u.attach(s),c.setUniform("texture",this._physicallyCorrect?this._currentTexture:o),c.render(e),u.attach(l),d.setUniform("texture",s),d.render(e),u.unbind(e),this._physicallyCorrect){var _=this._prevTexture;this._prevTexture=this._currentTexture,this._currentTexture=_}},Xl.prototype.getTargetTexture=function(){return this._texture3},Xl.prototype.setParameter=function(e,t){"maxIteration"===e?this._ssrPass.material.define("fragment","MAX_ITERATION",t):this._ssrPass.setUniform(e,t)},Xl.prototype.setPhysicallyCorrect=function(e){e?(this._normalDistribution||(this._normalDistribution=An.generateNormalDistribution(64,this._totalSamples)),this._ssrPass.material.define("fragment","PHYSICALLY_CORRECT"),this._ssrPass.material.set("normalDistribution",this._normalDistribution),this._ssrPass.material.set("normalDistributionSize",[64,this._totalSamples])):this._ssrPass.material.undefine("fragment","PHYSICALLY_CORRECT"),this._physicallyCorrect=e},Xl.prototype.setSSAOTexture=function(e){var t=this._blurPass2;e?(t.material.enableTexture("ssaoTex"),t.material.set("ssaoTex",e)):t.material.disableTexture("ssaoTex")},Xl.prototype.isFinished=function(e){return!this._physicallyCorrect||e>this._totalSamples/this._samplePerFrame},Xl.prototype.dispose=function(e){this._ssrTexture.dispose(e),this._texture2.dispose(e),this._texture3.dispose(e),this._prevTexture.dispose(e),this._currentTexture.dispose(e),this._frameBuffer.dispose(e)};var ql=Xl,Yl=[0,0,-.321585265978,-.154972575841,.458126042375,.188473391593,.842080129861,.527766490688,.147304551086,-.659453822776,-.331943915203,-.940619700594,.0479226680259,.54812163202,.701581552186,-.709825561388,-.295436780218,.940589268233,-.901489676764,.237713156085,.973570876096,-.109899459384,-.866792314779,-.451805525005,.330975007087,.800048655954,-.344275183665,.381779221166,-.386139432542,-.437418421534,-.576478634965,-.0148463392551,.385798197415,-.262426961053,-.666302061145,.682427250835,-.628010632582,-.732836215494,.10163141741,-.987658134403,.711995289051,-.320024291314,.0296005138058,.950296523438,.0130612307608,-.351024443122,-.879596633704,-.10478487883,.435712737232,.504254490347,.779203817497,.206477676721,.388264289969,-.896736162545,-.153106280781,-.629203242522,-.245517550697,.657969239148,.126830499058,.26862328493,-.634888119007,-.302301223431,.617074219636,.779817204925],Zl="@export ecgl.normal.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n@import ecgl.common.attributes\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n@import ecgl.common.normalMap.vertexHeader\n\n@import ecgl.common.vertexAnimation.header\n\nvoid main()\n{\n\n @import ecgl.common.vertexAnimation.main\n\n @import ecgl.common.uv.main\n\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\n\n @import ecgl.common.normalMap.vertexMain\n\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n\n}\n\n\n@end\n\n\n@export ecgl.normal.fragment\n\n#define ROUGHNESS_CHANEL 0\n\nuniform bool useBumpMap;\nuniform bool useRoughnessMap;\nuniform bool doubleSide;\nuniform float roughness;\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\n@import ecgl.common.normalMap.fragmentHeader\n@import ecgl.common.bumpMap.header\n\nuniform sampler2D roughnessMap;\n\nvoid main()\n{\n vec3 N = v_Normal;\n \n bool flipNormal = false;\n if (doubleSide) {\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n\n if (dot(N, V) < 0.0) {\n flipNormal = true;\n }\n }\n\n @import ecgl.common.normalMap.fragmentMain\n\n if (useBumpMap) {\n N = bumpNormal(v_WorldPosition, v_Normal, N);\n }\n\n float g = 1.0 - roughness;\n\n if (useRoughnessMap) {\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n }\n\n if (flipNormal) {\n N = -N;\n }\n\n gl_FragColor.rgb = (N.xyz + 1.0) * 0.5;\n gl_FragColor.a = g;\n}\n@end";function Kl(e,t,r,i,n){var a=e.gl;t.setUniform(a,"1i",r,n),a.activeTexture(a.TEXTURE0+n),i.isRenderable()?i.bind(e):i.unbind(e)}function Ql(e,t,r,i,n){var a,o,s,l,u=e.gl;return function(n,h,c){if(!l||l.material!==n.material){var d=n.material,f=n.__program,p=d.get("roughness");null==p&&(p=1);var m=d.get("normalMap")||t,g=d.get("roughnessMap"),_=d.get("bumpMap"),v=d.get("uvRepeat"),y=d.get("uvOffset"),x=d.get("detailUvRepeat"),T=d.get("detailUvOffset"),b=!!_&&d.isTextureEnabled("bumpMap"),w=!!g&&d.isTextureEnabled("roughnessMap"),E=d.isDefined("fragment","DOUBLE_SIDED");_=_||r,g=g||i,c!==h?(h.set("normalMap",m),h.set("bumpMap",_),h.set("roughnessMap",g),h.set("useBumpMap",b),h.set("useRoughnessMap",w),h.set("doubleSide",E),null!=v&&h.set("uvRepeat",v),null!=y&&h.set("uvOffset",y),null!=x&&h.set("detailUvRepeat",x),null!=T&&h.set("detailUvOffset",T),h.set("roughness",p)):(f.setUniform(u,"1f","roughness",p),a!==m&&Kl(e,f,"normalMap",m,0),o!==_&&_&&Kl(e,f,"bumpMap",_,1),s!==g&&g&&Kl(e,f,"roughnessMap",g,2),null!=v&&f.setUniform(u,"2f","uvRepeat",v),null!=y&&f.setUniform(u,"2f","uvOffset",y),null!=x&&f.setUniform(u,"2f","detailUvRepeat",x),null!=T&&f.setUniform(u,"2f","detailUvOffset",T),f.setUniform(u,"1i","useBumpMap",+b),f.setUniform(u,"1i","useRoughnessMap",+w),f.setUniform(u,"1i","doubleSide",+E)),a=m,o=_,s=g,l=n}}}function Jl(e){e=e||{},this._depthTex=new lr({format:$t.DEPTH_COMPONENT,type:$t.UNSIGNED_INT}),this._normalTex=new lr({type:$t.HALF_FLOAT}),this._framebuffer=new vi,this._framebuffer.attach(this._normalTex),this._framebuffer.attach(this._depthTex,vi.DEPTH_ATTACHMENT),this._normalMaterial=new ne({shader:new Ye(Ye.source("ecgl.normal.vertex"),Ye.source("ecgl.normal.fragment"))}),this._normalMaterial.enableTexture(["normalMap","bumpMap","roughnessMap"]),this._defaultNormalMap=hn.createBlank("#000"),this._defaultBumpMap=hn.createBlank("#000"),this._defaultRoughessMap=hn.createBlank("#000"),this._debugPass=new bn({fragment:Ye.source("clay.compositor.output")}),this._debugPass.setUniform("texture",this._normalTex),this._debugPass.material.undefine("fragment","OUTPUT_ALPHA")}Ye.import(Zl),Jl.prototype.getDepthTexture=function(){return this._depthTex},Jl.prototype.getNormalTexture=function(){return this._normalTex},Jl.prototype.update=function(e,t,r){var i=e.getWidth(),n=e.getHeight(),a=this._depthTex,o=this._normalTex,s=this._normalMaterial;a.width=i,a.height=n,o.width=i,o.height=n;var l=t.getRenderList(r).opaque;this._framebuffer.bind(e),e.gl.clearColor(0,0,0,0),e.gl.clear(e.gl.COLOR_BUFFER_BIT|e.gl.DEPTH_BUFFER_BIT),e.gl.disable(e.gl.BLEND),e.renderPass(l,r,{getMaterial:function(){return s},ifRender:function(e){return e.renderNormal},beforeRender:Ql(e,this._defaultNormalMap,this._defaultBumpMap,this._defaultRoughessMap,this._normalMaterial),sort:e.opaqueSortCompare}),this._framebuffer.unbind(e)},Jl.prototype.renderDebug=function(e){this._debugPass.render(e)},Jl.prototype.dispose=function(e){this._depthTex.dispose(e),this._normalTex.dispose(e)};var $l=Jl;function eu(e){e=e||{},this._edgePass=new bn({fragment:Ye.source("ecgl.edge")}),this._edgePass.setUniform("normalTexture",e.normalTexture),this._edgePass.setUniform("depthTexture",e.depthTexture),this._targetTexture=new lr({type:$t.HALF_FLOAT}),this._frameBuffer=new vi,this._frameBuffer.attach(this._targetTexture)}eu.prototype.update=function(e,t,r,i){var n=e.getWidth(),a=e.getHeight(),o=this._targetTexture;o.width=n,o.height=a;var s=this._frameBuffer;s.bind(e),this._edgePass.setUniform("projectionInv",t.invProjectionMatrix.array),this._edgePass.setUniform("textureSize",[n,a]),this._edgePass.setUniform("texture",r),this._edgePass.render(e),s.unbind(e)},eu.prototype.getTargetTexture=function(){return this._targetTexture},eu.prototype.setParameter=function(e,t){this._edgePass.setUniform(e,t)},eu.prototype.dispose=function(e){this._targetTexture.dispose(e),this._frameBuffer.dispose(e)};var tu=eu,ru={type:"compositor",nodes:[{name:"source",type:"texture",outputs:{color:{}}},{name:"source_half",shader:"#source(clay.compositor.downsample)",inputs:{texture:"source"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bright",shader:"#source(clay.compositor.bright)",inputs:{texture:"source_half"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{threshold:2,scale:4,textureSize:"expr([width * 1.0 / 2, height / 2])"}},{name:"bright_downsample_4",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 2, height / 2] )"}},{name:"bright_downsample_8",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 4, height / 4] )"}},{name:"bright_downsample_16",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 8, height / 8] )"}},{name:"bright_downsample_32",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 32)",height:"expr(height * 1.0 / 32)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 16, height / 16] )"}},{name:"bright_upsample_16_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_32"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 32, height / 32] )"}},{name:"bright_upsample_16_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_16_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_8_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_8_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_8_blur_v",texture2:"bright_upsample_16_blur_v"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_4_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_4_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_4_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_4_blur_v",texture2:"bright_upsample_8_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_2_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_2_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_2_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_2_blur_v",texture2:"bright_upsample_4_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_full_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_full_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_full_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bloom_composite",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_full_blur_v",texture2:"bright_upsample_2_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"coc",shader:"#source(ecgl.dof.coc)",outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{focalDist:50,focalRange:30}},{name:"dof_far_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"dof_near_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_NEARFIELD:null}},{name:"dof_coc_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"coc"},outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_COC:null}},{name:"dof_composite",shader:"#source(ecgl.dof.composite)",inputs:{original:"source",blurred:"dof_far_blur",nearfield:"dof_near_blur",coc:"coc",nearcoc:"dof_coc_blur"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}}},{name:"composite",shader:"#source(clay.compositor.hdr.composite)",inputs:{texture:"source",bloom:"bloom_composite"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},defines:{}},{name:"FXAA",shader:"#source(clay.compositor.fxaa)",inputs:{texture:"composite"}}]},iu="@export ecgl.dof.coc\n\nuniform sampler2D depth;\n\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\n\nuniform float focalDistance: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\n\nvarying vec2 v_Texcoord;\n\n@import clay.util.encode_float\n\nvoid main()\n{\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n\n float aperture = focalLength / fstop;\n\n float coc;\n\n float uppper = focalDistance + focalRange;\n float lower = focalDistance - focalRange;\n if (dist <= uppper && dist >= lower) {\n coc = 0.5;\n }\n else {\n float focalAdjusted = dist > uppper ? uppper : lower;\n\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\n\n if (dist < lower) {\n coc = -coc;\n }\n coc = coc * 0.5 + 0.5;\n }\n\n gl_FragColor = encodeFloat(coc);\n}\n@end\n\n\n@export ecgl.dof.composite\n\n#define DEBUG 0\n\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n\n@import clay.util.rgbm\n@import clay.util.float\n\nvoid main()\n{\n vec4 blurredColor = texture2D(blurred, v_Texcoord);\n vec4 originalColor = texture2D(original, v_Texcoord);\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n\n fCoc = abs(fCoc * 2.0 - 1.0);\n\n float weight = smoothstep(0.0, 1.0, fCoc);\n \n#ifdef NEARFIELD_ENABLED\n vec4 nearfieldColor = texture2D(nearfield, v_Texcoord);\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n\n gl_FragColor = encodeHDR(\n mix(\n nearfieldColor, mix(originalColor, blurredColor, weight),\n pow(1.0 - fNearCoc, 4.0)\n )\n );\n#else\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n\n}\n\n@end\n\n\n\n@export ecgl.dof.diskBlur\n\n#define POISSON_KERNEL_SIZE 16;\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurRadius : 10.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\n\nuniform float percent;\n\nfloat nrand(const in vec2 n) {\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n@import clay.util.rgbm\n@import clay.util.float\n\n\nvoid main()\n{\n vec2 offset = blurRadius / textureSize;\n\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\n float cosa = cos(rnd);\n float sina = sin(rnd);\n vec4 basis = vec4(cosa, -sina, sina, cosa);\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n#ifdef BLUR_COC\n float cocSum = 0.0;\n#else\n vec4 color = vec4(0.0);\n#endif\n\n\n float weightSum = 0.0;\n\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\n vec2 ofs = poissonKernel[i];\n\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\n\n vec2 uv = v_Texcoord + ofs * offset;\n vec4 texel = texture2D(texture, uv);\n\n float w = 1.0;\n#ifdef BLUR_COC\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n texel = texel;\n #if !defined(BLUR_NEARFIELD)\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\n w *= abs(fCoc);\n #endif\n texel.rgb *= texel.a;\n color += texel * w;\n#endif\n\n weightSum += w;\n }\n\n#ifdef BLUR_COC\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n color /= weightSum;\n color.rgb /= (color.a + 0.0001);\n gl_FragColor = color;\n#endif\n}\n\n@end",nu="@export ecgl.edge\n\nuniform sampler2D texture;\n\nuniform sampler2D normalTexture;\nuniform sampler2D depthTexture;\n\nuniform mat4 projectionInv;\n\nuniform vec2 textureSize;\n\nuniform vec4 edgeColor: [0,0,0,0.8];\n\nvarying vec2 v_Texcoord;\n\nvec3 packColor(vec2 coord) {\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * p;\n\n return vec3(\n texture2D(normalTexture, coord).rg,\n -p4.z / p4.w / 5.0\n );\n}\n\nvoid main() {\n vec2 cc = v_Texcoord;\n vec3 center = packColor(cc);\n\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\n float dx = size / textureSize.x;\n float dy = size / textureSize.y;\n\n vec2 coord;\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\n vec3 top = packColor(cc+vec2(0.0, -dy));\n vec3 topRight = packColor(cc+vec2(dx, -dy));\n vec3 left = packColor(cc+vec2(-dx, 0.0));\n vec3 right = packColor(cc+vec2(dx, 0.0));\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\n vec3 bottom = packColor(cc+vec2(0.0, dy));\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\n\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\n\n float edge = sqrt(dot(h, h) + dot(v, v));\n\n edge = smoothstep(0.8, 1.0, edge);\n\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\n}\n@end";function au(e,t){return{color:{parameters:{width:e,height:t}}}}Ye["import"](dl),Ye["import"](pl),Ye["import"](gl),Ye["import"](_l),Ye["import"](vl),Ye["import"](yl),Ye["import"](xl),Ye["import"](bl),Ye["import"](wl),Ye["import"](iu),Ye["import"](nu);var ou=["composite","FXAA"];function su(){this._width,this._height,this._dpr,this._sourceTexture=new lr({type:$t.HALF_FLOAT}),this._depthTexture=new lr({format:$t.DEPTH_COMPONENT,type:$t.UNSIGNED_INT}),this._framebuffer=new vi,this._framebuffer.attach(this._sourceTexture),this._framebuffer.attach(this._depthTexture,vi.DEPTH_ATTACHMENT),this._normalPass=new $l,this._compositor=Fl(ru);var e=this._compositor.getNodeByName("source");e.texture=this._sourceTexture;var t=this._compositor.getNodeByName("coc");this._sourceNode=e,this._cocNode=t,this._compositeNode=this._compositor.getNodeByName("composite"),this._fxaaNode=this._compositor.getNodeByName("FXAA"),this._dofBlurNodes=["dof_far_blur","dof_near_blur","dof_coc_blur"].map((function(e){return this._compositor.getNodeByName(e)}),this),this._dofBlurKernel=0,this._dofBlurKernelSize=new Float32Array(0),this._finalNodesChain=ou.map((function(e){return this._compositor.getNodeByName(e)}),this);var r={normalTexture:this._normalPass.getNormalTexture(),depthTexture:this._normalPass.getDepthTexture()};this._ssaoPass=new Wl(r),this._ssrPass=new ql(r),this._edgePass=new tu(r)}su.prototype.resize=function(e,t,r){r=r||1;e*=r,t*=r;var i=this._sourceTexture,n=this._depthTexture;i.width=e,i.height=t,n.width=e,n.height=t;var a={getWidth:function(){return e},getHeight:function(){return t},getDevicePixelRatio:function(){return r}};function o(e,t){if("function"===typeof e[t]){var r=e[t].__original||e[t];e[t]=function(e){return r.call(this,a)},e[t].__original=r}}this._compositor.nodes.forEach((function(e){for(var t in e.outputs){var r=e.outputs[t].parameters;r&&(o(r,"width"),o(r,"height"))}for(var i in e.parameters)o(e.parameters,i)})),this._width=e,this._height=t,this._dpr=r},su.prototype.getWidth=function(){return this._width},su.prototype.getHeight=function(){return this._height},su.prototype._ifRenderNormalPass=function(){return this._enableSSAO||this._enableEdge||this._enableSSR},su.prototype._getPrevNode=function(e){var t=ou.indexOf(e.name)-1,r=this._finalNodesChain[t];while(r&&!this._compositor.getNodeByName(r.name))t-=1,r=this._finalNodesChain[t];return r},su.prototype._getNextNode=function(e){var t=ou.indexOf(e.name)+1,r=this._finalNodesChain[t];while(r&&!this._compositor.getNodeByName(r.name))t+=1,r=this._finalNodesChain[t];return r},su.prototype._addChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(e.inputs.texture=t.name,r?(e.outputs=au(this.getWidth.bind(this),this.getHeight.bind(this)),r.inputs.texture=e.name):e.outputs=null,this._compositor.addNode(e))},su.prototype._removeChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(r?(t.outputs=au(this.getWidth.bind(this),this.getHeight.bind(this)),r.inputs.texture=t.name):t.outputs=null,this._compositor.removeNode(e))},su.prototype.updateNormal=function(e,t,r,i){this._ifRenderNormalPass()&&this._normalPass.update(e,t,r)},su.prototype.updateSSAO=function(e,t,r,i){this._ssaoPass.update(e,r,i)},su.prototype.enableSSAO=function(){this._enableSSAO=!0},su.prototype.disableSSAO=function(){this._enableSSAO=!1},su.prototype.enableSSR=function(){this._enableSSR=!0},su.prototype.disableSSR=function(){this._enableSSR=!1},su.prototype.getSSAOTexture=function(){return this._ssaoPass.getTargetTexture()},su.prototype.getSourceFrameBuffer=function(){return this._framebuffer},su.prototype.getSourceTexture=function(){return this._sourceTexture},su.prototype.disableFXAA=function(){this._removeChainNode(this._fxaaNode)},su.prototype.enableFXAA=function(){this._addChainNode(this._fxaaNode)},su.prototype.enableBloom=function(){this._compositeNode.inputs.bloom="bloom_composite",this._compositor.dirty()},su.prototype.disableBloom=function(){this._compositeNode.inputs.bloom=null,this._compositor.dirty()},su.prototype.enableDOF=function(){this._compositeNode.inputs.texture="dof_composite",this._compositor.dirty()},su.prototype.disableDOF=function(){this._compositeNode.inputs.texture="source",this._compositor.dirty()},su.prototype.enableColorCorrection=function(){this._compositeNode.define("COLOR_CORRECTION"),this._enableColorCorrection=!0},su.prototype.disableColorCorrection=function(){this._compositeNode.undefine("COLOR_CORRECTION"),this._enableColorCorrection=!1},su.prototype.enableEdge=function(){this._enableEdge=!0},su.prototype.disableEdge=function(){this._enableEdge=!1},su.prototype.setBloomIntensity=function(e){this._compositeNode.setParameter("bloomIntensity",e)},su.prototype.setSSAOParameter=function(e,t){switch(e){case"quality":var r={low:6,medium:12,high:32,ultra:62}[t]||12;this._ssaoPass.setParameter("kernelSize",r);break;case"radius":this._ssaoPass.setParameter(e,t),this._ssaoPass.setParameter("bias",t/200);break;case"intensity":this._ssaoPass.setParameter(e,t);break;default:0}},su.prototype.setDOFParameter=function(e,t){switch(e){case"focalDistance":case"focalRange":case"fstop":this._cocNode.setParameter(e,t);break;case"blurRadius":for(var r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].setParameter("blurRadius",t);break;case"quality":var i={low:4,medium:8,high:16,ultra:32}[t]||8;this._dofBlurKernelSize=i;for(r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].pass.material.define("POISSON_KERNEL_SIZE",i);this._dofBlurKernel=new Float32Array(2*i);break;default:0}},su.prototype.setSSRParameter=function(e,t){if(null!=t)switch(e){case"quality":var r={low:10,medium:15,high:30,ultra:80}[t]||20,i={low:32,medium:16,high:8,ultra:4}[t]||16;this._ssrPass.setParameter("maxIteration",r),this._ssrPass.setParameter("pixelStride",i);break;case"maxRoughness":this._ssrPass.setParameter("minGlossiness",Math.max(Math.min(1-t,1),0));break;case"physical":this.setPhysicallyCorrectSSR(t);break;default:console.warn("Unkown SSR parameter "+e)}},su.prototype.setPhysicallyCorrectSSR=function(e){this._ssrPass.setPhysicallyCorrect(e)},su.prototype.setEdgeColor=function(e){var t=Ao.parseColor(e);this._edgePass.setParameter("edgeColor",t)},su.prototype.setExposure=function(e){this._compositeNode.setParameter("exposure",Math.pow(2,e))},su.prototype.setColorLookupTexture=function(e,t){this._compositeNode.pass.material.setTextureImage("lut",this._enableColorCorrection?e:"none",t,{minFilter:Ao.Texture.NEAREST,magFilter:Ao.Texture.NEAREST,flipY:!1})},su.prototype.setColorCorrection=function(e,t){this._compositeNode.setParameter(e,t)},su.prototype.isSSREnabled=function(){return this._enableSSR},su.prototype.composite=function(e,t,r,i,n){var a=this._sourceTexture,o=a;this._enableEdge&&(this._edgePass.update(e,r,a,n),a=o=this._edgePass.getTargetTexture()),this._enableSSR&&(this._ssrPass.update(e,r,a,n),o=this._ssrPass.getTargetTexture(),this._ssrPass.setSSAOTexture(this._enableSSAO?this._ssaoPass.getTargetTexture():null)),this._sourceNode.texture=o,this._cocNode.setParameter("depth",this._depthTexture);for(var s=this._dofBlurKernel,l=this._dofBlurKernelSize,u=Math.floor(Yl.length/2/l),h=n%u,c=0;c<2*l;c++)s[c]=Yl[c+h*l*2];for(c=0;c<this._dofBlurNodes.length;c++)this._dofBlurNodes[c].setParameter("percent",n/30),this._dofBlurNodes[c].setParameter("poissonKernel",s);this._cocNode.setParameter("zNear",r.near),this._cocNode.setParameter("zFar",r.far),this._compositor.render(e,i)},su.prototype.dispose=function(e){this._sourceTexture.dispose(e),this._depthTexture.dispose(e),this._framebuffer.dispose(e),this._compositor.dispose(e),this._normalPass.dispose(e),this._ssaoPass.dispose(e)};var lu=su;function uu(e){for(var t=[],r=0;r<30;r++)t.push([zl(r,2),zl(r,3)]);this._haltonSequence=t,this._frame=0,this._sourceTex=new lr,this._sourceFb=new vi,this._sourceFb.attach(this._sourceTex),this._prevFrameTex=new lr,this._outputTex=new lr;var i=this._blendPass=new bn({fragment:Ye.source("clay.compositor.blend")});i.material.disableTexturesAll(),i.material.enableTexture(["texture1","texture2"]),this._blendFb=new vi({depthBuffer:!1}),this._outputPass=new bn({fragment:Ye.source("clay.compositor.output"),blendWithPrevious:!0}),this._outputPass.material.define("fragment","OUTPUT_ALPHA"),this._outputPass.material.blend=function(e){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}}uu.prototype={constructor:uu,jitterProjection:function(e,t){var r=e.viewport,i=r.devicePixelRatio||e.getDevicePixelRatio(),n=r.width*i,a=r.height*i,o=this._haltonSequence[this._frame%this._haltonSequence.length],s=new Dt;s.array[12]=(2*o[0]-1)/n,s.array[13]=(2*o[1]-1)/a,Dt.mul(t.projectionMatrix,s,t.projectionMatrix),Dt.invert(t.invProjectionMatrix,t.projectionMatrix)},resetFrame:function(){this._frame=0},getFrame:function(){return this._frame},getSourceFrameBuffer:function(){return this._sourceFb},getOutputTexture:function(){return this._outputTex},resize:function(e,t){this._prevFrameTex.width=e,this._prevFrameTex.height=t,this._outputTex.width=e,this._outputTex.height=t,this._sourceTex.width=e,this._sourceTex.height=t,this._prevFrameTex.dirty(),this._outputTex.dirty(),this._sourceTex.dirty()},isFinished:function(){return this._frame>=this._haltonSequence.length},render:function(e,t,r){var i=this._blendPass;0===this._frame?(i.setUniform("weight1",0),i.setUniform("weight2",1)):(i.setUniform("weight1",.9),i.setUniform("weight2",.1)),i.setUniform("texture1",this._prevFrameTex),i.setUniform("texture2",t||this._sourceTex),this._blendFb.attach(this._outputTex),this._blendFb.bind(e),i.render(e),this._blendFb.unbind(e),r||(this._outputPass.setUniform("texture",this._outputTex),this._outputPass.render(e));var n=this._prevFrameTex;this._prevFrameTex=this._outputTex,this._outputTex=n,this._frame++},dispose:function(e){this._sourceFb.dispose(e),this._blendFb.dispose(e),this._prevFrameTex.dispose(e),this._outputTex.dispose(e),this._sourceTex.dispose(e),this._outputPass.dispose(e),this._blendPass.dispose(e)}};var hu=uu;function cu(e){e=e||"perspective",this.layer=null,this.scene=new Zr,this.rootNode=this.scene,this.viewport={x:0,y:0,width:0,height:0},this.setProjection(e),this._compositor=new lu,this._temporalSS=new hu,this._shadowMapPass=new Js;for(var t=[],r=0,i=0;i<30;i++){for(var n=[],a=0;a<6;a++)n.push(4*zl(r,2)-2),n.push(4*zl(r,3)-2),r++;t.push(n)}this._pcfKernels=t,this.scene.on("beforerender",(function(e,t,r){this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,r)}),this)}cu.prototype.setProjection=function(e){var t=this.camera;t&&t.update(),"perspective"===e?this.camera instanceof oi||(this.camera=new oi,t&&this.camera.setLocalTransform(t.localTransform)):this.camera instanceof gn||(this.camera=new gn,t&&this.camera.setLocalTransform(t.localTransform)),this.camera.near=.1,this.camera.far=2e3},cu.prototype.setViewport=function(e,t,r,i,n){this.camera instanceof oi&&(this.camera.aspect=r/i),n=n||1,this.viewport.x=e,this.viewport.y=t,this.viewport.width=r,this.viewport.height=i,this.viewport.devicePixelRatio=n,this._compositor.resize(r*n,i*n),this._temporalSS.resize(r*n,i*n)},cu.prototype.containPoint=function(e,t){var r=this.viewport,i=this.layer.renderer.getHeight();return t=i-t,e>=r.x&&t>=r.y&&e<=r.x+r.width&&t<=r.y+r.height};var du=new de;cu.prototype.castRay=function(e,t,r){var i=this.layer.renderer,n=i.viewport;return i.viewport=this.viewport,i.screenToNDC(e,t,du),this.camera.castRay(du,r),i.viewport=n,r},cu.prototype.prepareRender=function(){this.scene.update(),this.camera.update(),this.scene.updateLights();var e=this.scene.updateRenderList(this.camera);this._needsSortProgressively=!1;for(var t=0;t<e.transparent.length;t++){var r=e.transparent[t],i=r.geometry;i.needsSortVerticesProgressively&&i.needsSortVerticesProgressively()&&(this._needsSortProgressively=!0),i.needsSortTrianglesProgressively&&i.needsSortTrianglesProgressively()&&(this._needsSortProgressively=!0)}this._frame=0,this._temporalSS.resetFrame()},cu.prototype.render=function(e,t){this._doRender(e,t,this._frame),this._frame++},cu.prototype.needsAccumulate=function(){return this.needsTemporalSS()||this._needsSortProgressively},cu.prototype.needsTemporalSS=function(){var e=this._enableTemporalSS;return"auto"===e&&(e=this._enablePostEffect),e},cu.prototype.hasDOF=function(){return this._enableDOF},cu.prototype.isAccumulateFinished=function(){return this.needsTemporalSS()?this._temporalSS.isFinished():this._frame>30},cu.prototype._doRender=function(e,t,r){var i=this.scene,n=this.camera;r=r||0,this._updateTransparent(e,i,n,r),t||(this._shadowMapPass.kernelPCF=this._pcfKernels[0],this._shadowMapPass.render(e,i,n,!0)),this._updateShadowPCFKernel(r);var a=e.clearColor;if(e.gl.clearColor(a[0],a[1],a[2],a[3]),this._enablePostEffect&&(this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,n),this._compositor.updateNormal(e,i,n,this._temporalSS.getFrame())),this._updateSSAO(e,i,n,this._temporalSS.getFrame()),this._enablePostEffect){var o=this._compositor.getSourceFrameBuffer();o.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT),e.render(i,n,!0,!0),o.unbind(e),this.needsTemporalSS()&&t?(this._compositor.composite(e,i,n,this._temporalSS.getSourceFrameBuffer(),this._temporalSS.getFrame()),e.setViewport(this.viewport),this._temporalSS.render(e)):(e.setViewport(this.viewport),this._compositor.composite(e,i,n,null,0))}else if(this.needsTemporalSS()&&t){o=this._temporalSS.getSourceFrameBuffer();o.bind(e),e.saveClear(),e.clearBit=e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT,e.render(i,n,!0,!0),e.restoreClear(),o.unbind(e),e.setViewport(this.viewport),this._temporalSS.render(e)}else e.setViewport(this.viewport),e.render(i,n,!0,!0)},cu.prototype._updateTransparent=function(e,t,r,i){for(var n=new xt,a=new Dt,o=r.getWorldPosition(),s=t.getRenderList(r).transparent,l=0;l<s.length;l++){var u=s[l],h=u.geometry;Dt.invert(a,u.worldTransform),xt.transformMat4(n,o,a),h.needsSortTriangles&&h.needsSortTriangles()&&h.doSortTriangles(n,i),h.needsSortVertices&&h.needsSortVertices()&&h.doSortVertices(n,i)}},cu.prototype._updateSSAO=function(e,t,r){var i=this._enableSSAO&&this._enablePostEffect;i&&this._compositor.updateSSAO(e,t,r,this._temporalSS.getFrame());for(var n=t.getRenderList(r),a=0;a<n.opaque.length;a++){var o=n.opaque[a];o.renderNormal&&o.material[i?"enableTexture":"disableTexture"]("ssaoMap"),i&&o.material.set("ssaoMap",this._compositor.getSSAOTexture())}},cu.prototype._updateShadowPCFKernel=function(e){for(var t=this._pcfKernels[e%this._pcfKernels.length],r=this.scene.getRenderList(this.camera),i=r.opaque,n=0;n<i.length;n++)i[n].receiveShadow&&(i[n].material.set("pcfKernel",t),i[n].material.define("fragment","PCF_KERNEL_SIZE",t.length/2))},cu.prototype.dispose=function(e){this._compositor.dispose(e.gl),this._temporalSS.dispose(e.gl),this._shadowMapPass.dispose(e)},cu.prototype.setPostEffect=function(e,t){var r=this._compositor;this._enablePostEffect=e.get("enable");var i=e.getModel("bloom"),n=e.getModel("edge"),a=e.getModel("DOF",e.getModel("depthOfField")),o=e.getModel("SSAO",e.getModel("screenSpaceAmbientOcclusion")),s=e.getModel("SSR",e.getModel("screenSpaceReflection")),l=e.getModel("FXAA"),u=e.getModel("colorCorrection");i.get("enable")?r.enableBloom():r.disableBloom(),a.get("enable")?r.enableDOF():r.disableDOF(),s.get("enable")?r.enableSSR():r.disableSSR(),u.get("enable")?r.enableColorCorrection():r.disableColorCorrection(),n.get("enable")?r.enableEdge():r.disableEdge(),l.get("enable")?r.enableFXAA():r.disableFXAA(),this._enableDOF=a.get("enable"),this._enableSSAO=o.get("enable"),this._enableSSAO?r.enableSSAO():r.disableSSAO(),r.setBloomIntensity(i.get("intensity")),r.setEdgeColor(n.get("color")),r.setColorLookupTexture(u.get("lookupTexture"),t),r.setExposure(u.get("exposure")),["radius","quality","intensity"].forEach((function(e){r.setSSAOParameter(e,o.get(e))})),["quality","maxRoughness","physical"].forEach((function(e){r.setSSRParameter(e,s.get(e))})),["quality","focalDistance","focalRange","blurRadius","fstop"].forEach((function(e){r.setDOFParameter(e,a.get(e))})),["brightness","contrast","saturation"].forEach((function(e){r.setColorCorrection(e,u.get(e))}))},cu.prototype.setDOFFocusOnPoint=function(e){if(this._enablePostEffect){if(e>this.camera.far||e<this.camera.near)return;return this._compositor.setDOFParameter("focalDistance",e),!0}},cu.prototype.setTemporalSuperSampling=function(e){this._enableTemporalSS=e.get("enable")},cu.prototype.isLinearSpace=function(){return this._enablePostEffect},cu.prototype.setRootNode=function(e){if(this.rootNode!==e){for(var t=this.rootNode.children(),r=0;r<t.length;r++)e.add(t[r]);e!==this.scene&&this.scene.add(e),this.rootNode=e}},cu.prototype.add=function(e){this.rootNode.add(e)},cu.prototype.remove=function(e){this.rootNode.remove(e)},cu.prototype.removeAll=function(e){this.rootNode.removeAll(e)},Object.assign(cu.prototype,v);var fu=cu;function pu(e,t){var r=e.getBoxLayoutParams(),i=Object(Us["g"])(r,{width:t.getWidth(),height:t.getHeight()});i.y=t.getHeight()-i.y-i.height,this.viewGL.setViewport(i.x,i.y,i.width,i.height,t.getDevicePixelRatio());var n=e.get("boxWidth"),a=e.get("boxHeight"),o=e.get("boxDepth");this.getAxis("x").setExtent(-n/2,n/2),this.getAxis("y").setExtent(o/2,-o/2),this.getAxis("z").setExtent(-a/2,a/2),this.size=[n,a,o]}function mu(e,t){var r={};function i(e,t){r[e]=r[e]||[1/0,-1/0],r[e][0]=Math.min(t[0],r[e][0]),r[e][1]=Math.max(t[1],r[e][1])}e.eachSeries((function(e){if(e.coordinateSystem===this){var t=e.getData();["x","y","z"].forEach((function(e){t.mapDimensionsAll(e,!0).forEach((function(r){i(e,t.getDataExtent(r,!0))}))}))}}),this),["xAxis3D","yAxis3D","zAxis3D"].forEach((function(t){e.eachComponent(t,(function(e){var i=t.charAt(0),n=e.getReferringComponents("grid3D").models[0],a=n.coordinateSystem;if(a===this){var o=a.getAxis(i);if(!o){var s=l["A"].createScale(r[i]||[1/0,-1/0],e);o=new zs(i,s),o.type=e.get("type");var u="category"===o.type;o.onBand=u&&e.get("boundaryGap"),o.inverse=e.get("inverse"),e.axis=o,o.model=e,o.getLabelModel=function(){return e.getModel("axisLabel",n.getModel("axisLabel"))},o.getTickModel=function(){return e.getModel("axisTick",n.getModel("axisTick"))},a.addAxis(o)}}}),this)}),this),this.resize(this.model,t)}var gu={dimensions:Fs.prototype.dimensions,create:function(e,t){var r=[];e.eachComponent("grid3D",(function(e){e.__viewGL=e.__viewGL||new fu;var t=new Fs;t.model=e,t.viewGL=e.__viewGL,e.coordinateSystem=t,r.push(t),t.resize=pu,t.update=mu}));var i=["xAxis3D","yAxis3D","zAxis3D"];function n(e,t){return i.map((function(r){var i=e.getReferringComponents(r).models[0];return null==i&&(i=t.getComponent(r)),i}))}return e.eachSeries((function(t){if("cartesian3D"===t.get("coordinateSystem")){var r=t.getReferringComponents("grid3D").models[0];if(null==r){var i=n(t,e);r=i[0].getCoordSysModel();i.forEach((function(e){e.getCoordSysModel()}))}var a=r.coordinateSystem;t.coordinateSystem=a}})),r}},_u=gu,vu=l["c"].extend({type:"cartesian3DAxis",axis:null,getCoordSysModel:function(){return this.ecModel.queryComponents({mainType:"grid3D",index:this.option.gridIndex,id:this.option.gridId})[0]}});l["A"].mixinAxisModelCommonMethods(vu);var yu=vu,xu={show:!0,grid3DIndex:0,inverse:!1,name:"",nameLocation:"middle",nameTextStyle:{fontSize:16},nameGap:20,axisPointer:{},axisLine:{},axisTick:{},axisLabel:{},splitArea:{}},Tu=l["Y"].merge({boundaryGap:!0,axisTick:{alignWithLabel:!1,interval:"auto"},axisLabel:{interval:"auto"},axisPointer:{label:{show:!1}}},xu),bu=l["Y"].merge({boundaryGap:[0,0],splitNumber:5,axisPointer:{label:{}}},xu),wu=l["Y"].defaults({scale:!0,min:"dataMin",max:"dataMax"},bu),Eu=l["Y"].defaults({logBase:10},bu);Eu.scale=!0;var Su={categoryAxis3D:Tu,valueAxis3D:bu,timeAxis3D:wu,logAxis3D:Eu},Mu=r("8e43"),Au=["value","category","time","log"],Nu=function(e,t,r,i,n){Au.forEach((function(a){var o=r.extend({type:t+"Axis3D."+a,__ordinalMeta:null,mergeDefaultAndTheme:function(e,r){var n=r.getTheme();l["Y"].merge(e,n.get(a+"Axis3D")),l["Y"].merge(e,this.getDefaultOption()),e.type=i(t,e)},optionUpdated:function(){var e=this.option;"category"===e.type&&(this.__ordinalMeta=Mu["a"].createByAxisModel(this))},getCategories:function(){if("category"===this.option.type)return this.__ordinalMeta.categories},getOrdinalMeta:function(){return this.__ordinalMeta},defaultOption:l["Y"].merge(l["Y"].clone(Su[a+"Axis3D"]),n||{},!0)});e.registerComponentModel(o)})),e.registerSubTypeDefaulter(t+"Axis3D",l["Y"].curry(i,t))};function Cu(e,t){return t.type||(t.data?"category":"value")}function Pu(e){e.registerComponentModel(qo),e.registerComponentView(Ds),e.registerCoordinateSystem("grid3D",_u),["x","y","z"].forEach((function(t){Nu(e,t,yu,Cu,{name:t.toUpperCase()});const r=e.ComponentView.extend({type:t+"Axis3D"});e.registerComponentView(r)})),e.registerAction({type:"grid3DChangeCamera",event:"grid3dcamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"grid3D",query:e},(function(t){t.setView(e)}))})),e.registerAction({type:"grid3DShowAxisPointer",event:"grid3dshowaxispointer",update:"grid3D:showAxisPointer"},(function(e,t){})),e.registerAction({type:"grid3DHideAxisPointer",event:"grid3dhideaxispointer",update:"grid3D:hideAxisPointer"},(function(e,t){}))}Object(l["X"])(Pu);var Lu={defaultOption:{shading:null,realisticMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},lambertMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},colorMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},hatchingMaterial:{textureTiling:1,textureOffset:0,paperColor:"#fff"}}},Ou={getFilledRegions:function(e,t){var r,i=(e||[]).slice();if("string"===typeof t?(t=l["y"](t),r=t&&t.geoJson):t&&t.features&&(r=t),!r)return[];for(var n={},a=r.features,o=0;o<i.length;o++)n[i[o].name]=i[o];for(o=0;o<a.length;o++){var s=a[o].properties.name;n[s]||i.push({name:s})}return i},defaultOption:{show:!0,zlevel:-10,map:"",left:0,top:0,width:"100%",height:"100%",boxWidth:100,boxHeight:10,boxDepth:"auto",regionHeight:3,environment:"auto",groundPlane:{show:!1,color:"#aaa"},shading:"lambert",light:{main:{alpha:40,beta:30}},viewControl:{alpha:40,beta:0,distance:100,orthographicSize:60,minAlpha:5,minBeta:-80,maxBeta:80},label:{show:!1,distance:2,textStyle:{fontSize:20,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:4}},itemStyle:{color:"#fff",borderWidth:0,borderColor:"#333"},emphasis:{itemStyle:{color:"#639fc0"},label:{show:!0}}}},Du=l["c"].extend({type:"geo3D",layoutMode:"box",coordinateSystem:null,optionUpdated:function(){var e=this.option;e.regions=this.getFilledRegions(e.regions,e.map);var t=l["A"].createDimensions(e.data||[],{coordDimensions:["value"],encodeDefine:this.get("encode"),dimensionsDefine:this.get("dimensions")}),r=new l["e"](t,this);r.initData(e.regions);var i={};r.each((function(e){var t=r.getName(e),n=r.getItemModel(e);i[t]=n})),this._regionModelMap=i,this._data=r},getData:function(){return this._data},getRegionModel:function(e){var t=this.getData().getName(e);return this._regionModelMap[t]||new l["f"](null,this)},getRegionPolygonCoords:function(e){var t=this.getData().getName(e),r=this.coordinateSystem.getRegion(t);return r?r.geometries:[]},getFormattedLabel:function(e,t){var r=this._data.getName(e),i=this.getRegionModel(e),n=i.get("normal"===t?["label","formatter"]:["emphasis","label","formatter"]);null==n&&(n=i.get(["label","formatter"]));var a={name:r};if("function"===typeof n)return a.status=t,n(a);if("string"===typeof n){var o=a.seriesName;return n.replace("{a}",null!=o?o:"")}return r},defaultOption:{regions:[]}});l["Y"].merge(Du.prototype,Ou),l["Y"].merge(Du.prototype,Vo),l["Y"].merge(Du.prototype,Wo),l["Y"].merge(Du.prototype,jo),l["Y"].merge(Du.prototype,Lu);var Ru=Du,Iu=Fu;function Fu(e,t,r){r=r||2;var i,n,a,o,s,l,u,h=t&&t.length,c=h?t[0]*r:e.length,d=Bu(e,0,c,r,!0),f=[];if(!d)return f;if(h&&(d=Wu(e,t,d,r)),e.length>80*r){i=a=e[0],n=o=e[1];for(var p=r;p<c;p+=r)s=e[p],l=e[p+1],s<i&&(i=s),l<n&&(n=l),s>a&&(a=s),l>o&&(o=l);u=Math.max(a-i,o-n)}return Uu(d,f,r,i,n,u),f}function Bu(e,t,r,i,n){var a,o;if(n===hh(e,t,r,i)>0)for(a=t;a<r;a+=i)o=sh(a,e[a],e[a+1],o);else for(a=r-i;a>=t;a-=i)o=sh(a,e[a],e[a+1],o);return o&&th(o,o.next)&&(lh(o),o=o.next),o}function zu(e,t){if(!e)return e;t||(t=e);var r,i=e;do{if(r=!1,i.steiner||!th(i,i.next)&&0!==eh(i.prev,i,i.next))i=i.next;else{if(lh(i),i=t=i.prev,i===i.next)return null;r=!0}}while(r||i!==t);return t}function Uu(e,t,r,i,n,a,o){if(e){!o&&a&&Yu(e,i,n,a);var s,l,u=e;while(e.prev!==e.next)if(s=e.prev,l=e.next,a?ku(e,i,n,a):Gu(e))t.push(s.i/r),t.push(e.i/r),t.push(l.i/r),lh(e),e=l.next,u=l.next;else if(e=l,e===u){o?1===o?(e=Hu(e,t,r),Uu(e,t,r,i,n,a,2)):2===o&&Vu(e,t,r,i,n,a):Uu(zu(e),t,r,i,n,a,1);break}}}function Gu(e){var t=e.prev,r=e,i=e.next;if(eh(t,r,i)>=0)return!1;var n=e.next.next;while(n!==e.prev){if(Ju(t.x,t.y,r.x,r.y,i.x,i.y,n.x,n.y)&&eh(n.prev,n,n.next)>=0)return!1;n=n.next}return!0}function ku(e,t,r,i){var n=e.prev,a=e,o=e.next;if(eh(n,a,o)>=0)return!1;var s=n.x<a.x?n.x<o.x?n.x:o.x:a.x<o.x?a.x:o.x,l=n.y<a.y?n.y<o.y?n.y:o.y:a.y<o.y?a.y:o.y,u=n.x>a.x?n.x>o.x?n.x:o.x:a.x>o.x?a.x:o.x,h=n.y>a.y?n.y>o.y?n.y:o.y:a.y>o.y?a.y:o.y,c=Ku(s,l,t,r,i),d=Ku(u,h,t,r,i),f=e.nextZ;while(f&&f.z<=d){if(f!==e.prev&&f!==e.next&&Ju(n.x,n.y,a.x,a.y,o.x,o.y,f.x,f.y)&&eh(f.prev,f,f.next)>=0)return!1;f=f.nextZ}f=e.prevZ;while(f&&f.z>=c){if(f!==e.prev&&f!==e.next&&Ju(n.x,n.y,a.x,a.y,o.x,o.y,f.x,f.y)&&eh(f.prev,f,f.next)>=0)return!1;f=f.prevZ}return!0}function Hu(e,t,r){var i=e;do{var n=i.prev,a=i.next.next;!th(n,a)&&rh(n,i,i.next,a)&&nh(n,a)&&nh(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),lh(i),lh(i.next),i=e=a),i=i.next}while(i!==e);return i}function Vu(e,t,r,i,n,a){var o=e;do{var s=o.next.next;while(s!==o.prev){if(o.i!==s.i&&$u(o,s)){var l=oh(o,s);return o=zu(o,o.next),l=zu(l,l.next),Uu(o,t,r,i,n,a),void Uu(l,t,r,i,n,a)}s=s.next}o=o.next}while(o!==e)}function Wu(e,t,r,i){var n,a,o,s,l,u=[];for(n=0,a=t.length;n<a;n++)o=t[n]*i,s=n<a-1?t[n+1]*i:e.length,l=Bu(e,o,s,i,!1),l===l.next&&(l.steiner=!0),u.push(Qu(l));for(u.sort(ju),n=0;n<u.length;n++)Xu(u[n],r),r=zu(r,r.next);return r}function ju(e,t){return e.x-t.x}function Xu(e,t){if(t=qu(e,t),t){var r=oh(t,e);zu(r,r.next)}}function qu(e,t){var r,i=t,n=e.x,a=e.y,o=-1/0;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){var s=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(s<=n&&s>o){if(o=s,s===n){if(a===i.y)return i;if(a===i.next.y)return i.next}r=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!r)return null;if(n===o)return r.prev;var l,u=r,h=r.x,c=r.y,d=1/0;i=r.next;while(i!==u)n>=i.x&&i.x>=h&&n!==i.x&&Ju(a<c?n:o,a,h,c,a<c?o:n,a,i.x,i.y)&&(l=Math.abs(a-i.y)/(n-i.x),(l<d||l===d&&i.x>r.x)&&nh(i,e)&&(r=i,d=l)),i=i.next;return r}function Yu(e,t,r,i){var n=e;do{null===n.z&&(n.z=Ku(n.x,n.y,t,r,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next}while(n!==e);n.prevZ.nextZ=null,n.prevZ=null,Zu(n)}function Zu(e){var t,r,i,n,a,o,s,l,u=1;do{r=e,e=null,a=null,o=0;while(r){for(o++,i=r,s=0,t=0;t<u;t++)if(s++,i=i.nextZ,!i)break;l=u;while(s>0||l>0&&i)0!==s&&(0===l||!i||r.z<=i.z)?(n=r,r=r.nextZ,s--):(n=i,i=i.nextZ,l--),a?a.nextZ=n:e=n,n.prevZ=a,a=n;r=i}a.nextZ=null,u*=2}while(o>1);return e}function Ku(e,t,r,i,n){return e=32767*(e-r)/n,t=32767*(t-i)/n,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}function Qu(e){var t=e,r=e;do{t.x<r.x&&(r=t),t=t.next}while(t!==e);return r}function Ju(e,t,r,i,n,a,o,s){return(n-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(i-s)-(r-o)*(t-s)>=0&&(r-o)*(a-s)-(n-o)*(i-s)>=0}function $u(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!ih(e,t)&&nh(e,t)&&nh(t,e)&&ah(e,t)}function eh(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function th(e,t){return e.x===t.x&&e.y===t.y}function rh(e,t,r,i){return!!(th(e,t)&&th(r,i)||th(e,i)&&th(r,t))||eh(e,t,r)>0!==eh(e,t,i)>0&&eh(r,i,e)>0!==eh(r,i,t)>0}function ih(e,t){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&rh(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function nh(e,t){return eh(e.prev,e,e.next)<0?eh(e,t,e.next)>=0&&eh(e,e.prev,t)>=0:eh(e,t,e.prev)<0||eh(e,e.next,t)<0}function ah(e,t){var r=e,i=!1,n=(e.x+t.x)/2,a=(e.y+t.y)/2;do{r.y>a!==r.next.y>a&&r.next.y!==r.y&&n<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(i=!i),r=r.next}while(r!==e);return i}function oh(e,t){var r=new uh(e.i,e.x,e.y),i=new uh(t.i,t.x,t.y),n=e.next,a=t.prev;return e.next=t,t.prev=e,r.next=n,n.prev=r,i.next=r,r.prev=i,a.next=i,i.prev=a,i}function sh(e,t,r,i){var n=new uh(e,t,r);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function lh(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function uh(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function hh(e,t,r,i){for(var n=0,a=t,o=r-i;a<r;a+=i)n+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return n}function ch(e,t,r){var i=e[t];e[t]=e[r],e[r]=i}function dh(e,t,r,i,n){var a=r,o=e[t];ch(e,t,i);for(var s=r;s<i;s++)n(e[s],o)<0&&(ch(e,s,a),a++);return ch(e,i,a),a}function fh(e,t,r,i){if(r<i){var n=Math.floor((r+i)/2),a=dh(e,n,r,i,t);fh(e,t,r,a-1),fh(e,t,a+1,i)}}function ph(){this._parts=[]}Fu.deviation=function(e,t,r,i){var n=t&&t.length,a=n?t[0]*r:e.length,o=Math.abs(hh(e,0,a,r));if(n)for(var s=0,l=t.length;s<l;s++){var u=t[s]*r,h=s<l-1?t[s+1]*r:e.length;o-=Math.abs(hh(e,u,h,r))}var c=0;for(s=0;s<i.length;s+=3){var d=i[s]*r,f=i[s+1]*r,p=i[s+2]*r;c+=Math.abs((e[d]-e[p])*(e[f+1]-e[d+1])-(e[d]-e[f])*(e[p+1]-e[d+1]))}return 0===o&&0===c?0:Math.abs((c-o)/o)},ph.prototype.step=function(e,t,r){var i=e.length;if(0===r){this._parts=[],this._sorted=!1;var n=Math.floor(i/2);this._parts.push({pivot:n,left:0,right:i-1}),this._currentSortPartIdx=0}if(!this._sorted){var a=this._parts;if(0===a.length)return this._sorted=!0,!0;if(a.length<512){for(var o=0;o<a.length;o++)a[o].pivot=dh(e,a[o].pivot,a[o].left,a[o].right,t);var s=[];for(o=0;o<a.length;o++){var l=a[o].left,u=a[o].pivot-1;u>l&&s.push({pivot:Math.floor((u+l)/2),left:l,right:u});l=a[o].pivot+1,u=a[o].right;u>l&&s.push({pivot:Math.floor((u+l)/2),left:l,right:u})}a=this._parts=s}else for(o=0;o<Math.floor(a.length/10);o++){var h=a.length-1-this._currentSortPartIdx;if(fh(e,t,a[h].left,a[h].right),this._currentSortPartIdx++,this._currentSortPartIdx===a.length)return this._sorted=!0,!0}return!1}},ph.sort=fh;var mh=ph,gh=rs.vec3,_h=gh.create(),vh=gh.create(),yh=gh.create(),xh={needsSortTriangles:function(){return this.indices&&this.sortTriangles},needsSortTrianglesProgressively:function(){return this.needsSortTriangles()&&this.triangleCount>=2e4},doSortTriangles:function(e,t){var r=this.indices;if(0===t){var i=this.attributes.position;e=e.array;this._triangleZList&&this._triangleZList.length===this.triangleCount||(this._triangleZList=new Float32Array(this.triangleCount),this._sortedTriangleIndices=new Uint32Array(this.triangleCount),this._indicesTmp=new r.constructor(r.length),this._triangleZListTmp=new Float32Array(this.triangleCount));for(var n,a=0,o=0;o<r.length;){i.get(r[o++],_h),i.get(r[o++],vh),i.get(r[o++],yh);var s=gh.sqrDist(_h,e),l=gh.sqrDist(vh,e),u=gh.sqrDist(yh,e),h=Math.min(s,l);h=Math.min(h,u),3===o?(n=h,h=0):h-=n,this._triangleZList[a++]=h}}var c=this._sortedTriangleIndices;for(o=0;o<c.length;o++)c[o]=o;if(this.triangleCount<2e4)0===t&&this._simpleSort(!0);else for(o=0;o<3;o++)this._progressiveQuickSort(3*t+o);var d=this._indicesTmp,f=this._triangleZListTmp,p=this._triangleZList;for(o=0;o<this.triangleCount;o++){var m=3*c[o],g=3*o;d[g++]=r[m++],d[g++]=r[m++],d[g]=r[m],f[o]=p[c[o]]}var _=this._indicesTmp;this._indicesTmp=this.indices,this.indices=_;_=this._triangleZListTmp;this._triangleZListTmp=this._triangleZList,this._triangleZList=_,this.dirtyIndices()},_simpleSort:function(e){var t=this._triangleZList,r=this._sortedTriangleIndices;function i(e,r){return t[r]-t[e]}e?Array.prototype.sort.call(r,i):mh.sort(r,i,0,r.length-1)},_progressiveQuickSort:function(e){var t=this._triangleZList,r=this._sortedTriangleIndices;this._quickSort=this._quickSort||new mh,this._quickSort.step(r,(function(e,r){return t[r]-t[e]}),e)}};function Th(e){const t=e.getVisual("style");if(t){const r=e.getVisual("drawType");return t[r]}}function bh(e){const t=e.getVisual("style");return t.opacity}function wh(e,t){const r=e.getItemVisual(t,"style");if(r){const t=e.getVisual("drawType");return r[t]}}function Eh(e,t){const r=e.getItemVisual(t,"style");return r&&r.opacity}var Sh=1,Mh=2;function Ah(e,t,r){this._labelsMesh=new Es,this._labelTextureSurface=new us({width:512,height:512,devicePixelRatio:r.getDevicePixelRatio(),onupdate:function(){r.getZr().refresh()}}),this._api=r,this._labelsMesh.material.set("textureAtlas",this._labelTextureSurface.getTexture())}Ah.prototype.getLabelPosition=function(e,t,r){return[0,0,0]},Ah.prototype.getLabelDistance=function(e,t,r){return 0},Ah.prototype.getMesh=function(){return this._labelsMesh},Ah.prototype.updateData=function(e,t,r){null==t&&(t=0),null==r&&(r=e.count()),this._labelsVisibilitiesBits&&this._labelsVisibilitiesBits.length===r-t||(this._labelsVisibilitiesBits=new Uint8Array(r-t));for(var i=["label","show"],n=["emphasis","label","show"],a=t;a<r;a++){var o=e.getItemModel(a),s=o.get(i),l=o.get(n);null==l&&(l=s);var u=(s?Sh:0)|(l?Mh:0);this._labelsVisibilitiesBits[a-t]=u}this._start=t,this._end=r,this._data=e},Ah.prototype.updateLabels=function(e){if(this._data){e=e||[];for(var t=e.length>0,r={},i=0;i<e.length;i++)r[e[i]]=!0;this._labelsMesh.geometry.convertToDynamicArray(!0),this._labelTextureSurface.clear();for(var n=["label"],a=["emphasis","label"],o=this._data.hostModel,s=this._data,u=o.getModel(n),h=o.getModel(a,u),c={left:"right",right:"left",top:"center",bottom:"center"},d={left:"middle",right:"middle",top:"bottom",bottom:"top"},f=this._start;f<this._end;f++){var p=!1;t&&r[f]&&(p=!0);var m=this._labelsVisibilitiesBits[f-this._start]&(p?Mh:Sh);if(m){var g=s.getItemModel(f),_=g.getModel(p?a:n,p?h:u),v=_.get("distance")||0,y=_.get("position"),x=this._api.getDevicePixelRatio(),T=o.getFormattedLabel(f,p?"emphasis":"normal");if(null==T||""===T)return;var b=new l["z"].Text({style:Object(Yo["c"])(_,{text:T,fill:_.get("color")||wh(s,f)||"#000",align:"left",verticalAlign:"top",opacity:Un.firstNotNull(_.get("opacity"),Eh(s,f),1)})}),w=b.getBoundingRect(),E=1.2;w.height*=E;var S=this._labelTextureSurface.add(b),M=c[y]||"center",A=d[y]||"bottom";this._labelsMesh.geometry.addSprite(this.getLabelPosition(f,y,v),[w.width*x,w.height*x],S,M,A,this.getLabelDistance(f,y,v)*x)}}this._labelsMesh.material.set("uvScale",this._labelTextureSurface.getCoordsScale()),this._labelTextureSurface.getZr().refreshImmediately(),this._labelsMesh.geometry.convertToTypedArray(),this._labelsMesh.geometry.dirty()}};var Nh=Ah,Ch=rs.vec3;function Ph(e){this.rootNode=new Ao.Node,this._triangulationResults={},this._shadersMap=Ao.COMMON_SHADERS.filter((function(e){return"shadow"!==e})).reduce((function(e,t){return e[t]=Ao.createShader("ecgl."+t),e}),{}),this._linesShader=Ao.createShader("ecgl.meshLines3D");var t={};Ao.COMMON_SHADERS.forEach((function(e){t[e]=new Ao.Material({shader:Ao.createShader("ecgl."+e)})})),this._groundMaterials=t,this._groundMesh=new Ao.Mesh({geometry:new Ao.PlaneGeometry({dynamic:!0}),castShadow:!1,renderNormal:!0,$ignorePicking:!0}),this._groundMesh.rotation.rotateX(-Math.PI/2),this._labelsBuilder=new Nh(512,512,e),this._labelsBuilder.getMesh().renderOrder=100,this._labelsBuilder.getMesh().material.depthTest=!1,this.rootNode.add(this._labelsBuilder.getMesh()),this._initMeshes(),this._api=e}Ao.Shader.import(Ps),Ph.prototype={constructor:Ph,extrudeY:!0,update:function(e,t,r,i,n){var a=e.getData();null==i&&(i=0),null==n&&(n=a.count()),this._startIndex=i,this._endIndex=n-1,this._triangulation(e,i,n);var o=this._getShader(e.get("shading"));this._prepareMesh(e,o,r,i,n),this.rootNode.updateWorldTransform(),this._updateRegionMesh(e,r,i,n);var s=e.coordinateSystem;"geo3D"===s.type&&this._updateGroundPlane(e,s,r);var l=this;this._labelsBuilder.updateData(a,i,n),this._labelsBuilder.getLabelPosition=function(e,t,r){var i=a.getName(e),n=r;if("geo3D"===s.type){var o=s.getRegion(i);if(!o)return[NaN,NaN,NaN];c=o.center;var u=s.dataToPoint([c[0],c[1],n]);return u}var h=l._triangulationResults[e-l._startIndex],c=l.extrudeY?[(h.max[0]+h.min[0])/2,h.max[1]+n,(h.max[2]+h.min[2])/2]:[(h.max[0]+h.min[0])/2,(h.max[1]+h.min[1])/2,h.max[2]+n]},this._data=a,this._labelsBuilder.updateLabels(),this._updateDebugWireframe(e),this._lastHoverDataIndex=0},_initMeshes:function(){var e=this;function t(){var t=new Ao.Mesh({name:"Polygon",material:new Ao.Material({shader:e._shadersMap.lambert}),geometry:new Ao.Geometry({sortTriangles:!0,dynamic:!0}),culling:!1,ignorePicking:!0,renderNormal:!0});return Object.assign(t.geometry,xh),t}var r=t(),i=new Ao.Mesh({material:new Ao.Material({shader:this._linesShader}),castShadow:!1,ignorePicking:!0,$ignorePicking:!0,geometry:new os({useNativeLine:!1})});this.rootNode.add(r),this.rootNode.add(i),r.material.define("both","VERTEX_COLOR"),r.material.define("fragment","DOUBLE_SIDED"),this._polygonMesh=r,this._linesMesh=i,this.rootNode.add(this._groundMesh)},_getShader:function(e){var t=this._shadersMap[e];return t||(t=this._shadersMap.lambert),t.__shading=e,t},_prepareMesh:function(e,t,r,i,n){for(var a=0,o=0,s=0,l=0,u=i;u<n;u++){var h=this._getRegionPolygonInfo(u),c=this._getRegionLinesInfo(u,e,this._linesMesh.geometry);a+=h.vertexCount,o+=h.triangleCount,s+=c.vertexCount,l+=c.triangleCount}var d=this._polygonMesh,f=d.geometry;["position","normal","texcoord0","color"].forEach((function(e){f.attributes[e].init(a)})),f.indices=a>65535?new Uint32Array(3*o):new Uint16Array(3*o),d.material.shader!==t&&d.material.attachShader(t,!0),Ao.setMaterialFromModel(t.__shading,d.material,e,r),s>0&&(this._linesMesh.geometry.resetOffset(),this._linesMesh.geometry.setVertexCount(s),this._linesMesh.geometry.setTriangleCount(l)),this._dataIndexOfVertex=new Uint32Array(a),this._vertexRangeOfDataIndex=new Uint32Array(2*(n-i))},_updateRegionMesh:function(e,t,r,i){for(var n=e.getData(),a=0,o=0,s=!1,l=this._polygonMesh,u=this._linesMesh,h=r;h<i;h++){var c=e.getRegionModel(h),d=c.getModel("itemStyle"),f=Un.firstNotNull(wh(n,h),d.get("color"),"#fff"),p=Un.firstNotNull(Eh(n,h),1),m=Ao.parseColor(f),g=Ao.parseColor(d.get("borderColor"));m[3]*=p,g[3]*=p;var _=m[3]<.99;l.material.set("color",[1,1,1,1]),s=s||_;for(var v=Un.firstNotNull(c.get("height",!0),e.get("regionHeight")),y=this._updatePolygonGeometry(e,l.geometry,h,v,a,o,m),x=a;x<y.vertexOffset;x++)this._dataIndexOfVertex[x]=h;this._vertexRangeOfDataIndex[2*(h-r)]=a,this._vertexRangeOfDataIndex[2*(h-r)+1]=y.vertexOffset,a=y.vertexOffset,o=y.triangleOffset;var T=d.get("borderWidth"),b=T>0;b&&(T*=t.getDevicePixelRatio(),this._updateLinesGeometry(u.geometry,e,h,v,T,e.coordinateSystem.transform)),u.invisible=!b,u.material.set({color:g})}l=this._polygonMesh;l.material.transparent=s,l.material.depthMask=!s,l.geometry.updateBoundingBox(),l.frontFace=this.extrudeY?Ao.Mesh.CCW:Ao.Mesh.CW,l.material.get("normalMap")&&l.geometry.generateTangents(),l.seriesIndex=e.seriesIndex,l.on("mousemove",this._onmousemove,this),l.on("mouseout",this._onmouseout,this)},_updateDebugWireframe:function(e){var t=e.getModel("debug.wireframe");if(t.get("show")){var r=Ao.parseColor(t.get("lineStyle.color")||"rgba(0,0,0,0.5)"),i=Un.firstNotNull(t.get("lineStyle.width"),1),n=this._polygonMesh;n.geometry.generateBarycentric(),n.material.define("both","WIREFRAME_TRIANGLE"),n.material.set("wireframeLineColor",r),n.material.set("wireframeLineWidth",i)}},_onmousemove:function(e){var t=this._dataIndexOfVertex[e.triangle[0]];null==t&&(t=-1),t!==this._lastHoverDataIndex&&(this.downplay(this._lastHoverDataIndex),this.highlight(t),this._labelsBuilder.updateLabels([t])),this._lastHoverDataIndex=t,this._polygonMesh.dataIndex=t},_onmouseout:function(e){e.target&&(this.downplay(this._lastHoverDataIndex),this._lastHoverDataIndex=-1,this._polygonMesh.dataIndex=-1),this._labelsBuilder.updateLabels([])},_updateGroundPlane:function(e,t,r){var i=e.getModel("groundPlane",e);if(this._groundMesh.invisible=!i.get("show",!0),!this._groundMesh.invisible){var n=e.get("shading"),a=this._groundMaterials[n];a||(a=this._groundMaterials.lambert),Ao.setMaterialFromModel(n,a,i,r),a.get("normalMap")&&this._groundMesh.geometry.generateTangents(),this._groundMesh.material=a,this._groundMesh.material.set("color",Ao.parseColor(i.get("color"))),this._groundMesh.scale.set(t.size[0],t.size[2],1)}},_triangulation:function(e,t,r){this._triangulationResults=[];for(var i=[1/0,1/0,1/0],n=[-1/0,-1/0,-1/0],a=e.coordinateSystem,o=t;o<r;o++){for(var s=[],l=e.getRegionPolygonCoords(o),u=0;u<l.length;u++){var h=l[u].exterior,c=l[u].interiors,d=[],f=[];if(!(h.length<3)){for(var p=0,m=0;m<h.length;m++){var g=h[m];d[p++]=g[0],d[p++]=g[1]}for(m=0;m<c.length;m++)if(!(c[m].length<3)){for(var _=d.length/2,v=0;v<c[m].length;v++){g=c[m][v];d.push(g[0]),d.push(g[1])}f.push(_)}var y=Iu(d,f),x=new Float64Array(d.length/2*3),T=[],b=[1/0,1/0,1/0],w=[-1/0,-1/0,-1/0],E=0;for(m=0;m<d.length;)Ch.set(T,d[m++],0,d[m++]),a&&a.transform&&Ch.transformMat4(T,T,a.transform),Ch.min(b,b,T),Ch.max(w,w,T),x[E++]=T[0],x[E++]=T[1],x[E++]=T[2];Ch.min(i,i,b),Ch.max(n,n,w),s.push({points:x,indices:y,min:b,max:w})}}this._triangulationResults.push(s)}this._geoBoundingBox=[i,n]},_getRegionPolygonInfo:function(e){for(var t=this._triangulationResults[e-this._startIndex],r=0,i=0,n=0;n<t.length;n++)r+=t[n].points.length/3,i+=t[n].indices.length/3;var a=2*r+4*r,o=2*i+2*r;return{vertexCount:a,triangleCount:o}},_updatePolygonGeometry:function(e,t,r,i,n,a,o){var s=e.get("projectUVOnGround"),l=t.attributes.position,u=t.attributes.normal,h=t.attributes.texcoord0,c=t.attributes.color,d=this._triangulationResults[r-this._startIndex],f=c.value&&o,p=t.indices,m=this.extrudeY?1:2,g=this.extrudeY?2:1,_=[this.rootNode.worldTransform.x.len(),this.rootNode.worldTransform.y.len(),this.rootNode.worldTransform.z.len()],v=Ch.mul([],this._geoBoundingBox[0],_),y=Ch.mul([],this._geoBoundingBox[1],_),x=Math.max(y[0]-v[0],y[2]-v[2]);function T(e,t,r){for(var i=e.points,a=i.length,s=[],u=[],d=0;d<a;d+=3)s[0]=i[d],s[m]=t,s[g]=i[d+2],u[0]=(i[d]*_[0]-v[0])/x,u[1]=(i[d+2]*_[g]-v[2])/x,l.set(n,s),f&&c.set(n,o),h.set(n++,u)}function b(e,t,r){var i=n;T(e,t,r);for(var o=e.indices.length,s=0;s<o;s++)p[3*a+s]=e.indices[s]+i;a+=e.indices.length/3}for(var w=this.extrudeY?[0,1,0]:[0,0,1],E=Ch.negate([],w),S=0;S<d.length;S++){var M=n,A=d[S];b(A,0,0),b(A,i,0);for(var N=A.points.length/3,C=0;C<N;C++)u.set(M+C,E),u.set(M+C+N,w);var P=[0,3,1,1,3,2],L=[[],[],[],[]],O=[],D=[],R=[],I=[],F=0;for(C=0;C<N;C++){for(var B=(C+1)%N,z=(A.points[3*B]-A.points[3*C])*_[0],U=(A.points[3*B+2]-A.points[3*C+2])*_[g],G=Math.sqrt(z*z+U*U),k=0;k<4;k++){var H=0===k||3===k,V=3*(H?C:B);L[k][0]=A.points[V],L[k][m]=k>1?i:0,L[k][g]=A.points[V+2],l.set(n+k,L[k]),s?(I[0]=(A.points[V]*_[0]-v[0])/x,I[1]=(A.points[V+2]*_[g]-v[g])/x):(I[0]=(H?F:F+G)/x,I[1]=(L[k][m]*_[m]-v[m])/x),h.set(n+k,I)}Ch.sub(O,L[1],L[0]),Ch.sub(D,L[3],L[0]),Ch.cross(R,O,D),Ch.normalize(R,R);for(k=0;k<4;k++)u.set(n+k,R),f&&c.set(n+k,o);for(k=0;k<6;k++)p[3*a+k]=P[k]+n;n+=4,a+=2,F+=G}}return t.dirty(),{vertexOffset:n,triangleOffset:a}},_getRegionLinesInfo:function(e,t,r){var i=0,n=0,a=t.getRegionModel(e),o=a.getModel("itemStyle"),s=o.get("borderWidth");if(s>0){var l=t.getRegionPolygonCoords(e);l.forEach((function(e){var t=e.exterior,a=e.interiors;i+=r.getPolylineVertexCount(t),n+=r.getPolylineTriangleCount(t);for(var o=0;o<a.length;o++)i+=r.getPolylineVertexCount(a[o]),n+=r.getPolylineTriangleCount(a[o])}),this)}return{vertexCount:i,triangleCount:n}},_updateLinesGeometry:function(e,t,r,i,n,a){function o(e){for(var t=new Float64Array(3*e.length),r=0,n=[],o=0;o<e.length;o++)n[0]=e[o][0],n[1]=i+.1,n[2]=e[o][1],a&&Ch.transformMat4(n,n,a),t[r++]=n[0],t[r++]=n[1],t[r++]=n[2];return t}var s=[1,1,1,1],l=t.getRegionPolygonCoords(r);l.forEach((function(t){var r=t.exterior,i=t.interiors;e.addPolyline(o(r),s,n);for(var a=0;a<i.length;a++)e.addPolyline(o(i[a]),s,n)}))},highlight:function(e){var t=this._data;if(t){var r=t.getItemModel(e),i=r.getModel(["emphasis","itemStyle"]),n=i.get("color"),a=Un.firstNotNull(i.get("opacity"),Eh(t,e),1);if(null==n){var o=wh(t,e);n=l["i"].lift(o,-.4)}null==a&&(a=Eh(t,e));var s=Ao.parseColor(n);s[3]*=a,this._setColorOfDataIndex(t,e,s)}},downplay:function(e){var t=this._data;if(t){var r=Un.firstNotNull(wh(t,e),t.getItemModel(e).get(["itemStyle","color"]),"#fff"),i=Un.firstNotNull(Eh(t,e),1),n=Ao.parseColor(r);n[3]*=i,this._setColorOfDataIndex(t,e,n)}},_setColorOfDataIndex:function(e,t,r){if(!(t<this._startIndex&&t>this._endIndex)){t-=this._startIndex;for(var i=this._vertexRangeOfDataIndex[2*t];i<this._vertexRangeOfDataIndex[2*t+1];i++)this._polygonMesh.geometry.attributes.color.set(i,r);this._polygonMesh.geometry.dirty(),this._api.getZr().refresh()}}};var Lh=Ph,Oh=l["d"].extend({type:"geo3D",__ecgl__:!0,init:function(e,t){this._geo3DBuilder=new Lh(t),this.groupGL=new Ao.Node,this._lightRoot=new Ao.Node,this._sceneHelper=new cs(this._lightRoot),this._sceneHelper.initLight(this._lightRoot),this._control=new $o({zr:t.getZr()}),this._control.init()},render:function(e,t,r){this.groupGL.add(this._geo3DBuilder.rootNode);var i=e.coordinateSystem;if(i&&i.viewGL){i.viewGL.add(this._lightRoot),e.get("show")?i.viewGL.add(this.groupGL):i.viewGL.remove(this.groupGL);var n=this._control;n.setViewGL(i.viewGL);var a=e.getModel("viewControl");n.setFromViewControlModel(a,0),this._sceneHelper.setScene(i.viewGL.scene),this._sceneHelper.updateLight(e),i.viewGL.setPostEffect(e.getModel("postEffect"),r),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._geo3DBuilder.update(e,t,r,0,e.getData().count());var o=i.viewGL.isLinearSpace()?"define":"undefine";this._geo3DBuilder.rootNode.traverse((function(e){e.material&&e.material[o]("fragment","SRGB_DECODE")})),n.off("update"),n.on("update",(function(){r.dispatchAction({type:"geo3DChangeCamera",alpha:n.getAlpha(),beta:n.getBeta(),distance:n.getDistance(),center:n.getCenter(),from:this.uid,geo3DId:e.id})})),n.update()}},afterRender:function(e,t,r,i){var n=i.renderer;this._sceneHelper.updateAmbientCubemap(n,e,r),this._sceneHelper.updateSkybox(n,e,r)},dispose:function(){this._control.dispose()}}),Dh=r("1792"),Rh=r("6bd4"),Ih=rs.vec3,Fh=rs.mat4,Bh=[Dh["a"],Rh["a"]];function zh(e,t,r,i,n){this.name=e,this.map=t,this.regionHeight=0,this.regions=[],this._nameCoordMap={},this.loadGeoJson(r,i,n),this.transform=Fh.identity(new Float64Array(16)),this.invTransform=Fh.identity(new Float64Array(16)),this.extrudeY=!0,this.altitudeAxis}zh.prototype={constructor:zh,type:"geo3D",dimensions:["lng","lat","alt"],containPoint:function(){},loadGeoJson:function(e,t,r){var i=l["F"]||l["G"];try{this.regions=e?i(e):[]}catch(h){throw"Invalid geoJson format\n"+h}t=t||{},r=r||{};for(var n=this.regions,a={},o=0;o<n.length;o++){var s=n[o].name;s=r[s]||s,n[o].name=s,a[s]=n[o],this.addGeoCoord(s,n[o].center);var u=t[s];u&&n[o].transformTo(u.left,u.top,u.width,u.height)}this._regionsMap=a,this._geoRect=null,Bh.forEach((function(e){e(this)}),this)},getGeoBoundingRect:function(){if(this._geoRect)return this._geoRect;for(var e,t=this.regions,r=0;r<t.length;r++){var i=t[r].getBoundingRect();e=e||i.clone(),e.union(i)}return this._geoRect=e||new l["z"].BoundingRect(0,0,0,0)},addGeoCoord:function(e,t){this._nameCoordMap[e]=t},getRegion:function(e){return this._regionsMap[e]},getRegionByCoord:function(e){for(var t=this.regions,r=0;r<t.length;r++)if(t[r].contain(e))return t[r]},setSize:function(e,t,r){this.size=[e,t,r];var i=this.getGeoBoundingRect(),n=e/i.width,a=-r/i.height,o=-e/2-i.x*n,s=r/2-i.y*a,l=this.extrudeY?[o,0,s]:[o,s,0],u=this.extrudeY?[n,1,a]:[n,a,1],h=this.transform;Fh.identity(h),Fh.translate(h,h,l),Fh.scale(h,h,u),Fh.invert(this.invTransform,h)},dataToPoint:function(e,t){t=t||[];var r=this.extrudeY?1:2,i=this.extrudeY?2:1,n=e[2];return isNaN(n)&&(n=0),t[0]=e[0],t[i]=e[1],this.altitudeAxis?t[r]=this.altitudeAxis.dataToCoord(n):t[r]=0,t[r]+=this.regionHeight,Ih.transformMat4(t,t,this.transform),t},pointToData:function(e,t){}};var Uh=zh;function Gh(e,t){var r=e.getBoxLayoutParams(),i=Object(Us["g"])(r,{width:t.getWidth(),height:t.getHeight()});i.y=t.getHeight()-i.y-i.height,this.viewGL.setViewport(i.x,i.y,i.width,i.height,t.getDevicePixelRatio());var n=this.getGeoBoundingRect(),a=n.width/n.height*(e.get("aspectScale")||.75),o=e.get("boxWidth"),s=e.get("boxDepth"),l=e.get("boxHeight");null==l&&(l=5),isNaN(o)&&isNaN(s)&&(o=100),isNaN(s)?s=o/a:isNaN(o)&&(o=s/a),this.setSize(o,l,s),this.regionHeight=e.get("regionHeight"),this.altitudeAxis&&this.altitudeAxis.setExtent(0,Math.max(l-this.regionHeight,0))}function kh(e,t){var r=[1/0,-1/0];if(e.eachSeries((function(e){if(e.coordinateSystem===this&&"series.map3D"!==e.type){var t=e.getData(),i=e.coordDimToDataDim("alt"),n=i&&i[0];if(n){var a=t.getDataExtent(n,!0);r[0]=Math.min(r[0],a[0]),r[1]=Math.max(r[1],a[1])}}}),this),r&&isFinite(r[1]-r[0])){var i=l["A"].createScale(r,{type:"value",min:"dataMin",max:"dataMax"});this.altitudeAxis=new l["a"]("altitude",i),this.resize(this.model,t)}}var Hh=0,Vh={dimensions:Uh.prototype.dimensions,create:function(e,t){var r=[];if(!l["y"])throw new Error("geo3D component depends on geo component");function i(e,i){var n=Vh.createGeo3D(e);e.__viewGL=e.__viewGL||new fu,n.viewGL=e.__viewGL,e.coordinateSystem=n,n.model=e,r.push(n),n.resize=Gh,n.resize(e,t),n.update=kh}return e.eachComponent("geo3D",(function(e,t){i(e,t)})),e.eachSeriesByType("map3D",(function(e,t){var r=e.get("coordinateSystem");null==r&&(r="geo3D"),"geo3D"===r&&i(e,t)})),e.eachSeries((function(t){if("geo3D"===t.get("coordinateSystem")){if("series.map3D"===t.type)return;var r=t.getReferringComponents("geo3D").models[0];if(r||(r=e.getComponent("geo3D")),!r)throw new Error('geo "'+Un.firstNotNull(t.get("geo3DIndex"),t.get("geo3DId"),0)+'" not found');t.coordinateSystem=r.coordinateSystem}})),r},createGeo3D:function(e){var t,r=e.get("map");return"string"===typeof r?(t=r,r=l["y"](r)):r&&r.features&&(r={geoJson:r}),null==t&&(t="GEO_ANONYMOUS_"+Hh++),new Uh(t+Hh++,t,r&&r.geoJson,r&&r.specialAreas,e.get("nameMap"))}},Wh=Vh;function jh(e){e.registerComponentModel(Ru),e.registerComponentView(Oh),e.registerAction({type:"geo3DChangeCamera",event:"geo3dcamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"geo3D",query:e},(function(t){t.setView(e)}))})),e.registerCoordinateSystem("geo3D",Wh)}function Xh(e,t){e.id=e.id||e.name||t+""}Object(l["X"])(jh);var qh=l["c"].extend({type:"globe",layoutMode:"box",coordinateSystem:null,init:function(){qh.superApply(this,"init",arguments),l["Y"].each(this.option.layers,(function(e,t){l["Y"].merge(e,this.defaultLayerOption),Xh(e,t)}),this)},mergeOption:function(e){var t=this.option.layers;function r(e){return l["Y"].reduce(e,(function(e,t,r){return Xh(t,r),e[t.id]=t,e}),{})}if(this.option.layers=null,qh.superApply(this,"mergeOption",arguments),t&&t.length){var i=r(e.layers),n=r(t);for(var a in i)n[a]?l["Y"].merge(n[a],i[a],!0):t.push(e.layers[a]);this.option.layers=t}l["Y"].each(this.option.layers,(function(e){l["Y"].merge(e,this.defaultLayerOption)}),this)},optionUpdated:function(){this.updateDisplacementHash()},defaultLayerOption:{show:!0,type:"overlay"},defaultOption:{show:!0,zlevel:-10,left:0,top:0,width:"100%",height:"100%",environment:"auto",baseColor:"#fff",baseTexture:"",heightTexture:"",displacementTexture:"",displacementScale:0,displacementQuality:"medium",globeRadius:100,globeOuterRadius:150,shading:"lambert",light:{main:{time:""}},atmosphere:{show:!1,offset:5,color:"#ffffff",glowPower:6,innerGlowPower:2},viewControl:{autoRotate:!0,panSensitivity:0,targetCoord:null},layers:[]},setDisplacementData:function(e,t,r){this.displacementData=e,this.displacementWidth=t,this.displacementHeight=r},getDisplacementTexture:function(){return this.get("displacementTexture")||this.get("heightTexture")},getDisplacemenScale:function(){var e=this.getDisplacementTexture(),t=this.get("displacementScale");return e&&"none"!==e||(t=0),t},hasDisplacement:function(){return this.getDisplacemenScale()>0},_displacementChanged:!0,_displacementScale:0,updateDisplacementHash:function(){var e=this.getDisplacementTexture(),t=this.getDisplacemenScale();this._displacementChanged=this._displacementTexture!==e||this._displacementScale!==t,this._displacementTexture=e,this._displacementScale=t},isDisplacementChanged:function(){return this._displacementChanged}});l["Y"].merge(qh.prototype,Vo),l["Y"].merge(qh.prototype,Wo),l["Y"].merge(qh.prototype,jo),l["Y"].merge(qh.prototype,Lu);var Yh=qh,Zh=Math.PI,Kh=Math.sin,Qh=Math.cos,Jh=Math.tan,$h=Math.asin,ec=Math.atan2,tc=Zh/180,rc=864e5,ic=2440588,nc=2451545;function ac(e){return e.valueOf()/rc-.5+ic}function oc(e){return ac(e)-nc}var sc=23.4397*tc;function lc(e,t){return ec(Kh(e)*Qh(sc)-Jh(t)*Kh(sc),Qh(e))}function uc(e,t){return $h(Kh(t)*Qh(sc)+Qh(t)*Kh(sc)*Kh(e))}function hc(e,t,r){return ec(Kh(e),Qh(e)*Kh(t)-Jh(r)*Qh(t))}function cc(e,t,r){return $h(Kh(t)*Kh(r)+Qh(t)*Qh(r)*Qh(e))}function dc(e,t){return tc*(280.16+360.9856235*e)-t}function fc(e){return tc*(357.5291+.98560028*e)}function pc(e){var t=tc*(1.9148*Kh(e)+.02*Kh(2*e)+3e-4*Kh(3*e)),r=102.9372*tc;return e+t+r+Zh}function mc(e){var t=fc(e),r=pc(t);return{dec:uc(r,0),ra:lc(r,0)}}var gc={getPosition:function(e,t,r){var i=tc*-r,n=tc*t,a=oc(e),o=mc(a),s=dc(a,i)-o.ra;return{azimuth:hc(s,n,o.dec),altitude:cc(s,n,o.dec)}}},_c=gc,vc="@export ecgl.atmosphere.vertex\nattribute vec3 position: POSITION;\nattribute vec3 normal : NORMAL;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 normalMatrix : WORLDINVERSETRANSPOSE;\n\nvarying vec3 v_Normal;\n\nvoid main() {\n v_Normal = normalize((normalMatrix * vec4(normal, 0.0)).xyz);\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end\n\n\n@export ecgl.atmosphere.fragment\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\nuniform float glowPower;\nuniform vec3 glowColor;\n\nvarying vec3 v_Normal;\n\nvoid main() {\n float intensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\n gl_FragColor = vec4(glowColor, intensity * intensity);\n}\n@end";Ao.Shader["import"](uo),Ao.Shader["import"](vc);var yc=l["d"].extend({type:"globe",__ecgl__:!0,_displacementScale:0,init:function(e,t){this.groupGL=new Ao.Node,this._sphereGeometry=new Ao.SphereGeometry({widthSegments:200,heightSegments:100,dynamic:!0}),this._overlayGeometry=new Ao.SphereGeometry({widthSegments:80,heightSegments:40}),this._planeGeometry=new Ao.PlaneGeometry,this._earthMesh=new Ao.Mesh({renderNormal:!0}),this._atmosphereMesh=new Ao.Mesh,this._atmosphereGeometry=new Ao.SphereGeometry({widthSegments:80,heightSegments:40}),this._atmosphereMaterial=new Ao.Material({shader:new Ao.Shader(Ao.Shader.source("ecgl.atmosphere.vertex"),Ao.Shader.source("ecgl.atmosphere.fragment")),transparent:!0}),this._atmosphereMesh.geometry=this._atmosphereGeometry,this._atmosphereMesh.material=this._atmosphereMaterial,this._atmosphereMesh.frontFace=Ao.Mesh.CW,this._lightRoot=new Ao.Node,this._sceneHelper=new cs,this._sceneHelper.initLight(this._lightRoot),this.groupGL.add(this._atmosphereMesh),this.groupGL.add(this._earthMesh),this._control=new $o({zr:t.getZr()}),this._control.init(),this._layerMeshes={}},render:function(e,t,r){var i=e.coordinateSystem,n=e.get("shading");i.viewGL.add(this._lightRoot),e.get("show")?i.viewGL.add(this.groupGL):i.viewGL.remove(this.groupGL),this._sceneHelper.setScene(i.viewGL.scene),i.viewGL.setPostEffect(e.getModel("postEffect"),r),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling"));var a=this._earthMesh;a.geometry=this._sphereGeometry;var o="ecgl."+n;a.material&&a.material.shader.name===o||(a.material=Ao.createMaterial(o)),Ao.setMaterialFromModel(n,a.material,e,r),["roughnessMap","metalnessMap","detailMap","normalMap"].forEach((function(e){var t=a.material.get(e);t&&(t.flipY=!1)})),a.material.set("color",Ao.parseColor(e.get("baseColor")));var s=.99*i.radius;if(a.scale.set(s,s,s),e.get("atmosphere.show")){a.material.define("both","ATMOSPHERE_ENABLED"),this._atmosphereMesh.invisible=!1,this._atmosphereMaterial.setUniforms({glowPower:e.get("atmosphere.glowPower")||6,glowColor:e.get("atmosphere.color")||"#ffffff"}),a.material.setUniforms({glowPower:e.get("atmosphere.innerGlowPower")||2,glowColor:e.get("atmosphere.color")||"#ffffff"});var l=e.get("atmosphere.offset")||5;this._atmosphereMesh.scale.set(s+l,s+l,s+l)}else a.material.undefine("both","ATMOSPHERE_ENABLED"),this._atmosphereMesh.invisible=!0;var u=a.material.setTextureImage("diffuseMap",e.get("baseTexture"),r,{flipY:!1,anisotropic:8});u&&u.surface&&u.surface.attachToMesh(a);var h=a.material.setTextureImage("bumpMap",e.get("heightTexture"),r,{flipY:!1,anisotropic:8});h&&h.surface&&h.surface.attachToMesh(a),a.material[e.get("postEffect.enable")?"define":"undefine"]("fragment","SRGB_DECODE"),this._updateLight(e,r),this._displaceVertices(e,r),this._updateViewControl(e,r),this._updateLayers(e,r)},afterRender:function(e,t,r,i){var n=i.renderer;this._sceneHelper.updateAmbientCubemap(n,e,r),this._sceneHelper.updateSkybox(n,e,r)},_updateLayers:function(e,t){var r=e.coordinateSystem,i=e.get("layers"),n=r.radius,a=[],o=[],s=[],u=[];l["Y"].each(i,(function(e){var i=new l["f"](e),h=i.get("type"),c=Ao.loadTexture(i.get("texture"),t,{flipY:!1,anisotropic:8});if(c.surface&&c.surface.attachToMesh(this._earthMesh),"blend"===h){var d=i.get("blendTo"),f=Un.firstNotNull(i.get("intensity"),1);"emission"===d?(s.push(c),u.push(f)):(a.push(c),o.push(f))}else{var p=i.get("id"),m=this._layerMeshes[p];m||(m=this._layerMeshes[p]=new Ao.Mesh({geometry:this._overlayGeometry,castShadow:!1,ignorePicking:!0}));var g=i.get("shading");"lambert"===g?(m.material=m.__lambertMaterial||new Ao.Material({autoUpdateTextureStatus:!1,shader:Ao.createShader("ecgl.lambert"),transparent:!0,depthMask:!1}),m.__lambertMaterial=m.material):(m.material=m.__colorMaterial||new Ao.Material({autoUpdateTextureStatus:!1,shader:Ao.createShader("ecgl.color"),transparent:!0,depthMask:!1}),m.__colorMaterial=m.material),m.material.enableTexture("diffuseMap");var _=i.get("distance"),v=n+(null==_?r.radius/100:_);m.scale.set(v,v,v),n=v;var y=this._blankTexture||(this._blankTexture=Ao.createBlankTexture("rgba(255, 255, 255, 0)"));m.material.set("diffuseMap",y),Ao.loadTexture(i.get("texture"),t,{flipY:!1,anisotropic:8},(function(e){e.surface&&e.surface.attachToMesh(m),m.material.set("diffuseMap",e),t.getZr().refresh()})),i.get("show")?this.groupGL.add(m):this.groupGL.remove(m)}}),this);var h=this._earthMesh.material;h.define("fragment","LAYER_DIFFUSEMAP_COUNT",a.length),h.define("fragment","LAYER_EMISSIVEMAP_COUNT",s.length),h.set("layerDiffuseMap",a),h.set("layerDiffuseIntensity",o),h.set("layerEmissiveMap",s),h.set("layerEmissionIntensity",u);var c=e.getModel("debug.wireframe");if(c.get("show")){h.define("both","WIREFRAME_TRIANGLE");var d=Ao.parseColor(c.get("lineStyle.color")||"rgba(0,0,0,0.5)"),f=Un.firstNotNull(c.get("lineStyle.width"),1);h.set("wireframeLineWidth",f),h.set("wireframeLineColor",d)}else h.undefine("both","WIREFRAME_TRIANGLE")},_updateViewControl:function(e,t){var r=e.coordinateSystem,i=e.getModel("viewControl"),n=(r.viewGL.camera,this);function a(){return{type:"globeChangeCamera",alpha:o.getAlpha(),beta:o.getBeta(),distance:o.getDistance()-r.radius,center:o.getCenter(),from:n.uid,globeId:e.id}}var o=this._control;o.setViewGL(r.viewGL);var s,l,u=i.get("targetCoord");null!=u&&(l=u[0]+90,s=u[1]),o.setFromViewControlModel(i,{baseDistance:r.radius,alpha:s,beta:l}),o.off("update"),o.on("update",(function(){t.dispatchAction(a())}))},_displaceVertices:function(e,t){var r=e.get("displacementQuality"),i=e.get("debug.wireframe.show"),n=e.coordinateSystem;if(e.isDisplacementChanged()||r!==this._displacementQuality||i!==this._showDebugWireframe){this._displacementQuality=r,this._showDebugWireframe=i;var a=this._sphereGeometry,o={low:100,medium:200,high:400,ultra:800}[r]||200,s=o/2;(a.widthSegments!==o||i)&&(a.widthSegments=o,a.heightSegments=s,a.build()),this._doDisplaceVertices(a,n),i&&a.generateBarycentric()}},_doDisplaceVertices:function(e,t){var r=e.attributes.position.value,i=e.attributes.texcoord0.value,n=e.__originalPosition;n&&n.length===r.length||(n=new Float32Array(r.length),n.set(r),e.__originalPosition=n);for(var a=t.displacementWidth,o=t.displacementHeight,s=t.displacementData,l=0;l<e.vertexCount;l++){var u=3*l,h=2*l,c=n[u+1],d=n[u+2],f=n[u+3],p=i[h++],m=i[h++],g=Math.round(p*(a-1)),_=Math.round(m*(o-1)),v=_*a+g,y=s?s[v]:0;r[u+1]=c+c*y,r[u+2]=d+d*y,r[u+3]=f+f*y}e.generateVertexNormals(),e.dirty(),e.updateBoundingBox()},_updateLight:function(e,t){var r=this._earthMesh;this._sceneHelper.updateLight(e);var i=this._sceneHelper.mainLight,n=e.get("light.main.time")||new Date,a=_c.getPosition(l["E"].parseDate(n),0,0),o=Math.cos(a.altitude);i.position.y=-o*Math.cos(a.azimuth),i.position.x=Math.sin(a.altitude),i.position.z=o*Math.sin(a.azimuth),i.lookAt(r.getWorldPosition())},dispose:function(e,t){this.groupGL.removeAll(),this._control.dispose()}}),xc=rs.vec3;function Tc(e){this.radius=e,this.viewGL=null,this.altitudeAxis,this.displacementData=null,this.displacementWidth,this.displacementHeight}Tc.prototype={constructor:Tc,dimensions:["lng","lat","alt"],type:"globe",containPoint:function(){},setDisplacementData:function(e,t,r){this.displacementData=e,this.displacementWidth=t,this.displacementHeight=r},_getDisplacementScale:function(e,t){var r=(e+180)/360*(this.displacementWidth-1),i=(90-t)/180*(this.displacementHeight-1),n=Math.round(r)+Math.round(i)*this.displacementWidth;return this.displacementData[n]},dataToPoint:function(e,t){var r=e[0],i=e[1],n=e[2]||0,a=this.radius;this.displacementData&&(a*=1+this._getDisplacementScale(r,i)),this.altitudeAxis&&(a+=this.altitudeAxis.dataToCoord(n)),r=r*Math.PI/180,i=i*Math.PI/180;var o=Math.cos(i)*a;return t=t||[],t[0]=-o*Math.cos(r+Math.PI),t[1]=Math.sin(i)*a,t[2]=o*Math.sin(r+Math.PI),t},pointToData:function(e,t){var r=e[0],i=e[1],n=e[2],a=xc.len(e);r/=a,i/=a,n/=a;var o=Math.asin(i),s=Math.atan2(n,-r);s<0&&(s=2*Math.PI+s);var l=180*o/Math.PI,u=180*s/Math.PI-180;return t=t||[],t[0]=u,t[1]=l,t[2]=a-this.radius,this.altitudeAxis&&(t[2]=this.altitudeAxis.coordToData(t[2])),t}};var bc=Tc;function wc(e,t){var r=document.createElement("canvas"),i=r.getContext("2d"),n=e.width,a=e.height;r.width=n,r.height=a,i.drawImage(e,0,0,n,a);for(var o=i.getImageData(0,0,n,a).data,s=new Float32Array(o.length/4),l=0;l<o.length/4;l++){var u=o[4*l];s[l]=u/255*t}return{data:s,width:n,height:a}}function Ec(e,t){var r=e.getBoxLayoutParams(),i=Object(Us["g"])(r,{width:t.getWidth(),height:t.getHeight()});i.y=t.getHeight()-i.y-i.height,this.viewGL.setViewport(i.x,i.y,i.width,i.height,t.getDevicePixelRatio()),this.radius=e.get("globeRadius");var n=e.get("globeOuterRadius");this.altitudeAxis&&this.altitudeAxis.setExtent(0,n-this.radius)}function Sc(e,t){var r=[1/0,-1/0];if(e.eachSeries((function(e){if(e.coordinateSystem===this){var t=e.getData(),i=e.coordDimToDataDim("alt"),n=i&&i[0];if(n){var a=t.getDataExtent(n,!0);r[0]=Math.min(r[0],a[0]),r[1]=Math.max(r[1],a[1])}}}),this),r&&isFinite(r[1]-r[0])){var i=l["A"].createScale(r,{type:"value",min:"dataMin",max:"dataMax"});this.altitudeAxis=new l["a"]("altitude",i),this.resize(this.model,t)}}var Mc={dimensions:bc.prototype.dimensions,create:function(e,t){var r=[];return e.eachComponent("globe",(function(e){e.__viewGL=e.__viewGL||new fu;var i=new bc;i.viewGL=e.__viewGL,e.coordinateSystem=i,i.model=e,r.push(i),i.resize=Ec,i.resize(e,t),i.update=Sc})),e.eachSeries((function(t){if("globe"===t.get("coordinateSystem")){var r=t.getReferringComponents("globe").models[0];if(r||(r=e.getComponent("globe")),!r)throw new Error('globe "'+Un.firstNotNull(t.get("globe3DIndex"),t.get("globe3DId"),0)+'" not found');var i=r.coordinateSystem;t.coordinateSystem=i}})),e.eachComponent("globe",(function(e,r){var i=e.coordinateSystem,n=e.getDisplacementTexture(),a=e.getDisplacemenScale();if(e.isDisplacementChanged()){if(e.hasDisplacement()){var o=!0;Ao.loadTexture(n,t,(function(r){var i=r.image,n=wc(i,a);e.setDisplacementData(n.data,n.width,n.height),o||t.dispatchAction({type:"globeUpdateDisplacment"})})),o=!1}else i.setDisplacementData(null,0,0);i.setDisplacementData(e.displacementData,e.displacementWidth,e.displacementHeight)}})),r}},Ac=Mc;function Nc(e){e.registerComponentModel(Yh),e.registerComponentView(yc),e.registerCoordinateSystem("globe",Ac),e.registerAction({type:"globeChangeCamera",event:"globecamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"globe",query:e},(function(t){t.setView(e)}))})),e.registerAction({type:"globeUpdateDisplacment",event:"globedisplacementupdated",update:"update"},(function(e,t){}))}Object(l["X"])(Nc);var Cc=["zoom","center","pitch","bearing"],Pc=l["c"].extend({type:"mapbox3D",layoutMode:"box",coordinateSystem:null,defaultOption:{zlevel:-10,style:"mapbox://styles/mapbox/light-v9",center:[0,0],zoom:0,pitch:0,bearing:0,light:{main:{alpha:20,beta:30}},altitudeScale:1,boxHeight:"auto"},getMapboxCameraOption:function(){var e=this;return Cc.reduce((function(t,r){return t[r]=e.get(r),t}),{})},setMapboxCameraOption:function(e){null!=e&&Cc.forEach((function(t){null!=e[t]&&(this.option[t]=e[t])}),this)},getMapbox:function(){return this._mapbox},setMapbox:function(e){this._mapbox=e}});l["Y"].merge(Pc.prototype,Wo),l["Y"].merge(Pc.prototype,jo);var Lc=Pc;function Oc(e,t){if(this.id=e,this.zr=t,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute;left:0;right:0;top:0;bottom:0;",!mapboxgl)throw new Error("Mapbox GL library must be included. See https://www.mapbox.com/mapbox-gl-js/api/");this._mapbox=new mapboxgl.Map({container:this.dom}),this._initEvents()}Oc.prototype.resize=function(){this._mapbox.resize()},Oc.prototype.getMapbox=function(){return this._mapbox},Oc.prototype.clear=function(){},Oc.prototype.refresh=function(){this._mapbox.resize()};var Dc=["mousedown","mouseup","click","dblclick","mousemove","mousewheel","wheel","touchstart","touchend","touchmove","touchcancel"];Oc.prototype._initEvents=function(){var e=this._mapbox.getCanvasContainer();this._handlers=this._handlers||{contextmenu:function(e){return e.preventDefault(),!1}},Dc.forEach((function(t){this._handlers[t]=function(t){var r={};for(var i in t)r[i]=t[i];r.bubbles=!1;var n=new t.constructor(t.type,r);e.dispatchEvent(n)},this.zr.dom.addEventListener(t,this._handlers[t])}),this),this.zr.dom.addEventListener("contextmenu",this._handlers.contextmenu)},Oc.prototype.dispose=function(){Dc.forEach((function(e){this.zr.dom.removeEventListener(e,this._handlers[e])}),this)};var Rc=Oc,Ic="\n@export ecgl.displayShadow.vertex\n\n@import ecgl.common.transformUniforms\n\n@import ecgl.common.uv.header\n\n@import ecgl.common.attributes\n\nvarying vec3 v_WorldPosition;\n\nvarying vec3 v_Normal;\n\nvoid main()\n{\n @import ecgl.common.uv.main\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\n\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end\n\n\n@export ecgl.displayShadow.fragment\n\n@import ecgl.common.uv.fragmentHeader\n\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform float roughness: 0.2;\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n@import ecgl.common.ssaoMap.header\n\n@import clay.plugin.compute_shadow_map\n\nvoid main()\n{\n float shadow = 1.0;\n\n @import ecgl.common.ssaoMap.main\n\n#if defined(DIRECTIONAL_LIGHT_COUNT) && defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n for (int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++) {\n shadow = min(shadow, shadowContribsDir[i] * 0.5 + 0.5);\n }\n#endif\n\n shadow *= 0.5 + ao * 0.5;\n shadow = clamp(shadow, 0.0, 1.0);\n\n gl_FragColor = vec4(vec3(0.0), 1.0 - shadow);\n}\n\n@end";Ao.Shader.import(Ic);var Fc=l["d"].extend({type:"mapbox3D",__ecgl__:!0,init:function(e,t){var r=t.getZr();this._zrLayer=new Rc("mapbox3D",r),r.painter.insertLayer(-1e3,this._zrLayer),this._lightRoot=new Ao.Node,this._sceneHelper=new cs(this._lightRoot),this._sceneHelper.initLight(this._lightRoot);var i=this._zrLayer.getMapbox(),n=this._dispatchInteractAction.bind(this,t,i);["zoom","rotate","drag","pitch","rotate","move"].forEach((function(e){i.on(e,n)})),this._groundMesh=new Ao.Mesh({geometry:new Ao.PlaneGeometry,material:new Ao.Material({shader:new Ao.Shader({vertex:Ao.Shader.source("ecgl.displayShadow.vertex"),fragment:Ao.Shader.source("ecgl.displayShadow.fragment")}),depthMask:!1}),renderOrder:-100,culling:!1,castShadow:!1,$ignorePicking:!0,renderNormal:!0})},render:function(e,t,r){var i=this._zrLayer.getMapbox(),n=e.get("style"),a=JSON.stringify(n);a!==this._oldStyleStr&&n&&i.setStyle(n),this._oldStyleStr=a,i.setCenter(e.get("center")),i.setZoom(e.get("zoom")),i.setPitch(e.get("pitch")),i.setBearing(e.get("bearing")),e.setMapbox(i);var o=e.coordinateSystem;o.viewGL.scene.add(this._lightRoot),o.viewGL.add(this._groundMesh),this._updateGroundMesh(),this._sceneHelper.setScene(o.viewGL.scene),this._sceneHelper.updateLight(e),o.viewGL.setPostEffect(e.getModel("postEffect"),r),o.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._mapbox3DModel=e},afterRender:function(e,t,r,i){var n=i.renderer;this._sceneHelper.updateAmbientCubemap(n,e,r),this._sceneHelper.updateSkybox(n,e,r),e.coordinateSystem.viewGL.scene.traverse((function(e){e.material&&(e.material.define("fragment","NORMAL_UP_AXIS",2),e.material.define("fragment","NORMAL_FRONT_AXIS",1))}))},updateCamera:function(e,t,r,i){e.coordinateSystem.setCameraOption(i),this._updateGroundMesh(),r.getZr().refresh()},_dispatchInteractAction:function(e,t,r){e.dispatchAction({type:"mapbox3DChangeCamera",pitch:t.getPitch(),zoom:t.getZoom(),center:t.getCenter().toArray(),bearing:t.getBearing(),mapbox3DId:this._mapbox3DModel&&this._mapbox3DModel.id})},_updateGroundMesh:function(){if(this._mapbox3DModel){var e=this._mapbox3DModel.coordinateSystem,t=e.dataToPoint(e.center);this._groundMesh.position.set(t[0],t[1],-.001);var r=new Ao.Plane(new Ao.Vector3(0,0,1),0),i=e.viewGL.camera.castRay(new Ao.Vector2(-1,-1)),n=e.viewGL.camera.castRay(new Ao.Vector2(1,1)),a=i.intersectPlane(r),o=n.intersectPlane(r),s=a.dist(o)/e.viewGL.rootNode.scale.x;this._groundMesh.scale.set(s,s,1)}},dispose:function(e,t){this._zrLayer&&this._zrLayer.dispose(),t.getZr().painter.delLayer(-1e3)}}),Bc=rs.mat4,zc=512,Uc=.6435011087932844,Gc=Math.PI,kc=.1;function Hc(){this.width=0,this.height=0,this.altitudeScale=1,this.boxHeight="auto",this.altitudeExtent,this.bearing=0,this.pitch=0,this.center=[0,0],this._origin,this.zoom=0,this._initialZoom,this.maxPitch=60,this.zoomOffset=0}Hc.prototype={constructor:Hc,dimensions:["lng","lat","alt"],containPoint:function(){},setCameraOption:function(e){this.bearing=e.bearing,this.pitch=e.pitch,this.center=e.center,this.zoom=e.zoom,this._origin||(this._origin=this.projectOnTileWithScale(this.center,zc)),null==this._initialZoom&&(this._initialZoom=this.zoom),this.updateTransform()},updateTransform:function(){if(this.height){var e=.5/Math.tan(Uc/2)*this.height*kc,t=Math.max(Math.min(this.pitch,this.maxPitch),0)/180*Math.PI,r=Uc/2,i=Math.PI/2+t,n=Math.sin(r)*e/Math.sin(Math.PI-i-r),a=Math.cos(Math.PI/2-t)*n+e,o=1.1*a;this.pitch>50&&(o=1e3);var s=[];Bc.perspective(s,Uc,this.width/this.height,1,o),this.viewGL.camera.projectionMatrix.setArray(s),this.viewGL.camera.decomposeProjectionMatrix();s=Bc.identity([]);var l=this.dataToPoint(this.center);Bc.scale(s,s,[1,-1,1]),Bc.translate(s,s,[0,0,-e]),Bc.rotateX(s,s,t),Bc.rotateZ(s,s,-this.bearing/180*Math.PI),Bc.translate(s,s,[-l[0]*this.getScale()*kc,-l[1]*this.getScale()*kc,0]),this.viewGL.camera.viewMatrix.array=s;var u=[];Bc.invert(u,s),this.viewGL.camera.worldTransform.array=u,this.viewGL.camera.decomposeWorldTransform();var h,c=zc*this.getScale();if(this.altitudeExtent&&!isNaN(this.boxHeight)){var d=this.altitudeExtent[1]-this.altitudeExtent[0];h=this.boxHeight/d*this.getScale()/Math.pow(2,this._initialZoom-this.zoomOffset)}else h=c/(2*Math.PI*6378e3*Math.abs(Math.cos(this.center[1]*(Math.PI/180))))*this.altitudeScale*kc;this.viewGL.rootNode.scale.set(this.getScale()*kc,this.getScale()*kc,h)}},getScale:function(){return Math.pow(2,this.zoom-this.zoomOffset)},projectOnTile:function(e,t){return this.projectOnTileWithScale(e,this.getScale()*zc,t)},projectOnTileWithScale:function(e,t,r){var i=e[0],n=e[1],a=i*Gc/180,o=n*Gc/180,s=t*(a+Gc)/(2*Gc),l=t*(Gc-Math.log(Math.tan(Gc/4+.5*o)))/(2*Gc);return r=r||[],r[0]=s,r[1]=l,r},unprojectFromTile:function(e,t){return this.unprojectOnTileWithScale(e,this.getScale()*zc,t)},unprojectOnTileWithScale:function(e,t,r){var i=e[0],n=e[1],a=i/t*(2*Gc)-Gc,o=2*(Math.atan(Math.exp(Gc-n/t*(2*Gc)))-Gc/4);return r=r||[],r[0]=180*a/Gc,r[1]=180*o/Gc,r},dataToPoint:function(e,t){return t=this.projectOnTileWithScale(e,zc,t),t[0]-=this._origin[0],t[1]-=this._origin[1],t[2]=isNaN(e[2])?0:e[2],isNaN(e[2])||(t[2]=e[2],this.altitudeExtent&&(t[2]-=this.altitudeExtent[0])),t}};var Vc=Hc;function Wc(){Vc.apply(this,arguments)}Wc.prototype=new Vc,Wc.prototype.constructor=Wc,Wc.prototype.type="mapbox3D";var jc=Wc,Xc=function(e,t,r){function i(e,t){var r=t.getWidth(),i=t.getHeight(),n=t.getDevicePixelRatio();this.viewGL.setViewport(0,0,r,i,n),this.width=r,this.height=i,this.altitudeScale=e.get("altitudeScale"),this.boxHeight=e.get("boxHeight")}function n(e,t){if("auto"!==this.model.get("boxHeight")){var r=[1/0,-1/0];e.eachSeries((function(e){if(e.coordinateSystem===this){var t=e.getData(),i=e.coordDimToDataDim("alt")[0];if(i){var n=t.getDataExtent(i,!0);r[0]=Math.min(r[0],n[0]),r[1]=Math.max(r[1],n[1])}}}),this),r&&isFinite(r[1]-r[0])&&(this.altitudeExtent=r)}}return{dimensions:t.prototype.dimensions,create:function(a,o){var s=[];return a.eachComponent(e,(function(e){var r=e.__viewGL;r||(r=e.__viewGL=new fu,r.setRootNode(new Ao.Node));var a=new t;a.viewGL=e.__viewGL,a.resize=i,a.resize(e,o),s.push(a),e.coordinateSystem=a,a.model=e,a.update=n})),a.eachSeries((function(t){if(t.get("coordinateSystem")===e){var r=t.getReferringComponents(e).models[0];if(r||(r=a.getComponent(e)),!r)throw new Error(e+' "'+Un.firstNotNull(t.get(e+"Index"),t.get(e+"Id"),0)+'" not found');t.coordinateSystem=r.coordinateSystem}})),r&&r(s,a,o),s}}},qc=Xc("mapbox3D",jc,(function(e){e.forEach((function(e){e.setCameraOption(e.model.getMapboxCameraOption())}))})),Yc=qc;function Zc(e){e.registerComponentModel(Lc),e.registerComponentView(Fc),e.registerCoordinateSystem("mapbox3D",Yc),e.registerAction({type:"mapbox3DChangeCamera",event:"mapbox3dcamerachanged",update:"mapbox3D:updateCamera"},(function(e,t){t.eachComponent({mainType:"mapbox3D",query:e},(function(t){t.setMapboxCameraOption(e)}))}))}Object(l["X"])(Zc);var Kc=["zoom","center","pitch","bearing"],Qc=l["c"].extend({type:"maptalks3D",layoutMode:"box",coordinateSystem:null,defaultOption:{zlevel:-10,urlTemplate:"http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",attribution:'&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>',center:[0,0],zoom:0,pitch:0,bearing:0,light:{main:{alpha:20,beta:30}},altitudeScale:1,boxHeight:"auto"},getMaptalksCameraOption:function(){var e=this;return Kc.reduce((function(t,r){return t[r]=e.get(r),t}),{})},setMaptalksCameraOption:function(e){null!=e&&Kc.forEach((function(t){null!=e[t]&&(this.option[t]=e[t])}),this)},getMaptalks:function(){return this._maptalks},setMaptalks:function(e){this._maptalks=e}});l["Y"].merge(Qc.prototype,Wo),l["Y"].merge(Qc.prototype,jo);var Jc=Qc;function $c(e,t,r,i){if(this.id=e,this.zr=t,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute;left:0;right:0;top:0;bottom:0;",!maptalks)throw new Error("Maptalks library must be included. See https://maptalks.org");this._maptalks=new maptalks.Map(this.dom,{center:r,zoom:i,doubleClickZoom:!1,fog:!1}),this._initEvents()}$c.prototype.resize=function(){this._maptalks.checkSize()},$c.prototype.getMaptalks=function(){return this._maptalks},$c.prototype.clear=function(){},$c.prototype.refresh=function(){this._maptalks.checkSize()};var ed=["mousedown","mouseup","click","dblclick","mousemove","mousewheel","DOMMouseScroll","touchstart","touchend","touchmove","touchcancel"];$c.prototype._initEvents=function(){var e=this.dom;this._handlers=this._handlers||{contextmenu:function(e){return e.preventDefault(),!1}},ed.forEach((function(t){this._handlers[t]=function(r){var i={};for(var n in r)i[n]=r[n];i.bubbles=!1;var a=new r.constructor(r.type,i);"mousewheel"===t||"DOMMouseScroll"===t?e.dispatchEvent(a):e.firstElementChild.dispatchEvent(a)},this.zr.dom.addEventListener(t,this._handlers[t])}),this),this.zr.dom.addEventListener("contextmenu",this._handlers.contextmenu)},$c.prototype.dispose=function(){ed.forEach((function(e){this.zr.dom.removeEventListener(e,this._handlers[e])}),this),this._maptalks.remove()};var td=$c;Ao.Shader.import(Ic);var rd=l["d"].extend({type:"maptalks3D",__ecgl__:!0,init:function(e,t){this._groundMesh=new Ao.Mesh({geometry:new Ao.PlaneGeometry,material:new Ao.Material({shader:new Ao.Shader({vertex:Ao.Shader.source("ecgl.displayShadow.vertex"),fragment:Ao.Shader.source("ecgl.displayShadow.fragment")}),depthMask:!1}),renderOrder:-100,culling:!1,castShadow:!1,$ignorePicking:!0,renderNormal:!0})},_initMaptalksLayer:function(e,t){var r=t.getZr();this._zrLayer=new td("maptalks3D",r,e.get("center"),e.get("zoom")),r.painter.insertLayer(-1e3,this._zrLayer),this._lightRoot=new Ao.Node,this._sceneHelper=new cs(this._lightRoot),this._sceneHelper.initLight(this._lightRoot);var i=this._zrLayer.getMaptalks(),n=this._dispatchInteractAction.bind(this,t,i);["zoomend","zooming","zoomstart","dragrotating","pitch","pitchend","movestart","moving","moveend","resize","touchstart","touchmove","touchend","animating"].forEach((function(e){i.on(e,n)}))},render:function(e,t,r){this._zrLayer||this._initMaptalksLayer(e,r);var i=this._zrLayer.getMaptalks(),n=e.get("urlTemplate"),a=i.getBaseLayer();n!==this._oldUrlTemplate&&(a?a.setOptions({urlTemplate:n,attribution:e.get("attribution")}):(a=new maptalks.TileLayer("maptalks-echarts-gl-baselayer",{urlTemplate:n,subdomains:["a","b","c"],attribution:e.get("attribution")}),i.setBaseLayer(a))),this._oldUrlTemplate=n,i.setCenter(e.get("center")),i.setZoom(e.get("zoom"),{animation:!1}),i.setPitch(e.get("pitch")),i.setBearing(e.get("bearing")),e.setMaptalks(i);var o=e.coordinateSystem;o.viewGL.scene.add(this._lightRoot),o.viewGL.add(this._groundMesh),this._updateGroundMesh(),this._sceneHelper.setScene(o.viewGL.scene),this._sceneHelper.updateLight(e),o.viewGL.setPostEffect(e.getModel("postEffect"),r),o.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._maptalks3DModel=e},afterRender:function(e,t,r,i){var n=i.renderer;this._sceneHelper.updateAmbientCubemap(n,e,r),this._sceneHelper.updateSkybox(n,e,r),e.coordinateSystem.viewGL.scene.traverse((function(e){e.material&&(e.material.define("fragment","NORMAL_UP_AXIS",2),e.material.define("fragment","NORMAL_FRONT_AXIS",1))}))},updateCamera:function(e,t,r,i){e.coordinateSystem.setCameraOption(i),this._updateGroundMesh(),r.getZr().refresh()},_dispatchInteractAction:function(e,t,r){e.dispatchAction({type:"maptalks3DChangeCamera",pitch:t.getPitch(),zoom:nd(t.getResolution())+1,center:t.getCenter().toArray(),bearing:t.getBearing(),maptalks3DId:this._maptalks3DModel&&this._maptalks3DModel.id})},_updateGroundMesh:function(){if(this._maptalks3DModel){var e=this._maptalks3DModel.coordinateSystem,t=e.dataToPoint(e.center);this._groundMesh.position.set(t[0],t[1],-.001);var r=new Ao.Plane(new Ao.Vector3(0,0,1),0),i=e.viewGL.camera.castRay(new Ao.Vector2(-1,-1)),n=e.viewGL.camera.castRay(new Ao.Vector2(1,1)),a=i.intersectPlane(r),o=n.intersectPlane(r),s=a.dist(o)/e.viewGL.rootNode.scale.x;this._groundMesh.scale.set(s,s,1)}},dispose:function(e,t){this._zrLayer&&this._zrLayer.dispose(),t.getZr().painter.delLayer(-1e3)}});const id=12756274*Math.PI/(256*Math.pow(2,20));function nd(e){return 19-Math.log(e/id)/Math.LN2}function ad(){Vc.apply(this,arguments),this.maxPitch=85,this.zoomOffset=1}ad.prototype=new Vc,ad.prototype.constructor=ad,ad.prototype.type="maptalks3D";var od=ad,sd=Xc("maptalks3D",od,(function(e){e.forEach((function(e){e.setCameraOption(e.model.getMaptalksCameraOption())}))})),ld=sd;function ud(e){e.registerComponentModel(Jc),e.registerComponentView(rd),e.registerCoordinateSystem("maptalks3D",ld),e.registerAction({type:"maptalks3DChangeCamera",event:"maptalks3dcamerachanged",update:"maptalks3D:updateCamera"},(function(e,t){t.eachComponent({mainType:"maptalks3D",query:e},(function(t){t.setMaptalksCameraOption(e)}))}))}Object(l["X"])(ud);var hd=rs.vec3,cd=l["A"].dataStack.isDimensionStacked;function dd(e){var t=e[0],r=e[1];return!(t>0&&r>0||t<0&&r<0)}function fd(e,t){var r=e.getData(),i=e.get("barSize");if(null==i){var n,a,o=t.size,s=t.getAxis("x"),u=t.getAxis("y");n="category"===s.type?.7*s.getBandWidth():.6*Math.round(o[0]/Math.sqrt(r.count())),a="category"===u.type?.7*u.getBandWidth():.6*Math.round(o[1]/Math.sqrt(r.count())),i=[n,a]}else l["Y"].isArray(i)||(i=[i,i]);var h=t.getAxis("z").scale.getExtent(),c=dd(h),d=["x","y","z"].map((function(t){return e.coordDimToDataDim(t)[0]})),f=cd(r,d[2]),p=f?r.getCalculationInfo("stackResultDimension"):d[2];r.each(d,(function(e,n,a,o){var s=r.get(p,o),l=f?s-a:c?0:h[0],u=t.dataToPoint([e,n,l]),d=t.dataToPoint([e,n,s]),m=hd.dist(u,d),g=[0,d[1]<u[1]?-1:1,0];0===Math.abs(m)&&(m=.1);var _=[i[0],m,i[1]];r.setItemLayout(o,[u,g,_])})),r.setLayout("orient",[1,0,0])}var pd=fd,md=function(e,t,r){for(var i=e.getDataExtent(t),n=e.getDataExtent(r),a=i[1]-i[0]||i[0],o=n[1]-n[0]||n[0],s=50,l=new Uint8Array(s*s),u=0;u<e.count();u++){var h=e.get(t,u),c=e.get(r,u),d=Math.floor((h-i[0])/a*(s-1)),f=Math.floor((c-n[0])/o*(s-1)),p=f*s+d;l[p]=l[p]||1}var m=0;for(u=0;u<l.length;u++)l[u]&&m++;return m/l.length},gd=rs.vec3,_d=l["A"].dataStack.isDimensionStacked;function vd(e,t){var r=e.getData(),i=e.get("minHeight")||0,n=e.get("barSize"),a=["lng","lat","alt"].map((function(t){return e.coordDimToDataDim(t)[0]}));if(null==n){var o=t.radius*Math.PI,s=md(r,a[0],a[1]);n=[o/Math.sqrt(r.count()/s),o/Math.sqrt(r.count()/s)]}else l["Y"].isArray(n)||(n=[n,n]);var u=Td(r,a);r.each(a,(function(e,a,o,s){var l=r.get(u.dimension,s),h=u.isStacked?l-o:t.altitudeAxis.scale.getExtent()[0],c=Math.max(t.altitudeAxis.dataToCoord(o),i),d=t.dataToPoint([e,a,h]),f=t.dataToPoint([e,a,l]),p=gd.sub([],f,d);gd.normalize(p,p);var m=[n[0],c,n[1]];r.setItemLayout(s,[d,p,m])})),r.setLayout("orient",xt.UP.array)}function yd(e,t){var r=e.getData(),i=e.get("barSize"),n=e.get("minHeight")||0,a=["lng","lat","alt"].map((function(t){return e.coordDimToDataDim(t)[0]}));if(null==i){var o=Math.min(t.size[0],t.size[2]),s=md(r,a[0],a[1]);i=[o/Math.sqrt(r.count()/s),o/Math.sqrt(r.count()/s)]}else l["Y"].isArray(i)||(i=[i,i]);var u=[0,1,0],h=Td(r,a);r.each(a,(function(e,a,o,s){var l=r.get(h.dimension,s),c=h.isStacked?l-o:t.altitudeAxis.scale.getExtent()[0],d=Math.max(t.altitudeAxis.dataToCoord(o),n),f=t.dataToPoint([e,a,c]),p=[i[0],d,i[1]];r.setItemLayout(s,[f,u,p])})),r.setLayout("orient",[1,0,0])}function xd(e,t){var r=e.getData(),i=e.coordDimToDataDim("lng")[0],n=e.coordDimToDataDim("lat")[0],a=e.coordDimToDataDim("alt")[0],o=e.get("barSize"),s=e.get("minHeight")||0;if(null==o){var u=r.getDataExtent(i),h=r.getDataExtent(n),c=t.dataToPoint([u[0],h[0]]),d=t.dataToPoint([u[1],h[1]]),f=Math.min(Math.abs(c[0]-d[0]),Math.abs(c[1]-d[1]))||1,p=md(r,i,n);o=[f/Math.sqrt(r.count()/p),f/Math.sqrt(r.count()/p)]}else l["Y"].isArray(o)||(o=[o,o]),o[0]/=t.getScale()/16,o[1]/=t.getScale()/16;var m=[0,0,1],g=[i,n,a],_=Td(r,g);r.each(g,(function(e,i,n,a){var l=r.get(_.dimension,a),u=_.isStacked?l-n:0,h=t.dataToPoint([e,i,u]),c=t.dataToPoint([e,i,l]),d=Math.max(c[2]-h[2],s),f=[o[0],d,o[1]];r.setItemLayout(a,[h,m,f])})),r.setLayout("orient",[1,0,0])}function Td(e,t){var r=_d(e,t[2]);return{dimension:r?e.getCalculationInfo("stackResultDimension"):t[2],isStacked:r}}function bd(e){e.registerLayout((function(e,t){e.eachSeriesByType("bar3D",(function(e){var t=e.coordinateSystem,r=t&&t.type;"globe"===r?vd(e,t):"cartesian3D"===r?pd(e,t):"geo3D"===r?yd(e,t):("mapbox3D"===r||"maptalks3D"===r)&&xd(e,t)}))}))}var wd={getFormattedLabel:function(e,t,r,i,n){r=r||"normal";var a=e.getData(i),o=a.getItemModel(t),s=e.getDataParams(t,i);null!=n&&s.value instanceof Array&&(s.value=s.value[n]);var u,h=o.get("normal"===r?["label","formatter"]:["emphasis","label","formatter"]);return null==h&&(h=o.get(["label","formatter"])),"function"===typeof h?(s.status=r,u=h(s)):"string"===typeof h&&(u=l["u"].formatTpl(h,s)),u},normalizeToArray:function(e){return e instanceof Array?e:null==e?[]:[e]}},Ed=wd;function Sd(e,t){var r=[];return l["Y"].each(e.dimensions,(function(i){var n=e.getDimensionInfo(i),a=n.otherDims,o=a[t];null!=o&&!1!==o&&(r[o]=n.name)})),r}var Md=function(e,t,r){function i(e){var i=!0,a=[],o=Sd(n,"tooltip");function s(e,t){var o=n.getDimensionInfo(t);if(o&&!1!==o.otherDims.tooltip){var s=o.type,u=(i?"- "+(o.tooltipName||o.name)+": ":"")+("ordinal"===s?e+"":"time"===s?r?"":l["u"].formatTime("yyyy/MM/dd hh:mm:ss",e):l["u"].addCommas(e));u&&a.push(l["u"].encodeHTML(u))}}return o.length?l["Y"].each(o,(function(e){s(n.get(e,t),e)})):l["Y"].each(e,s),(i?"<br/>":"")+a.join(i?"<br/>":", ")}var n=e.getData(),a=e.getRawValue(t),o=l["Y"].isArray(a)?i(a):l["u"].encodeHTML(l["u"].addCommas(a)),s=n.getName(t),u=wh(n,t);l["Y"].isObject(u)&&u.colorStops&&(u=(u.colorStops[0]||{}).color),u=u||"transparent";var h=l["u"].getTooltipMarker(u),c=e.name;return"\0-"===c&&(c=""),c=c?l["u"].encodeHTML(c)+(r?": ":"<br/>"):"",r?h+c+o:c+h+(s?l["u"].encodeHTML(s)+": "+o:o)},Ad=function(e,t,r){r=r||e.getSource();var i=t||l["v"](e.get("coordinateSystem"))||["x","y","z"],n=l["A"].createDimensions(r,{dimensionsDefine:r.dimensionsDefine||e.get("dimensions"),encodeDefine:r.encodeDefine||e.get("encode"),coordDimensions:i.map((function(t){var r=e.getReferringComponents(t+"Axis3D").models[0];return{type:r&&"category"===r.get("type")?"ordinal":"float",name:t}}))});"cartesian3D"===e.get("coordinateSystem")&&n.forEach((function(t){if(i.indexOf(t.coordDim)>=0){var r=e.getReferringComponents(t.coordDim+"Axis3D").models[0];r&&"category"===r.get("type")&&(t.ordinalMeta=r.getOrdinalMeta())}}));var a=l["A"].dataStack.enableDataStack(e,n,{byIndex:!0,stackedCoordDimension:"z"}),o=new l["e"](n,e);return o.setCalculationInfo(a),o.initData(r),o},Nd=l["h"].extend({type:"series.bar3D",dependencies:["globe"],visualStyleAccessPathvisu:"itemStyle",getInitialData:function(e,t){return Ad(this)},getFormattedLabel:function(e,t,r,i){var n=Ed.getFormattedLabel(this,e,t,r,i);return null==n&&(n=this.getData().get("z",e)),n},formatTooltip:function(e){return Md(this,e)},defaultOption:{coordinateSystem:"cartesian3D",globeIndex:0,grid3DIndex:0,zlevel:-10,bevelSize:0,bevelSmoothness:2,onGridPlane:"xy",shading:"color",minHeight:0,itemStyle:{opacity:1},label:{show:!1,distance:2,textStyle:{fontSize:14,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:3}},emphasis:{label:{show:!0}},animationDurationUpdate:500}});l["Y"].merge(Nd.prototype,Lu);var Cd=Nd,Pd=rs.vec3,Ld=rs.mat3,Od=Tr.extend((function(){return{attributes:{position:new Tr.Attribute("position","float",3,"POSITION"),normal:new Tr.Attribute("normal","float",3,"NORMAL"),color:new Tr.Attribute("color","float",4,"COLOR"),prevPosition:new Tr.Attribute("prevPosition","float",3),prevNormal:new Tr.Attribute("prevNormal","float",3)},dynamic:!0,enableNormal:!1,bevelSize:1,bevelSegments:0,_dataIndices:null,_vertexOffset:0,_triangleOffset:0}}),{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0},setBarCount:function(e){var t=this.enableNormal,r=this.getBarVertexCount()*e,i=this.getBarTriangleCount()*e;this.vertexCount!==r&&(this.attributes.position.init(r),t?this.attributes.normal.init(r):this.attributes.normal.value=null,this.attributes.color.init(r)),this.triangleCount!==i&&(this.indices=r>65535?new Uint32Array(3*i):new Uint16Array(3*i),this._dataIndices=new Uint32Array(r))},getBarVertexCount:function(){var e=this.bevelSize>0?this.bevelSegments:0;return e>0?this._getBevelBarVertexCount(e):this.enableNormal?24:8},getBarTriangleCount:function(){var e=this.bevelSize>0?this.bevelSegments:0;return e>0?this._getBevelBarTriangleCount(e):12},_getBevelBarVertexCount:function(e){return 4*(e+1)*(e+1)*2},_getBevelBarTriangleCount:function(e){var t=4*e+3,r=2*e+1;return(t+1)*r*2+4},setColor:function(e,t){for(var r=this.getBarVertexCount(),i=r*e,n=r*(e+1),a=i;a<n;a++)this.attributes.color.set(a,t);this.dirtyAttribute("color")},getDataIndexOfVertex:function(e){return this._dataIndices?this._dataIndices[e]:null},addBar:function(){for(var e=Pd.create,t=Pd.scaleAndAdd,r=e(),i=e(),n=e(),a=e(),o=e(),s=e(),l=e(),u=[],h=[],c=0;c<8;c++)u[c]=e();var d=[[0,1,5,4],[2,3,7,6],[4,5,6,7],[3,2,1,0],[0,4,7,3],[1,2,6,5]],f=[0,1,2,0,2,3],p=[];for(c=0;c<d.length;c++)for(var m=d[c],g=0;g<2;g++){for(var _=[],v=0;v<3;v++)_.push(m[f[3*g+v]]);p.push(_)}return function(e,c,m,g,_,v){var y=this._vertexOffset;if(this.bevelSize>0&&this.bevelSegments>0)this._addBevelBar(e,c,m,g,this.bevelSize,this.bevelSegments,_);else{Pd.copy(n,c),Pd.normalize(n,n),Pd.cross(a,m,n),Pd.normalize(a,a),Pd.cross(i,n,a),Pd.normalize(a,a),Pd.negate(o,i),Pd.negate(s,n),Pd.negate(l,a),t(u[0],e,i,g[0]/2),t(u[0],u[0],a,g[2]/2),t(u[1],e,i,g[0]/2),t(u[1],u[1],l,g[2]/2),t(u[2],e,o,g[0]/2),t(u[2],u[2],l,g[2]/2),t(u[3],e,o,g[0]/2),t(u[3],u[3],a,g[2]/2),t(r,e,n,g[1]),t(u[4],r,i,g[0]/2),t(u[4],u[4],a,g[2]/2),t(u[5],r,i,g[0]/2),t(u[5],u[5],l,g[2]/2),t(u[6],r,o,g[0]/2),t(u[6],u[6],l,g[2]/2),t(u[7],r,o,g[0]/2),t(u[7],u[7],a,g[2]/2);var x=this.attributes;if(this.enableNormal){h[0]=i,h[1]=o,h[2]=n,h[3]=s,h[4]=a,h[5]=l;for(var T=this._vertexOffset,b=0;b<d.length;b++){for(var w=3*this._triangleOffset,E=0;E<6;E++)this.indices[w++]=T+f[E];T+=4,this._triangleOffset+=2}for(b=0;b<d.length;b++){var S=h[b];for(E=0;E<4;E++){var M=d[b][E];x.position.set(this._vertexOffset,u[M]),x.normal.set(this._vertexOffset,S),x.color.set(this._vertexOffset++,_)}}}else{for(b=0;b<p.length;b++){for(w=3*this._triangleOffset,E=0;E<3;E++)this.indices[w+E]=p[b][E]+this._vertexOffset;this._triangleOffset++}for(b=0;b<u.length;b++)x.position.set(this._vertexOffset,u[b]),x.color.set(this._vertexOffset++,_)}}var A=this._vertexOffset;for(b=y;b<A;b++)this._dataIndices[b]=v}}(),_addBevelBar:function(){var e=Pd.create(),t=Pd.create(),r=Pd.create(),i=Ld.create(),n=[],a=[1,-1,-1,1],o=[1,1,-1,-1],s=[2,0];return function(l,u,h,c,d,f,p){Pd.copy(t,u),Pd.normalize(t,t),Pd.cross(r,h,t),Pd.normalize(r,r),Pd.cross(e,t,r),Pd.normalize(r,r),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=t[0],i[4]=t[1],i[5]=t[2],i[6]=r[0],i[7]=r[1],i[8]=r[2],d=Math.min(c[0],c[2])/2*d;for(var m=0;m<3;m++)n[m]=Math.max(c[m]-2*d,0);var g=(c[0]-n[0])/2,_=(c[1]-n[1])/2,v=(c[2]-n[2])/2,y=[],x=[],T=this._vertexOffset,b=[];for(m=0;m<2;m++){b[m]=b[m]=[];for(var w=0;w<=f;w++)for(var E=0;E<4;E++){(0===w&&0===m||1===m&&w===f)&&b[m].push(T);for(var S=0;S<=f;S++){var M=S/f*Math.PI/2+Math.PI/2*E,A=w/f*Math.PI/2+Math.PI/2*m;x[0]=g*Math.cos(M)*Math.sin(A),x[1]=_*Math.cos(A),x[2]=v*Math.sin(M)*Math.sin(A),y[0]=x[0]+a[E]*n[0]/2,y[1]=x[1]+_+s[m]*n[1]/2,y[2]=x[2]+o[E]*n[2]/2,Math.abs(g-_)<1e-6&&Math.abs(_-v)<1e-6||(x[0]/=g*g,x[1]/=_*_,x[2]/=v*v),Pd.normalize(x,x),Pd.transformMat3(y,y,i),Pd.transformMat3(x,x,i),Pd.add(y,y,l),this.attributes.position.set(T,y),this.enableNormal&&this.attributes.normal.set(T,x),this.attributes.color.set(T,p),T++}}}var N=4*f+3,C=2*f+1,P=N+1;for(E=0;E<C;E++)for(m=0;m<=N;m++){var L=E*P+m+this._vertexOffset,O=E*P+(m+1)%P+this._vertexOffset,D=(E+1)*P+(m+1)%P+this._vertexOffset,R=(E+1)*P+m+this._vertexOffset;this.setTriangleIndices(this._triangleOffset++,[D,L,O]),this.setTriangleIndices(this._triangleOffset++,[D,R,L])}this.setTriangleIndices(this._triangleOffset++,[b[0][0],b[0][2],b[0][1]]),this.setTriangleIndices(this._triangleOffset++,[b[0][0],b[0][3],b[0][2]]),this.setTriangleIndices(this._triangleOffset++,[b[1][0],b[1][1],b[1][2]]),this.setTriangleIndices(this._triangleOffset++,[b[1][0],b[1][2],b[1][3]]),this._vertexOffset=T}}()});l["Y"].defaults(Od.prototype,es),l["Y"].defaults(Od.prototype,xh);var Dd=Od,Rd=rs.vec3,Id=l["b"].extend({type:"bar3D",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this._api=t,this._labelsBuilder=new Nh(256,256,t);var r=this;this._labelsBuilder.getLabelPosition=function(e,t,i){if(r._data){var n=r._data.getItemLayout(e),a=n[0],o=n[1],s=n[2][1];return Rd.scaleAndAdd([],a,o,i+s)}return[0,0]},this._labelsBuilder.getMesh().renderOrder=100},render:function(e,t,r){var i=this._prevBarMesh;this._prevBarMesh=this._barMesh,this._barMesh=i,this._barMesh||(this._barMesh=new Ao.Mesh({geometry:new Dd,shadowDepthMaterial:new Ao.Material({shader:new Ao.Shader(Ao.Shader.source("ecgl.sm.depth.vertex"),Ao.Shader.source("ecgl.sm.depth.fragment"))}),culling:"cartesian3D"===e.coordinateSystem.type,renderOrder:10,renderNormal:!0})),this.groupGL.remove(this._prevBarMesh),this.groupGL.add(this._barMesh),this.groupGL.add(this._labelsBuilder.getMesh());var n=e.coordinateSystem;if(this._doRender(e,r),n&&n.viewGL){n.viewGL.add(this.groupGL);var a=n.viewGL.isLinearSpace()?"define":"undefine";this._barMesh.material[a]("fragment","SRGB_DECODE")}this._data=e.getData(),this._labelsBuilder.updateData(this._data),this._labelsBuilder.updateLabels(),this._updateAnimation(e)},_updateAnimation:function(e){Ao.updateVertexAnimation([["prevPosition","position"],["prevNormal","normal"]],this._prevBarMesh,this._barMesh,e)},_doRender:function(e,t){var r=e.getData(),i=e.get("shading"),n="color"!==i,a=this,o=this._barMesh,s="ecgl."+i;o.material&&o.material.shader.name===s||(o.material=Ao.createMaterial(s,["VERTEX_COLOR"])),Ao.setMaterialFromModel(i,o.material,e,t),o.geometry.enableNormal=n,o.geometry.resetOffset();var l=e.get("bevelSize"),u=e.get("bevelSmoothness");o.geometry.bevelSegments=u,o.geometry.bevelSize=l;var h=[],c=new Float32Array(4*r.count()),d=0,f=0,p=!1;r.each((function(e){if(r.hasValue(e)){var t=wh(r,e),i=Eh(r,e);null==i&&(i=1),Ao.parseColor(t,h),h[3]*=i,c[d++]=h[0],c[d++]=h[1],c[d++]=h[2],c[d++]=h[3],h[3]>0&&(f++,h[3]<.99&&(p=!0))}})),o.geometry.setBarCount(f);var m=r.getLayout("orient"),g=this._barIndexOfData=new Int32Array(r.count());f=0;r.each((function(e){if(r.hasValue(e)){var t=r.getItemLayout(e),i=t[0],n=t[1],o=t[2],s=4*e;h[0]=c[s++],h[1]=c[s++],h[2]=c[s++],h[3]=c[s++],h[3]>0&&(a._barMesh.geometry.addBar(i,n,m,o,h,e),g[e]=f++)}else g[e]=-1})),o.geometry.dirty(),o.geometry.updateBoundingBox();var _=o.material;_.transparent=p,_.depthMask=!p,o.geometry.sortTriangles=p,this._initHandler(e,t)},_initHandler:function(e,t){var r=e.getData(),i=this._barMesh,n="cartesian3D"===e.coordinateSystem.type;i.seriesIndex=e.seriesIndex;var a=-1;i.off("mousemove"),i.off("mouseout"),i.on("mousemove",(function(e){var o=i.geometry.getDataIndexOfVertex(e.triangle[0]);o!==a&&(this._downplay(a),this._highlight(o),this._labelsBuilder.updateLabels([o]),n&&t.dispatchAction({type:"grid3DShowAxisPointer",value:[r.get("x",o),r.get("y",o),r.get("z",o,!0)]})),a=o,i.dataIndex=o}),this),i.on("mouseout",(function(e){this._downplay(a),this._labelsBuilder.updateLabels(),a=-1,i.dataIndex=-1,n&&t.dispatchAction({type:"grid3DHideAxisPointer"})}),this)},_highlight:function(e){var t=this._data;if(t){var r=this._barIndexOfData[e];if(!(r<0)){var i=t.getItemModel(e),n=i.getModel("emphasis.itemStyle"),a=n.get("color"),o=n.get("opacity");if(null==a){var s=wh(t,e);a=l["i"].lift(s,-.4)}null==o&&(o=Eh(t,e));var u=Ao.parseColor(a);u[3]*=o,this._barMesh.geometry.setColor(r,u),this._api.getZr().refresh()}}},_downplay:function(e){var t=this._data;if(t){var r=this._barIndexOfData[e];if(!(r<0)){var i=wh(t,e),n=Eh(t,e),a=Ao.parseColor(i);a[3]*=n,this._barMesh.geometry.setColor(r,a),this._api.getZr().refresh()}}},highlight:function(e,t,r,i){this._toggleStatus("highlight",e,t,r,i)},downplay:function(e,t,r,i){this._toggleStatus("downplay",e,t,r,i)},_toggleStatus:function(e,t,r,i,n){var a=t.getData(),o=Un.queryDataIndex(a,n),s=this;null!=o?l["Y"].each(Ed.normalizeToArray(o),(function(t){"highlight"===e?this._highlight(t):this._downplay(t)}),this):a.each((function(t){"highlight"===e?s._highlight(t):s._downplay(t)}))},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}});function Fd(e){e.registerChartView(Id),e.registerSeriesModel(Cd),bd(e),e.registerProcessor((function(e,t){e.eachSeriesByType("bar3d",(function(e){var t=e.getData();t.filterSelf((function(e){return t.hasValue(e)}))}))}))}Object(l["X"])(Fd);var Bd=l["h"].extend({type:"series.line3D",dependencies:["grid3D"],visualStyleAccessPath:"lineStyle",visualDrawType:"stroke",getInitialData:function(e,t){return Ad(this)},formatTooltip:function(e){return Md(this,e)},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,grid3DIndex:0,lineStyle:{width:2},animationDurationUpdate:500}}),zd=Bd;function Ud(e,t,r,i,n,a,o){if(0===n)return!1;var s=n,l=0,u=e;if(o>t+s&&o>i+s||o<t-s&&o<i-s||a>e+s&&a>r+s||a<e-s&&a<r-s)return!1;if(e===r)return Math.abs(a-e)<=s/2;l=(t-i)/(e-r),u=(e*i-r*t)/(e-r);var h=l*a-o+u,c=h*h/(l*l+1);return c<=s/2*s/2}var Gd=rs.vec3;Ao.Shader.import(Ps);var kd=l["b"].extend({type:"line3D",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this._api=t},render:function(e,t,r){var i=this._prevLine3DMesh;this._prevLine3DMesh=this._line3DMesh,this._line3DMesh=i,this._line3DMesh||(this._line3DMesh=new Ao.Mesh({geometry:new os({useNativeLine:!1,sortTriangles:!0}),material:new Ao.Material({shader:Ao.createShader("ecgl.meshLines3D")}),renderOrder:10}),this._line3DMesh.geometry.pick=this._pick.bind(this)),this.groupGL.remove(this._prevLine3DMesh),this.groupGL.add(this._line3DMesh);var n=e.coordinateSystem;if(n&&n.viewGL){n.viewGL.add(this.groupGL);var a=n.viewGL.isLinearSpace()?"define":"undefine";this._line3DMesh.material[a]("fragment","SRGB_DECODE")}this._doRender(e,r),this._data=e.getData(),this._camera=n.viewGL.camera,this.updateCamera(),this._updateAnimation(e)},updateCamera:function(){this._updateNDCPosition()},_doRender:function(e,t){var r=e.getData(),i=this._line3DMesh;i.geometry.resetOffset();var n=r.getLayout("points"),a=[],o=new Float32Array(n.length/3*4),s=0,l=!1;r.each((function(e){var t=wh(r,e),i=Eh(r,e);null==i&&(i=1),Ao.parseColor(t,a),a[3]*=i,o[s++]=a[0],o[s++]=a[1],o[s++]=a[2],o[s++]=a[3],a[3]<.99&&(l=!0)})),i.geometry.setVertexCount(i.geometry.getPolylineVertexCount(n)),i.geometry.setTriangleCount(i.geometry.getPolylineTriangleCount(n)),i.geometry.addPolyline(n,o,Un.firstNotNull(e.get("lineStyle.width"),1)),i.geometry.dirty(),i.geometry.updateBoundingBox();var u=i.material;u.transparent=l,u.depthMask=!l;var h=e.getModel("debug.wireframe");h.get("show")?(i.geometry.createAttribute("barycentric","float",3),i.geometry.generateBarycentric(),i.material.set("both","WIREFRAME_TRIANGLE"),i.material.set("wireframeLineColor",Ao.parseColor(h.get("lineStyle.color")||"rgba(0,0,0,0.5)")),i.material.set("wireframeLineWidth",Un.firstNotNull(h.get("lineStyle.width"),1))):i.material.set("both","WIREFRAME_TRIANGLE"),this._points=n,this._initHandler(e,t)},_updateAnimation:function(e){Ao.updateVertexAnimation([["prevPosition","position"],["prevPositionPrev","positionPrev"],["prevPositionNext","positionNext"]],this._prevLine3DMesh,this._line3DMesh,e)},_initHandler:function(e,t){var r=e.getData(),i=e.coordinateSystem,n=this._line3DMesh,a=-1;n.seriesIndex=e.seriesIndex,n.off("mousemove"),n.off("mouseout"),n.on("mousemove",(function(e){var o=i.pointToData(e.point.array),s=r.indicesOfNearest("x",o[0])[0];s!==a&&(t.dispatchAction({type:"grid3DShowAxisPointer",value:[r.get("x",s),r.get("y",s),r.get("z",s)]}),n.dataIndex=s),a=s}),this),n.on("mouseout",(function(e){a=-1,n.dataIndex=-1,t.dispatchAction({type:"grid3DHideAxisPointer"})}),this)},_updateNDCPosition:function(){var e=new Dt,t=this._camera;Dt.multiply(e,t.projectionMatrix,t.viewMatrix);var r=this._positionNDC,i=this._points,n=i.length/3;r&&r.length/2===n||(r=this._positionNDC=new Float32Array(2*n));for(var a=[],o=0;o<n;o++){var s=3*o,l=2*o;a[0]=i[s],a[1]=i[s+1],a[2]=i[s+2],a[3]=1,Gd.transformMat4(a,a,e.array),r[l]=a[0]/a[3],r[l+1]=a[1]/a[3]}},_pick:function(e,t,r,i,n,a){var o=this._positionNDC,s=this._data.hostModel,l=s.get("lineStyle.width"),u=-1,h=r.viewport.width,c=r.viewport.height,d=.5*h,f=.5*c;e=(e+1)*d,t=(t+1)*f;for(var p=1;p<o.length/2;p++){var m=(o[2*(p-1)]+1)*d,g=(o[2*(p-1)+1]+1)*f,_=(o[2*p]+1)*d,v=(o[2*p+1]+1)*f;if(Ud(m,g,_,v,l,e,t)){var y=(m-e)*(m-e)+(g-t)*(g-t),x=(_-e)*(_-e)+(v-t)*(v-t);u=y<x?p-1:p}}if(u>=0){var T=3*u,b=new xt(this._points[T],this._points[T+1],this._points[T+2]);a.push({dataIndex:u,point:b,pointWorld:b.clone(),target:this._line3DMesh,distance:this._camera.getWorldPosition().dist(b)})}},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}});function Hd(e){e.registerChartView(kd),e.registerSeriesModel(zd),e.registerLayout((function(e,t){e.eachSeriesByType("line3D",(function(e){var t=e.getData(),r=e.coordinateSystem;if(r){if("cartesian3D"!==r.type)return void 0;var i=new Float32Array(3*t.count()),n=[],a=[],o=r.dimensions,s=o.map((function(t){return e.coordDimToDataDim(t)[0]}));r&&t.each(s,(function(e,t,o,s){n[0]=e,n[1]=t,n[2]=o,r.dataToPoint(n,a),i[3*s]=a[0],i[3*s+1]=a[1],i[3*s+2]=a[2]})),t.setLayout("points",i)}}))}))}Object(l["X"])(Hd);var Vd=l["h"].extend({type:"series.scatter3D",dependencies:["globe","grid3D","geo3D"],visualStyleAccessPath:"itemStyle",hasSymbolVisual:!0,getInitialData:function(e,t){return Ad(this)},getFormattedLabel:function(e,t,r,i){var n=Ed.getFormattedLabel(this,e,t,r,i);if(null==n){var a=this.getData(),o=a.dimensions[a.dimensions.length-1];n=a.get(o,e)}return n},formatTooltip:function(e){return Md(this,e)},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,progressive:1e5,progressiveThreshold:1e5,grid3DIndex:0,globeIndex:0,symbol:"circle",symbolSize:10,blendMode:"source-over",label:{show:!1,position:"right",distance:5,textStyle:{fontSize:14,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:3}},itemStyle:{opacity:.8},emphasis:{label:{show:!0}},animationDurationUpdate:500}});function Wd(e,t,r){t=t||document.createElement("canvas");t.width=e,t.height=e;var i=t.getContext("2d");return r&&r(i),t}function jd(e,t,r,i){l["Y"].isArray(t)||(t=[t,t]);var n=qd.getMarginByStyle(r,i),a=t[0]+n.left+n.right,o=t[1]+n.top+n.bottom,s=l["A"].createSymbol(e,0,0,t[0],t[1]),u=Math.max(a,o);s.x=n.left,s.y=n.top,a>o?s.y+=(u-o)/2:s.x+=(u-a)/2;var h=s.getBoundingRect();return s.x-=h.x,s.y-=h.y,s.setStyle(r),s.update(),s.__size=u,s}function Xd(e,t,r){var i=t.width,n=t.height,a=e.canvas.width,o=e.canvas.height,s=i/a,l=n/o;function u(e){return e<128?1:-1}function h(e,a){var o=1/0;e=Math.floor(e*s),a=Math.floor(a*l);for(var h=a*i+e,c=t.data[4*h],d=u(c),f=Math.max(a-r,0);f<Math.min(a+r,n);f++)for(var p=Math.max(e-r,0);p<Math.min(e+r,i);p++){h=f*i+p;var m=t.data[4*h],g=u(m),_=p-e,v=f-a;if(d!==g){var y=_*_+v*v;y<o&&(o=y)}}return d*Math.sqrt(o)}for(var c=e.createImageData(a,o),d=0;d<o;d++)for(var f=0;f<a;f++){var p=h(f,d),m=p/r*.5+.5,g=4*(d*a+f);c.data[g++]=255*(1-m),c.data[g++]=255*(1-m),c.data[g++]=255*(1-m),c.data[g++]=255}return c}var qd={getMarginByStyle:function(e){var t=e.minMargin||0,r=0;e.stroke&&"none"!==e.stroke&&(r=null==e.lineWidth?1:e.lineWidth);var i=e.shadowBlur||0,n=e.shadowOffsetX||0,a=e.shadowOffsetY||0,o={};return o.left=Math.max(r/2,-n+i,t),o.right=Math.max(r/2,n+i,t),o.top=Math.max(r/2,-a+i,t),o.bottom=Math.max(r/2,a+i,t),o},createSymbolSprite:function(e,t,r,i){var n=jd(e,t,r),a=qd.getMarginByStyle(r);return{image:Wd(n.__size,i,(function(e){l["C"](e,n)})),margin:a}},createSDFFromCanvas:function(e,t,r,i){return Wd(t,i,(function(t){var i=e.getContext("2d"),n=i.getImageData(0,0,e.width,e.height);t.putImageData(Xd(t,n,r),0,0)}))},createSimpleSprite:function(e,t){return Wd(e,t,(function(t){var r=e/2;t.beginPath(),t.arc(r,r,60,0,2*Math.PI,!1),t.closePath();var i=t.createRadialGradient(r,r,0,r,r,r);i.addColorStop(0,"rgba(255, 255, 255, 1)"),i.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),i.addColorStop(1,"rgba(255, 255, 255, 0)"),t.fillStyle=i,t.fill()}))}},Yd=qd,Zd=rs.vec3,Kd={needsSortVertices:function(){return this.sortVertices},needsSortVerticesProgressively:function(){return this.needsSortVertices()&&this.vertexCount>=2e4},doSortVertices:function(e,t){var r=this.indices,i=Zd.create();if(!r){r=this.indices=this.vertexCount>65535?new Uint32Array(this.vertexCount):new Uint16Array(this.vertexCount);for(var n=0;n<r.length;n++)r[n]=n}if(0===t){var a,o=this.attributes.position,s=(e=e.array,0);this._zList&&this._zList.length===this.vertexCount||(this._zList=new Float32Array(this.vertexCount));for(n=0;n<this.vertexCount;n++){o.get(n,i);var l=Zd.sqrDist(i,e);isNaN(l)&&(l=1e7,s++),0===n?(a=l,l=0):l-=a,this._zList[n]=l}this._noneCount=s}if(this.vertexCount<2e4)0===t&&this._simpleSort(this._noneCount/this.vertexCount>.05);else for(n=0;n<3;n++)this._progressiveQuickSort(3*t+n);this.dirtyIndices()},_simpleSort:function(e){var t=this._zList,r=this.indices;function i(e,r){return t[r]-t[e]}e?Array.prototype.sort.call(r,i):mh.sort(r,i,0,r.length-1)},_progressiveQuickSort:function(e){var t=this._zList,r=this.indices;this._quickSort=this._quickSort||new mh,this._quickSort.step(r,(function(e,r){return t[r]-t[e]}),e)}},Qd="@export ecgl.sdfSprite.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform float elapsedTime : 0;\n\nattribute vec3 position : POSITION;\n\n#ifdef VERTEX_SIZE\nattribute float size;\n#else\nuniform float u_Size;\n#endif\n\n#ifdef VERTEX_COLOR\nattribute vec4 a_FillColor: COLOR;\nvarying vec4 v_Color;\n#endif\n\n#ifdef VERTEX_ANIMATION\nattribute vec3 prevPosition;\nattribute float prevSize;\nuniform float percent : 1.0;\n#endif\n\n\n#ifdef POSITIONTEXTURE_ENABLED\nuniform sampler2D positionTexture;\n#endif\n\nvarying float v_Size;\n\nvoid main()\n{\n\n#ifdef POSITIONTEXTURE_ENABLED\n gl_Position = worldViewProjection * vec4(texture2D(positionTexture, position.xy).xy, -10.0, 1.0);\n#else\n\n #ifdef VERTEX_ANIMATION\n vec3 pos = mix(prevPosition, position, percent);\n #else\n vec3 pos = position;\n #endif\n gl_Position = worldViewProjection * vec4(pos, 1.0);\n#endif\n\n#ifdef VERTEX_SIZE\n#ifdef VERTEX_ANIMATION\n v_Size = mix(prevSize, size, percent);\n#else\n v_Size = size;\n#endif\n#else\n v_Size = u_Size;\n#endif\n\n#ifdef VERTEX_COLOR\n v_Color = a_FillColor;\n #endif\n\n gl_PointSize = v_Size;\n}\n\n@end\n\n@export ecgl.sdfSprite.fragment\n\nuniform vec4 color: [1, 1, 1, 1];\nuniform vec4 strokeColor: [1, 1, 1, 1];\nuniform float smoothing: 0.07;\n\nuniform float lineWidth: 0.0;\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\nvarying float v_Size;\n\nuniform sampler2D sprite;\n\n@import clay.util.srgb\n\nvoid main()\n{\n gl_FragColor = color;\n\n vec4 _strokeColor = strokeColor;\n\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n #endif\n\n#ifdef SPRITE_ENABLED\n float d = texture2D(sprite, gl_PointCoord).r;\n gl_FragColor.a *= smoothstep(0.5 - smoothing, 0.5 + smoothing, d);\n\n if (lineWidth > 0.0) {\n float sLineWidth = lineWidth / 2.0;\n\n float outlineMaxValue0 = 0.5 + sLineWidth;\n float outlineMaxValue1 = 0.5 + sLineWidth + smoothing;\n float outlineMinValue0 = 0.5 - sLineWidth - smoothing;\n float outlineMinValue1 = 0.5 - sLineWidth;\n\n if (d <= outlineMaxValue1 && d >= outlineMinValue0) {\n float a = _strokeColor.a;\n if (d <= outlineMinValue1) {\n a = a * smoothstep(outlineMinValue0, outlineMinValue1, d);\n }\n else {\n a = a * smoothstep(outlineMaxValue1, outlineMaxValue0, d);\n }\n gl_FragColor.rgb = mix(gl_FragColor.rgb * gl_FragColor.a, _strokeColor.rgb, a);\n gl_FragColor.a = gl_FragColor.a * (1.0 - a) + a;\n }\n }\n#endif\n\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(gl_FragColor);\n#endif\n}\n@end",Jd=rs.vec4;Ao.Shader.import(Qd);var $d=Ao.Mesh.extend((function(){var e=new Ao.Geometry({dynamic:!0,attributes:{color:new Ao.Geometry.Attribute("color","float",4,"COLOR"),position:new Ao.Geometry.Attribute("position","float",3,"POSITION"),size:new Ao.Geometry.Attribute("size","float",1),prevPosition:new Ao.Geometry.Attribute("prevPosition","float",3),prevSize:new Ao.Geometry.Attribute("prevSize","float",1)}});Object.assign(e,Kd);var t=new Ao.Material({shader:Ao.createShader("ecgl.sdfSprite"),transparent:!0,depthMask:!1});t.enableTexture("sprite"),t.define("both","VERTEX_COLOR"),t.define("both","VERTEX_SIZE");var r=new Ao.Texture2D({image:document.createElement("canvas"),flipY:!1});return t.set("sprite",r),e.pick=this._pick.bind(this),{geometry:e,material:t,mode:Ao.Mesh.POINTS,sizeScale:1}}),{_pick:function(e,t,r,i,n,a){var o=this._positionNDC;if(o)for(var s=r.viewport,l=2/s.width,u=2/s.height,h=this.geometry.vertexCount-1;h>=0;h--){var c;c=this.geometry.indices?this.geometry.indices[h]:h;var d=o[2*c],f=o[2*c+1],p=this.geometry.attributes.size.get(c)/this.sizeScale,m=p/2;if(e>d-m*l&&e<d+m*l&&t>f-m*u&&t<f+m*u){var g=new Ao.Vector3,_=new Ao.Vector3;this.geometry.attributes.position.get(c,g.array),Ao.Vector3.transformMat4(_,g,this.worldTransform),a.push({vertexIndex:c,point:g,pointWorld:_,target:this,distance:_.distance(i.getWorldPosition())})}}},updateNDCPosition:function(e,t,r){var i=this._positionNDC,n=this.geometry;i&&i.length/2===n.vertexCount||(i=this._positionNDC=new Float32Array(2*n.vertexCount));for(var a=Jd.create(),o=0;o<n.vertexCount;o++)n.attributes.position.get(o,a),a[3]=1,Jd.transformMat4(a,a,e.array),Jd.scale(a,a,1/a[3]),i[2*o]=a[0],i[2*o+1]=a[1]}}),ef=$d,tf=20,rf=-10;function nf(e,t){return e&&t&&e[0]===t[0]&&e[1]===t[1]}function af(e,t){this.rootNode=new Ao.Node,this.is2D=e,this._labelsBuilder=new Nh(256,256,t),this._labelsBuilder.getMesh().renderOrder=100,this.rootNode.add(this._labelsBuilder.getMesh()),this._api=t,this._spriteImageCanvas=document.createElement("canvas"),this._startDataIndex=0,this._endDataIndex=0,this._sizeScale=1}af.prototype={constructor:af,highlightOnMouseover:!0,update:function(e,t,r,i,n){var a=this._prevMesh;this._prevMesh=this._mesh,this._mesh=a;var o=e.getData();if(null==i&&(i=0),null==n&&(n=o.count()),this._startDataIndex=i,this._endDataIndex=n-1,!this._mesh){var s=this._prevMesh&&this._prevMesh.material;this._mesh=new ef({renderOrder:10,frustumCulling:!1}),s&&(this._mesh.material=s)}s=this._mesh.material;var l=this._mesh.geometry,u=l.attributes;this.rootNode.remove(this._prevMesh),this.rootNode.add(this._mesh),this._setPositionTextureToMesh(this._mesh,this._positionTexture);var h=this._getSymbolInfo(e,i,n),c=r.getDevicePixelRatio(),d=e.getModel("itemStyle").getItemStyle(),f=e.get("large"),p=1;h.maxSize>2?(p=this._updateSymbolSprite(e,d,h,c),s.enableTexture("sprite")):s.disableTexture("sprite"),u.position.init(n-i);var m=[];if(f){s.undefine("VERTEX_SIZE"),s.undefine("VERTEX_COLOR");var g=Th(o),_=bh(o);Ao.parseColor(g,m),m[3]*=_,s.set({color:m,u_Size:h.maxSize*this._sizeScale})}else s.set({color:[1,1,1,1]}),s.define("VERTEX_SIZE"),s.define("VERTEX_COLOR"),u.size.init(n-i),u.color.init(n-i),this._originalOpacity=new Float32Array(n-i);for(var v=o.getLayout("points"),y=u.position.value,x=0;x<n-i;x++){var T=3*x,b=2*x;if(this.is2D?(y[T]=v[b],y[T+1]=v[b+1],y[T+2]=rf):(y[T]=v[T],y[T+1]=v[T+1],y[T+2]=v[T+2]),!f){g=wh(o,x),_=Eh(o,x);Ao.parseColor(g,m),m[3]*=_,u.color.set(x,m),m[3]<.99&&!0;var w=o.getItemVisual(x,"symbolSize");w=w instanceof Array?Math.max(w[0],w[1]):w,isNaN(w)&&(w=0),u.size.value[x]=w*p*this._sizeScale,this._originalOpacity[x]=m[3]}}this._mesh.sizeScale=p,l.updateBoundingBox(),l.dirty(),this._updateMaterial(e,d);var E=e.coordinateSystem;if(E&&E.viewGL){var S=E.viewGL.isLinearSpace()?"define":"undefine";s[S]("fragment","SRGB_DECODE")}f||this._updateLabelBuilder(e,i,n),this._updateHandler(e,t,r),this._updateAnimation(e),this._api=r},getPointsMesh:function(){return this._mesh},updateLabels:function(e){this._labelsBuilder.updateLabels(e)},hideLabels:function(){this.rootNode.remove(this._labelsBuilder.getMesh())},showLabels:function(){this.rootNode.add(this._labelsBuilder.getMesh())},_updateSymbolSprite:function(e,t,r,i){r.maxSize=Math.min(2*r.maxSize,200);var n=[];return r.aspect>1?(n[0]=r.maxSize,n[1]=r.maxSize/r.aspect):(n[1]=r.maxSize,n[0]=r.maxSize*r.aspect),n[0]=n[0]||1,n[1]=n[1]||1,this._symbolType===r.type&&nf(this._symbolSize,n)&&this._lineWidth===t.lineWidth||(Yd.createSymbolSprite(r.type,n,{fill:"#fff",lineWidth:t.lineWidth,stroke:"transparent",shadowColor:"transparent",minMargin:Math.min(n[0]/2,10)},this._spriteImageCanvas),Yd.createSDFFromCanvas(this._spriteImageCanvas,Math.min(this._spriteImageCanvas.width,32),tf,this._mesh.material.get("sprite").image),this._symbolType=r.type,this._symbolSize=n,this._lineWidth=t.lineWidth),this._spriteImageCanvas.width/r.maxSize*i},_updateMaterial:function(e,t){var r="lighter"===e.get("blendMode")?Ao.additiveBlend:null,i=this._mesh.material;i.blend=r,i.set("lineWidth",t.lineWidth/tf);var n=Ao.parseColor(t.stroke);i.set("strokeColor",n),i.transparent=!0,i.depthMask=!1,i.depthTest=!this.is2D,i.sortVertices=!this.is2D},_updateLabelBuilder:function(e,t,r){var i=e.getData(),n=this._mesh.geometry,a=n.attributes.position.value,o=(t=this._startDataIndex,this._mesh.sizeScale);this._labelsBuilder.updateData(i,t,r),this._labelsBuilder.getLabelPosition=function(e,r,i){var n=3*(e-t);return[a[n],a[n+1],a[n+2]]},this._labelsBuilder.getLabelDistance=function(e,r,i){var a=n.attributes.size.get(e-t)/o;return a/2+i},this._labelsBuilder.updateLabels()},_updateAnimation:function(e){Ao.updateVertexAnimation([["prevPosition","position"],["prevSize","size"]],this._prevMesh,this._mesh,e)},_updateHandler:function(e,t,r){var i,n=e.getData(),a=this._mesh,o=this,s=-1,l=e.coordinateSystem&&"cartesian3D"===e.coordinateSystem.type;l&&(i=e.coordinateSystem.model),a.seriesIndex=e.seriesIndex,a.off("mousemove"),a.off("mouseout"),a.on("mousemove",(function(t){var u=t.vertexIndex+o._startDataIndex;u!==s&&(this.highlightOnMouseover&&(this.downplay(n,s),this.highlight(n,u),this._labelsBuilder.updateLabels([u])),l&&r.dispatchAction({type:"grid3DShowAxisPointer",value:[n.get(e.coordDimToDataDim("x")[0],u),n.get(e.coordDimToDataDim("y")[0],u),n.get(e.coordDimToDataDim("z")[0],u)],grid3DIndex:i.componentIndex})),a.dataIndex=u,s=u}),this),a.on("mouseout",(function(e){var t=e.vertexIndex+o._startDataIndex;this.highlightOnMouseover&&(this.downplay(n,t),this._labelsBuilder.updateLabels()),s=-1,a.dataIndex=-1,l&&r.dispatchAction({type:"grid3DHideAxisPointer",grid3DIndex:i.componentIndex})}),this)},updateLayout:function(e,t,r){var i=e.getData();if(this._mesh){var n=this._mesh.geometry.attributes.position.value,a=i.getLayout("points");if(this.is2D)for(var o=0;o<a.length/2;o++){var s=3*o,l=2*o;n[s]=a[l],n[s+1]=a[l+1],n[s+2]=rf}else for(o=0;o<a.length;o++)n[o]=a[o];this._mesh.geometry.dirty(),r.getZr().refresh()}},updateView:function(e){if(this._mesh){var t=new Dt;Dt.mul(t,e.viewMatrix,this._mesh.worldTransform),Dt.mul(t,e.projectionMatrix,t),this._mesh.updateNDCPosition(t,this.is2D,this._api)}},highlight:function(e,t){if(!(t>this._endDataIndex||t<this._startDataIndex)){var r=e.getItemModel(t),i=r.getModel("emphasis.itemStyle"),n=i.get("color"),a=i.get("opacity");if(null==n){var o=wh(e,t);n=l["i"].lift(o,-.4)}null==a&&(a=Eh(e,t));var s=Ao.parseColor(n);s[3]*=a,this._mesh.geometry.attributes.color.set(t-this._startDataIndex,s),this._mesh.geometry.dirtyAttribute("color"),this._api.getZr().refresh()}},downplay:function(e,t){if(!(t>this._endDataIndex||t<this._startDataIndex)){var r=wh(e,t),i=Eh(e,t),n=Ao.parseColor(r);n[3]*=i,this._mesh.geometry.attributes.color.set(t-this._startDataIndex,n),this._mesh.geometry.dirtyAttribute("color"),this._api.getZr().refresh()}},fadeOutAll:function(e){if(this._originalOpacity){for(var t=this._mesh.geometry,r=0;r<t.vertexCount;r++){var i=this._originalOpacity[r]*e;t.attributes.color.value[4*r+3]=i}t.dirtyAttribute("color"),this._api.getZr().refresh()}},fadeInAll:function(){this.fadeOutAll(1)},setPositionTexture:function(e){this._mesh&&this._setPositionTextureToMesh(this._mesh,e),this._positionTexture=e},removePositionTexture:function(){this._positionTexture=null,this._mesh&&this._setPositionTextureToMesh(this._mesh,null)},setSizeScale:function(e){if(e!==this._sizeScale){if(this._mesh){var t=this._mesh.material.get("u_Size");this._mesh.material.set("u_Size",t/this._sizeScale*e);var r=this._mesh.geometry.attributes;if(r.size.value)for(var i=0;i<r.size.value.length;i++)r.size.value[i]=r.size.value[i]/this._sizeScale*e}this._sizeScale=e}},_setPositionTextureToMesh:function(e,t){t&&e.material.set("positionTexture",t),e.material[t?"enableTexture":"disableTexture"]("positionTexture")},_getSymbolInfo:function(e,t,r){if(e.get("large")){var i=Un.firstNotNull(e.get("symbolSize"),1);return i instanceof Array?(s=Math.max(i[0],i[1]),n=i[0]/i[1]):(s=i,n=1),{maxSize:i,type:e.get("symbol"),aspect:n}}for(var n,a=e.getData(),o=a.getItemVisual(0,"symbol")||"circle",s=0,l=t;l<r;l++){i=a.getItemVisual(l,"symbolSize");var u,h=a.getItemVisual(l,"symbol");if(i instanceof Array)u=i[0]/i[1],s=Math.max(Math.max(i[0],i[1]),s);else{if(isNaN(i))continue;u=1,s=Math.max(i,s)}0,o=h,n=u}return{maxSize:s,type:o,aspect:n}}};var of=af,sf=l["b"].extend({type:"scatter3D",hasSymbolVisual:!0,__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this._pointsBuilderList=[],this._currentStep=0},render:function(e,t,r){if(this.groupGL.removeAll(),e.getData().count()){var i=e.coordinateSystem;if(i&&i.viewGL){i.viewGL.add(this.groupGL),this._camera=i.viewGL.camera;var n=this._pointsBuilderList[0];n||(n=this._pointsBuilderList[0]=new of(!1,r)),this._pointsBuilderList.length=1,this.groupGL.add(n.rootNode),n.update(e,t,r),n.updateView(i.viewGL.camera)}else 0}},incrementalPrepareRender:function(e,t,r){var i=e.coordinateSystem;i&&i.viewGL&&(i.viewGL.add(this.groupGL),this._camera=i.viewGL.camera),this.groupGL.removeAll(),this._currentStep=0},incrementalRender:function(e,t,r,i){if(!(e.end<=e.start)){var n=this._pointsBuilderList[this._currentStep];n||(n=new of(!1,i),this._pointsBuilderList[this._currentStep]=n),this.groupGL.add(n.rootNode),n.update(t,r,i,e.start,e.end),n.updateView(t.coordinateSystem.viewGL.camera),this._currentStep++}},updateCamera:function(){this._pointsBuilderList.forEach((function(e){e.updateView(this._camera)}),this)},highlight:function(e,t,r,i){this._toggleStatus("highlight",e,t,r,i)},downplay:function(e,t,r,i){this._toggleStatus("downplay",e,t,r,i)},_toggleStatus:function(e,t,r,i,n){var a=t.getData(),o=Un.queryDataIndex(a,n),s="highlight"===e;null!=o?l["Y"].each(Ed.normalizeToArray(o),(function(e){for(var t=0;t<this._pointsBuilderList.length;t++){var r=this._pointsBuilderList[t];s?r.highlight(a,e):r.downplay(a,e)}}),this):a.each((function(e){for(var t=0;t<this._pointsBuilderList.length;t++){var r=this._pointsBuilderList[t];s?r.highlight(a,e):r.downplay(a,e)}}))},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}});function lf(e){e.registerChartView(sf),e.registerSeriesModel(Vd),e.registerLayout({seriesType:"scatter3D",reset:function(e){var t=e.coordinateSystem;if(t){var r=t.dimensions;if(r.length<3)return void 0;var i=r.map((function(t){return e.coordDimToDataDim(t)[0]})),n=[],a=[];return{progress:function(e,r){for(var o=new Float32Array(3*(e.end-e.start)),s=e.start;s<e.end;s++){var l=3*(s-e.start);n[0]=r.get(i[0],s),n[1]=r.get(i[1],s),n[2]=r.get(i[2],s),t.dataToPoint(n,a),o[l]=a[0],o[l+1]=a[1],o[l+2]=a[2]}r.setLayout("points",o)}}}}})}Object(l["X"])(lf);var uf=rs.vec3,hf=rs.vec2,cf=uf.normalize,df=uf.cross,ff=uf.sub,pf=uf.add,mf=uf.create,gf=mf(),_f=mf(),vf=mf(),yf=mf(),xf=[],Tf=[];function bf(e,t){hf.copy(xf,e[0]),hf.copy(Tf,e[1]);var r=[],i=r[0]=mf(),n=r[1]=mf(),a=r[2]=mf(),o=r[3]=mf();t.dataToPoint(xf,i),t.dataToPoint(Tf,o),cf(gf,i),ff(_f,o,i),cf(_f,_f),df(vf,_f,gf),cf(vf,vf),df(_f,gf,vf),pf(n,gf,_f),cf(n,n),cf(gf,o),ff(_f,i,o),cf(_f,_f),df(vf,_f,gf),cf(vf,vf),df(_f,gf,vf),pf(a,gf,_f),cf(a,a),pf(yf,i,o),cf(yf,yf);var s=uf.dot(i,yf),l=uf.dot(yf,n),u=(Math.max(uf.len(i),uf.len(o))-s)/l*2;return uf.scaleAndAdd(n,i,n,u),uf.scaleAndAdd(a,o,a,u),r}function wf(e,t,r){var i=[],n=i[0]=uf.create(),a=i[1]=uf.create(),o=i[2]=uf.create(),s=i[3]=uf.create();t.dataToPoint(e[0],n),t.dataToPoint(e[1],s);var l=uf.dist(n,s);return uf.lerp(a,n,s,.3),uf.lerp(o,n,s,.3),uf.scaleAndAdd(a,a,r,Math.min(.1*l,10)),uf.scaleAndAdd(o,o,r,Math.min(.1*l,10)),i}function Ef(e,t){for(var r=new Float32Array(3*e.length),i=0,n=[],a=0;a<e.length;a++)t.dataToPoint(e[a],n),r[i++]=n[0],r[i++]=n[1],r[i++]=n[2];return r}function Sf(e){var t=[];return e.each((function(r){var i=e.getItemModel(r),n=i.option instanceof Array?i.option:i.getShallow("coords",!0);t.push(n)})),{coordsList:t}}function Mf(e,t){var r=e.getData(),i=e.get("polyline");r.setLayout("lineType",i?"polyline":"cubicBezier");var n=Sf(r);r.each((function(e){var a=n.coordsList[e],o=i?Ef:bf;r.setItemLayout(e,o(a,t))}))}function Af(e,t,r){var i=e.getData(),n=e.get("polyline"),a=Sf(i);i.setLayout("lineType",n?"polyline":"cubicBezier"),i.each((function(e){var o=a.coordsList[e],s=n?Ef(o,t):wf(o,t,r);i.setItemLayout(e,s)}))}function Nf(e,t){e.eachSeriesByType("lines3D",(function(e){var t=e.coordinateSystem;"globe"===t.type?Mf(e,t):"geo3D"===t.type?Af(e,t,[0,1,0]):"mapbox3D"!==t.type&&"maptalks3D"!==t.type||Af(e,t,[0,0,1])}))}var Cf=l["h"].extend({type:"series.lines3D",dependencies:["globe"],visualStyleAccessPath:"lineStyle",visualDrawType:"stroke",getInitialData:function(e,t){var r=new l["e"](["value"],this);return r.hasItemOption=!1,r.initData(e.data,[],(function(e,t,i,n){if(e instanceof Array)return NaN;r.hasItemOption=!0;var a=e.value;return null!=a?a instanceof Array?a[n]:a:void 0})),r},defaultOption:{coordinateSystem:"globe",globeIndex:0,geo3DIndex:0,zlevel:-10,polyline:!1,effect:{show:!1,period:4,trailWidth:4,trailLength:.2,spotIntensity:6},silent:!0,blendMode:"source-over",lineStyle:{width:1,opacity:.5}}}),Pf="@export ecgl.trail2.vertex\nattribute vec3 position: POSITION;\nattribute vec3 positionPrev;\nattribute vec3 positionNext;\nattribute float offset;\nattribute float dist;\nattribute float distAll;\nattribute float start;\n\nattribute vec4 a_Color : COLOR;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\nuniform float near : NEAR;\n\nuniform float speed : 0;\nuniform float trailLength: 0.3;\nuniform float time;\nuniform float period: 1000;\n\nuniform float spotSize: 1;\n\nvarying vec4 v_Color;\nvarying float v_Percent;\nvarying float v_SpotPercent;\n\n@import ecgl.common.wireframe.vertexHeader\n\n@import ecgl.lines3D.clipNear\n\nvoid main()\n{\n @import ecgl.lines3D.expandLine\n\n gl_Position = currProj;\n\n v_Color = a_Color;\n\n @import ecgl.common.wireframe.vertexMain\n\n#ifdef CONSTANT_SPEED\n float t = mod((speed * time + start) / distAll, 1. + trailLength) - trailLength;\n#else\n float t = mod((time + start) / period, 1. + trailLength) - trailLength;\n#endif\n\n float trailLen = distAll * trailLength;\n\n v_Percent = (dist - t * distAll) / trailLen;\n\n v_SpotPercent = spotSize / distAll;\n\n }\n@end\n\n\n@export ecgl.trail2.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform float spotIntensity: 5;\n\nvarying vec4 v_Color;\nvarying float v_Percent;\nvarying float v_SpotPercent;\n\n@import ecgl.common.wireframe.fragmentHeader\n\n@import clay.util.srgb\n\nvoid main()\n{\n if (v_Percent > 1.0 || v_Percent < 0.0) {\n discard;\n }\n\n float fade = v_Percent;\n\n#ifdef SRGB_DECODE\n gl_FragColor = sRGBToLinear(color * v_Color);\n#else\n gl_FragColor = color * v_Color;\n#endif\n\n @import ecgl.common.wireframe.fragmentMain\n\n if (v_Percent > (1.0 - v_SpotPercent)) {\n gl_FragColor.rgb *= spotIntensity;\n }\n\n gl_FragColor.a *= fade;\n}\n\n@end",Lf=rs.vec3;function Of(e){return e>0?1:-1}Ao.Shader.import(Pf);var Df=Ao.Mesh.extend((function(){var e=new Ao.Material({shader:new Ao.Shader(Ao.Shader.source("ecgl.trail2.vertex"),Ao.Shader.source("ecgl.trail2.fragment")),transparent:!0,depthMask:!1}),t=new os({dynamic:!0});return t.createAttribute("dist","float",1),t.createAttribute("distAll","float",1),t.createAttribute("start","float",1),{geometry:t,material:e,culling:!1,$ignorePicking:!0}}),{updateData:function(e,t,r){var i=e.hostModel,n=this.geometry,a=i.getModel("effect"),o=a.get("trailWidth")*t.getDevicePixelRatio(),s=a.get("trailLength"),l=i.get("effect.constantSpeed"),u=1e3*i.get("effect.period"),h=null!=l;h?this.material.set("speed",l/1e3):this.material.set("period",u),this.material[h?"define":"undefine"]("vertex","CONSTANT_SPEED");var c=i.get("polyline");n.trailLength=s,this.material.set("trailLength",s),n.resetOffset(),["position","positionPrev","positionNext"].forEach((function(e){n.attributes[e].value=r.attributes[e].value}));var d=["dist","distAll","start","offset","color"];d.forEach((function(e){n.attributes[e].init(n.vertexCount)})),n.indices=r.indices;var f=[],p=a.get("trailColor"),m=a.get("trailOpacity"),g=null!=p,_=null!=m;this.updateWorldTransform();var v=this.worldTransform.x.len(),y=this.worldTransform.y.len(),x=this.worldTransform.z.len(),T=0,b=0;e.each((function(t){var i=e.getItemLayout(t),a=_?m:Eh(e,t),s=wh(e,t);null==a&&(a=1),f=Ao.parseColor(g?p:s,f),f[3]*=a;for(var l=c?r.getPolylineVertexCount(i):r.getCubicCurveVertexCount(i[0],i[1],i[2],i[3]),d=0,w=[],E=[],S=T;S<T+l;S++)n.attributes.position.get(S,w),w[0]*=v,w[1]*=y,w[2]*=x,S>T&&(d+=Lf.dist(w,E)),n.attributes.dist.set(S,d),Lf.copy(E,w);b=Math.max(b,d);var M=Math.random()*(h?d:u);for(S=T;S<T+l;S++)n.attributes.distAll.set(S,d),n.attributes.start.set(S,M),n.attributes.offset.set(S,Of(r.attributes.offset.get(S))*o/2),n.attributes.color.set(S,f);T+=l})),this.material.set("spotSize",.1*b*s),this.material.set("spotIntensity",a.get("spotIntensity")),n.dirty()},setAnimationTime:function(e){this.material.set("time",e)}});function Rf(e){return null!=e.radius?e.radius:null!=e.size?Math.max(e.size[0],e.size[1],e.size[2]):100}Ao.Shader.import(Ps);var If=l["b"].extend({type:"lines3D",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this._meshLinesMaterial=new Ao.Material({shader:Ao.createShader("ecgl.meshLines3D"),transparent:!0,depthMask:!1}),this._linesMesh=new Ao.Mesh({geometry:new os,material:this._meshLinesMaterial,$ignorePicking:!0}),this._trailMesh=new Df},render:function(e,t,r){this.groupGL.add(this._linesMesh);var i=e.coordinateSystem,n=e.getData();if(i&&i.viewGL){var a=i.viewGL;a.add(this.groupGL),this._updateLines(e,t,r);var o=i.viewGL.isLinearSpace()?"define":"undefine";this._linesMesh.material[o]("fragment","SRGB_DECODE"),this._trailMesh.material[o]("fragment","SRGB_DECODE")}var s=this._trailMesh;if(s.stopAnimation(),e.get("effect.show")){this.groupGL.add(s),s.updateData(n,r,this._linesMesh.geometry),s.__time=s.__time||0;var l=36e5;this._curveEffectsAnimator=s.animate("",{loop:!0}).when(l,{__time:l}).during((function(){s.setAnimationTime(s.__time)})).start()}else this.groupGL.remove(s),this._curveEffectsAnimator=null;this._linesMesh.material.blend=this._trailMesh.material.blend="lighter"===e.get("blendMode")?Ao.additiveBlend:null},pauseEffect:function(){this._curveEffectsAnimator&&this._curveEffectsAnimator.pause()},resumeEffect:function(){this._curveEffectsAnimator&&this._curveEffectsAnimator.resume()},toggleEffect:function(){var e=this._curveEffectsAnimator;e&&(e.isPaused()?e.resume():e.pause())},_updateLines:function(e,t,r){var i=e.getData(),n=e.coordinateSystem,a=this._linesMesh.geometry,o=e.get("polyline");a.expandLine=!0;var s=Rf(n);a.segmentScale=s/20;var l="lineStyle.width".split("."),u=r.getDevicePixelRatio(),h=0;i.each((function(e){var t=i.getItemModel(e),r=t.get(l);null==r&&(r=1),i.setItemVisual(e,"lineWidth",r),h=Math.max(r,h)})),a.useNativeLine=!1;var c=0,d=0;i.each((function(e){var t=i.getItemLayout(e);o?(c+=a.getPolylineVertexCount(t),d+=a.getPolylineTriangleCount(t)):(c+=a.getCubicCurveVertexCount(t[0],t[1],t[2],t[3]),d+=a.getCubicCurveTriangleCount(t[0],t[1],t[2],t[3]))})),a.setVertexCount(c),a.setTriangleCount(d),a.resetOffset();var f=[];i.each((function(e){var t=i.getItemLayout(e),r=wh(i,e),n=Eh(i,e),s=i.getItemVisual(e,"lineWidth")*u;null==n&&(n=1),f=Ao.parseColor(r,f),f[3]*=n,o?a.addPolyline(t,f,s):a.addCubicCurve(t[0],t[1],t[2],t[3],f,s)})),a.dirty()},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}});function Ff(e){e.registerChartView(If),e.registerSeriesModel(Cf),e.registerLayout(Nf),e.registerAction({type:"lines3DPauseEffect",event:"lines3deffectpaused",update:"series.lines3D:pauseEffect"},(function(){})),e.registerAction({type:"lines3DResumeEffect",event:"lines3deffectresumed",update:"series.lines3D:resumeEffect"},(function(){})),e.registerAction({type:"lines3DToggleEffect",event:"lines3deffectchanged",update:"series.lines3D:toggleEffect"},(function(){}))}function Bf(e,t){for(var r=[],i=0;i<t.length;i++)r.push(e.dataToPoint(t[i]));return r}Object(l["X"])(Ff);var zf=l["h"].extend({type:"series.polygons3D",getRegionModel:function(e){return this.getData().getItemModel(e)},getRegionPolygonCoords:function(e){var t=this.coordinateSystem,r=this.getData().getItemModel(e),i=r.option instanceof Array?r.option:r.getShallow("coords");r.get("multiPolygon")||(i=[i]);for(var n=[],a=0;a<i.length;a++){for(var o=[],s=1;s<i[a].length;s++)o.push(Bf(t,i[a][s]));n.push({exterior:Bf(t,i[a][0]),interiors:o})}return n},getInitialData:function(e){var t=new l["e"](["value"],this);return t.hasItemOption=!1,t.initData(e.data,[],(function(e,r,i,n){if(e instanceof Array)return NaN;t.hasItemOption=!0;var a=e.value;return null!=a?a instanceof Array?a[n]:a:void 0})),t},defaultOption:{show:!0,data:null,multiPolygon:!1,progressiveThreshold:1e3,progressive:1e3,zlevel:-10,label:{show:!1,distance:2,textStyle:{fontSize:20,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:4}},itemStyle:{color:"#fff",borderWidth:0,borderColor:"#333"},emphasis:{itemStyle:{color:"#639fc0"},label:{show:!0}}}});l["Y"].merge(zf.prototype,Lu);var Uf=zf,Gf=l["b"].extend({type:"polygons3D",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this._geo3DBuilderList=[],this._currentStep=0},render:function(e,t,r){this.groupGL.removeAll();var i=e.coordinateSystem;i&&i.viewGL&&i.viewGL.add(this.groupGL);var n=this._geo3DBuilderList[0];n||(n=new Lh(r),n.extrudeY="mapbox3D"!==i.type&&"maptalks3D"!==i.type,this._geo3DBuilderList[0]=n),this._updateShaderDefines(i,n),n.update(e,t,r),this._geo3DBuilderList.length=1,this.groupGL.add(n.rootNode)},incrementalPrepareRender:function(e,t,r){this.groupGL.removeAll();var i=e.coordinateSystem;i&&i.viewGL&&i.viewGL.add(this.groupGL),this._currentStep=0},incrementalRender:function(e,t,r,i){var n=this._geo3DBuilderList[this._currentStep],a=t.coordinateSystem;n||(n=new Lh(i),n.extrudeY="mapbox3D"!==a.type&&"maptalks3D"!==a.type,this._geo3DBuilderList[this._currentStep]=n),n.update(t,r,i,e.start,e.end),this.groupGL.add(n.rootNode),this._updateShaderDefines(a,n),this._currentStep++},_updateShaderDefines:function(e,t){var r=e.viewGL.isLinearSpace()?"define":"undefine";t.rootNode.traverse((function(t){t.material&&(t.material[r]("fragment","SRGB_DECODE"),"mapbox3D"!==e.type&&"maptalks3D"!==e.type||(t.material.define("fragment","NORMAL_UP_AXIS",2),t.material.define("fragment","NORMAL_FRONT_AXIS",1)))}))},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}});function kf(e){e.registerChartView(Gf),e.registerSeriesModel(Uf)}Object(l["X"])(kf);var Hf=l["h"].extend({type:"series.surface",dependencies:["globe","grid3D","geo3D"],visualStyleAccessPath:"itemStyle",formatTooltip:function(e){return Md(this,e)},getInitialData:function(e,t){var r=e.data;function i(e){return!(isNaN(e.min)||isNaN(e.max)||isNaN(e.step))}function n(e){var t=l["E"].getPrecisionSafe;return Math.max(t(e.min),t(e.max),t(e.step))+1}if(!r)if(e.parametric){var a=e.parametricEquation||{},o=a.u||{},s=a.v||{};["u","v"].forEach((function(e){i(a[e])})),["x","y","z"].forEach((function(e){a[e]}));var u=Math.floor((o.max+o.step-o.min)/o.step),h=Math.floor((s.max+s.step-s.min)/s.step);r=new Float32Array(u*h*5);var c=n(o),d=n(s);for(E=0,S=0;S<h;S++)for(M=0;M<u;M++){var f=M*o.step+o.min,p=S*s.step+s.min,m=l["E"].round(Math.min(f,o.max),c),g=l["E"].round(Math.min(p,s.max),d);A=a.x(m,g),N=a.y(m,g),L=a.z(m,g);r[E++]=A,r[E++]=N,r[E++]=L,r[E++]=m,r[E++]=g}}else{var _=e.equation||{},v=_.x||{},y=_.y||{};if(["x","y"].forEach((function(e){i(_[e])})),"function"!==typeof _.z)return void 0;var x=Math.floor((v.max+v.step-v.min)/v.step),T=Math.floor((y.max+y.step-y.min)/y.step);r=new Float32Array(x*T*3);for(var b=n(v),w=n(y),E=0,S=0;S<T;S++)for(var M=0;M<x;M++){var A=M*v.step+v.min,N=S*y.step+y.min,C=l["E"].round(Math.min(A,v.max),b),P=l["E"].round(Math.min(N,y.max),w),L=_.z(C,P);r[E++]=C,r[E++]=P,r[E++]=L}}var O=["x","y","z"];e.parametric&&O.push("u","v");var D=Ad(this,O,r);return D},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,grid3DIndex:0,shading:"lambert",parametric:!1,wireframe:{show:!0,lineStyle:{color:"rgba(0,0,0,0.5)",width:1}},equation:{x:{min:-1,max:1,step:.1},y:{min:-1,max:1,step:.1},z:null},parametricEquation:{u:{min:-1,max:1,step:.1},v:{min:-1,max:1,step:.1},x:null,y:null,z:null},dataShape:null,itemStyle:{},animationDurationUpdate:500}});l["Y"].merge(Hf.prototype,Lu);var Vf=Hf,Wf=rs.vec3;function jf(e){return isNaN(e[0])||isNaN(e[1])||isNaN(e[2])}var Xf=l["b"].extend({type:"surface",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node},render:function(e,t,r){var i=this._prevSurfaceMesh;this._prevSurfaceMesh=this._surfaceMesh,this._surfaceMesh=i,this._surfaceMesh||(this._surfaceMesh=this._createSurfaceMesh()),this.groupGL.remove(this._prevSurfaceMesh),this.groupGL.add(this._surfaceMesh);var n=e.coordinateSystem,a=e.get("shading"),o=e.getData(),s="ecgl."+a;if(this._surfaceMesh.material&&this._surfaceMesh.material.shader.name===s||(this._surfaceMesh.material=Ao.createMaterial(s,["VERTEX_COLOR","DOUBLE_SIDED"])),Ao.setMaterialFromModel(a,this._surfaceMesh.material,e,r),n&&n.viewGL){n.viewGL.add(this.groupGL);var l=n.viewGL.isLinearSpace()?"define":"undefine";this._surfaceMesh.material[l]("fragment","SRGB_DECODE")}var u=e.get("parametric"),h=e.get("dataShape");h||(h=this._getDataShape(o,u));var c=e.getModel("wireframe"),d=c.get("lineStyle.width"),f=c.get("show")&&d>0;this._updateSurfaceMesh(this._surfaceMesh,e,h,f);var p=this._surfaceMesh.material;f?(p.define("WIREFRAME_QUAD"),p.set("wireframeLineWidth",d),p.set("wireframeLineColor",Ao.parseColor(c.get("lineStyle.color")))):p.undefine("WIREFRAME_QUAD"),this._initHandler(e,r),this._updateAnimation(e)},_updateAnimation:function(e){Ao.updateVertexAnimation([["prevPosition","position"],["prevNormal","normal"]],this._prevSurfaceMesh,this._surfaceMesh,e)},_createSurfaceMesh:function(){var e=new Ao.Mesh({geometry:new Ao.Geometry({dynamic:!0,sortTriangles:!0}),shadowDepthMaterial:new Ao.Material({shader:new Ao.Shader(Ao.Shader.source("ecgl.sm.depth.vertex"),Ao.Shader.source("ecgl.sm.depth.fragment"))}),culling:!1,renderOrder:10,renderNormal:!0});return e.geometry.createAttribute("barycentric","float",4),e.geometry.createAttribute("prevPosition","float",3),e.geometry.createAttribute("prevNormal","float",3),Object.assign(e.geometry,xh),e},_initHandler:function(e,t){var r=e.getData(),i=this._surfaceMesh,n=e.coordinateSystem;function a(e,t){for(var r=1/0,n=-1,a=[],o=0;o<e.length;o++){i.geometry.attributes.position.get(e[o],a);var s=Wf.dist(t.array,a);s<r&&(r=s,n=e[o])}return n}i.seriesIndex=e.seriesIndex;var o=-1;i.off("mousemove"),i.off("mouseout"),i.on("mousemove",(function(e){var s=a(e.triangle,e.point);if(s>=0){var l=[];i.geometry.attributes.position.get(s,l);for(var u=n.pointToData(l),h=1/0,c=-1,d=[],f=0;f<r.count();f++){d[0]=r.get("x",f),d[1]=r.get("y",f),d[2]=r.get("z",f);var p=Wf.squaredDistance(d,u);p<h&&(c=f,h=p)}c!==o&&t.dispatchAction({type:"grid3DShowAxisPointer",value:u}),o=c,i.dataIndex=c}else i.dataIndex=-1}),this),i.on("mouseout",(function(e){o=-1,i.dataIndex=-1,t.dispatchAction({type:"grid3DHideAxisPointer"})}),this)},_updateSurfaceMesh:function(e,t,r,i){var n=e.geometry,a=t.getData(),o=a.getLayout("points"),s=0;a.each((function(e){a.hasValue(e)||s++}));var l=s||i,u=n.attributes.position,h=n.attributes.normal,c=n.attributes.texcoord0,d=n.attributes.barycentric,f=n.attributes.color,p=r[0],m=r[1],g=t.get("shading"),_="color"!==g;if(l){var v=(p-1)*(m-1)*4;u.init(v),i&&d.init(v)}else u.value=new Float32Array(o);f.init(n.vertexCount),c.init(n.vertexCount);var y=[0,3,1,1,3,2],x=[[1,1,0,0],[0,1,0,1],[1,0,0,1],[1,0,1,0]],T=n.indices=new(n.vertexCount>65535?Uint32Array:Uint16Array)((p-1)*(m-1)*6),b=function(e,t,r){r[1]=e*m+t,r[0]=e*m+t+1,r[3]=(e+1)*m+t+1,r[2]=(e+1)*m+t},w=!1;if(l){var E=[],S=[],M=0;_?h.init(n.vertexCount):h.value=null;for(var A=[[],[],[]],N=[],C=[],P=Wf.create(),L=function(e,t,r){var i=3*t;return r[0]=e[i],r[1]=e[i+1],r[2]=e[i+2],r},O=new Float32Array(o.length),D=new Float32Array(o.length/3*4),R=0;R<a.count();R++)if(a.hasValue(R)){var I=Ao.parseColor(wh(a,R)),F=Eh(a,R);null!=F&&(I[3]*=F),I[3]<.99&&(w=!0);for(var B=0;B<4;B++)D[4*R+B]=I[B]}var z=[1e7,1e7,1e7];for(R=0;R<p-1;R++)for(var U=0;U<m-1;U++){var G=R*(m-1)+U,k=4*G;b(R,U,E);var H=!1;for(B=0;B<4;B++)L(o,E[B],S),jf(S)&&(H=!0);for(B=0;B<4;B++)H?u.set(k+B,z):(L(o,E[B],S),u.set(k+B,S)),i&&d.set(k+B,x[B]);for(B=0;B<6;B++)T[M++]=y[B]+k;if(_&&!H)for(B=0;B<2;B++){for(var V=3*B,W=0;W<3;W++){var j=E[y[V]+W];L(o,j,A[W])}Wf.sub(N,A[0],A[1]),Wf.sub(C,A[1],A[2]),Wf.cross(P,N,C);for(W=0;W<3;W++){var X=3*E[y[V]+W];O[X]=O[X]+P[0],O[X+1]=O[X+1]+P[1],O[X+2]=O[X+2]+P[2]}}}if(_)for(R=0;R<O.length/3;R++)L(O,R,P),Wf.normalize(P,P),O[3*R]=P[0],O[3*R+1]=P[1],O[3*R+2]=P[2];I=[];var q=[];for(R=0;R<p-1;R++)for(U=0;U<m-1;U++){G=R*(m-1)+U,k=4*G;b(R,U,E);for(B=0;B<4;B++){for(W=0;W<4;W++)I[W]=D[4*E[B]+W];f.set(k+B,I),_&&(L(O,E[B],P),h.set(k+B,P));j=E[B];q[0]=j%m/(m-1),q[1]=Math.floor(j/m)/(p-1),c.set(k+B,q)}G++}}else{for(q=[],R=0;R<a.count();R++){q[0]=R%m/(m-1),q[1]=Math.floor(R/m)/(p-1);I=Ao.parseColor(wh(a,R)),F=Eh(a,R);null!=F&&(I[3]*=F),I[3]<.99&&(w=!0),f.set(R,I),c.set(R,q)}E=[];var Y=0;for(R=0;R<p-1;R++)for(U=0;U<m-1;U++){b(R,U,E);for(B=0;B<6;B++)T[Y++]=E[y[B]]}_?n.generateVertexNormals():h.value=null}e.material.get("normalMap")&&n.generateTangents(),n.updateBoundingBox(),n.dirty(),e.material.transparent=w,e.material.depthMask=!w},_getDataShape:function(e,t){for(var r=-1/0,i=0,n=0,a=!1,o=t?"u":"x",s=e.count(),l=0;l<s;l++){var u=e.get(o,l);u<r&&(n,n=0,i++),r=u,n++}if(i&&1!==n||(a=!0),!a)return[i+1,n];var h=Math.floor(Math.sqrt(s));while(h>0){if(Math.floor(s/h)===s/h)return[h,s/h];h--}return h=Math.floor(Math.sqrt(s)),[h,h]},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}});function qf(e){e.registerChartView(Xf),e.registerSeriesModel(Vf),e.registerLayout((function(e,t){e.eachSeriesByType("surface",(function(e){var t=e.coordinateSystem;t&&t.type;var r=e.getData(),i=new Float32Array(3*r.count()),n=[NaN,NaN,NaN];if(t&&"cartesian3D"===t.type){var a=t.dimensions,o=a.map((function(t){return e.coordDimToDataDim(t)[0]}));r.each(o,(function(e,a,o,s){var l;l=r.hasValue(s)?t.dataToPoint([e,a,o]):n,i[3*s]=l[0],i[3*s+1]=l[1],i[3*s+2]=l[2]}))}r.setLayout("points",i)}))}))}function Yf(e,t){for(var r=[],i=0;i<t.length;i++)r.push(e.dataToPoint(t[i]));return r}Object(l["X"])(qf);var Zf=l["h"].extend({type:"series.map3D",layoutMode:"box",coordinateSystem:null,visualStyleAccessPath:"itemStyle",optionUpdated:function(e){e=e||{};var t=this.get("coordinateSystem");null!=t&&"geo3D"!==t&&(this.get("groundPlane.show")&&(this.option.groundPlane.show=!1),this._geo=null)},getInitialData:function(e){e.data=this.getFilledRegions(e.data,e.map);var t=l["A"].createDimensions(e.data,{coordDimensions:["value"]}),r=new l["e"](t,this);r.initData(e.data);var i={};return r.each((function(e){var t=r.getName(e),n=r.getItemModel(e);i[t]=n})),this._regionModelMap=i,r},formatTooltip:function(e){return Md(this,e)},getRegionModel:function(e){var t=this.getData().getName(e);return this._regionModelMap[t]||new l["f"](null,this)},getRegionPolygonCoords:function(e){var t=this.coordinateSystem,r=this.getData().getName(e);if(t.transform){var i=t.getRegion(r);return i?i.geometries:[]}this._geo||(this._geo=Wh.createGeo3D(this));i=this._geo.getRegion(r);for(var n=[],a=0;a<i.geometries.length;a++){var o=i.geometries[a],s=[],l=Yf(t,o.exterior);if(s&&s.length)for(var u=0;u<o.interiors.length;u++)s.push(Yf(t,s[u]));n.push({interiors:s,exterior:l})}return n},getFormattedLabel:function(e,t){var r=Ed.getFormattedLabel(this,e,t);return null==r&&(r=this.getData().getName(e)),r},defaultOption:{coordinateSystem:"geo3D",data:null}});l["Y"].merge(Zf.prototype,Ou),l["Y"].merge(Zf.prototype,Vo),l["Y"].merge(Zf.prototype,Wo),l["Y"].merge(Zf.prototype,jo),l["Y"].merge(Zf.prototype,Lu);var Kf=Zf,Qf=l["b"].extend({type:"map3D",__ecgl__:!0,init:function(e,t){this._geo3DBuilder=new Lh(t),this.groupGL=new Ao.Node},render:function(e,t,r){var i=e.coordinateSystem;if(i&&i.viewGL){if(this.groupGL.add(this._geo3DBuilder.rootNode),i.viewGL.add(this.groupGL),"geo3D"===i.type){i,this._sceneHelper||(this._sceneHelper=new cs,this._sceneHelper.initLight(this.groupGL)),this._sceneHelper.setScene(i.viewGL.scene),this._sceneHelper.updateLight(e),i.viewGL.setPostEffect(e.getModel("postEffect"),r),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling"));var n=this._control;n||(n=this._control=new $o({zr:r.getZr()}),this._control.init());var a=e.getModel("viewControl");n.setViewGL(i.viewGL),n.setFromViewControlModel(a,0),n.off("update"),n.on("update",(function(){r.dispatchAction({type:"map3DChangeCamera",alpha:n.getAlpha(),beta:n.getBeta(),distance:n.getDistance(),from:this.uid,map3DId:e.id})})),this._geo3DBuilder.extrudeY=!0}else this._control&&(this._control.dispose(),this._control=null),this._sceneHelper&&(this._sceneHelper.dispose(),this._sceneHelper=null),e.getData().getLayout("geo3D"),this._geo3DBuilder.extrudeY=!1;this._geo3DBuilder.update(e,t,r,0,e.getData().count());var o=i.viewGL.isLinearSpace()?"define":"undefine";this._geo3DBuilder.rootNode.traverse((function(e){e.material&&e.material[o]("fragment","SRGB_DECODE")}))}},afterRender:function(e,t,r,i){var n=i.renderer,a=e.coordinateSystem;a&&"geo3D"===a.type&&(this._sceneHelper.updateAmbientCubemap(n,e,r),this._sceneHelper.updateSkybox(n,e,r))},dispose:function(){this.groupGL.removeAll(),this._control.dispose()}});function Jf(e){jh(e),e.registerChartView(Qf),e.registerSeriesModel(Kf),e.registerAction({type:"map3DChangeCamera",event:"map3dcamerachanged",update:"series:updateCamera"},(function(e,t){t.eachComponent({mainType:"series",subType:"map3D",query:e},(function(t){t.setView(e)}))}))}Object(l["X"])(Jf);var $f=l["h"].extend({type:"series.scatterGL",dependencies:["grid","polar","geo","singleAxis"],visualStyleAccessPath:"itemStyle",hasSymbolVisual:!0,getInitialData:function(){return l["A"].createList(this)},defaultOption:{coordinateSystem:"cartesian2d",zlevel:10,progressive:1e5,progressiveThreshold:1e5,large:!1,symbol:"circle",symbolSize:10,zoomScale:0,blendMode:"source-over",itemStyle:{opacity:.8},postEffect:{enable:!1,colorCorrection:{exposure:0,brightness:0,contrast:1,saturation:1,enable:!0}}}});function ep(){return[1,0,0,1,0,0]}function tp(e,t){var r=t[0],i=t[2],n=t[4],a=t[1],o=t[3],s=t[5],l=r*o-a*i;return l?(l=1/l,e[0]=o*l,e[1]=-a*l,e[2]=-i*l,e[3]=r*l,e[4]=(i*s-o*n)*l,e[5]=(a*n-r*s)*l,e):null}function rp(e,t,r){var i=t[0],n=t[1];return e[0]=r[0]*i+r[2]*n+r[4],e[1]=r[1]*i+r[3]*n+r[5],e}function ip(e){this.viewGL=e}ip.prototype.reset=function(e,t){this._updateCamera(t.getWidth(),t.getHeight(),t.getDevicePixelRatio()),this._viewTransform=ep(),this.updateTransform(e,t)},ip.prototype.updateTransform=function(e,t){var r=e.coordinateSystem;r.getRoamTransform&&(tp(this._viewTransform,r.getRoamTransform()),this._setCameraTransform(this._viewTransform),t.getZr().refresh())},ip.prototype.dataToPoint=function(e,t,r){r=e.dataToPoint(t,null,r);var i=this._viewTransform;i&&rp(r,r,i)},ip.prototype.removeTransformInPoint=function(e){return this._viewTransform&&rp(e,e,this._viewTransform),e},ip.prototype.getZoom=function(){if(this._viewTransform){var e=this._viewTransform;return 1/Math.max(Math.sqrt(e[0]*e[0]+e[1]*e[1]),Math.sqrt(e[2]*e[2]+e[3]*e[3]))}return 1},ip.prototype._setCameraTransform=function(e){var t=this.viewGL.camera;t.position.set(e[4],e[5],0),t.scale.set(Math.sqrt(e[0]*e[0]+e[1]*e[1]),Math.sqrt(e[2]*e[2]+e[3]*e[3]),1)},ip.prototype._updateCamera=function(e,t,r){this.viewGL.setViewport(0,0,e,t,r);var i=this.viewGL.camera;i.left=i.top=0,i.bottom=t,i.right=e,i.near=0,i.far=100};var np=ip,ap=l["b"].extend({type:"scatterGL",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this.viewGL=new fu("orthographic"),this.viewGL.add(this.groupGL),this._pointsBuilderList=[],this._currentStep=0,this._sizeScale=1,this._glViewHelper=new np(this.viewGL)},render:function(e,t,r){if(this.groupGL.removeAll(),this._glViewHelper.reset(e,r),e.getData().count()){var i=this._pointsBuilderList[0];i||(i=this._pointsBuilderList[0]=new of(!0,r)),this._pointsBuilderList.length=1,this.groupGL.add(i.rootNode),this._removeTransformInPoints(e.getData().getLayout("points")),i.update(e,t,r),this.viewGL.setPostEffect(e.getModel("postEffect"),r)}},incrementalPrepareRender:function(e,t,r){this.groupGL.removeAll(),this._glViewHelper.reset(e,r),this._currentStep=0,this.viewGL.setPostEffect(e.getModel("postEffect"),r)},incrementalRender:function(e,t,r,i){if(!(e.end<=e.start)){var n=this._pointsBuilderList[this._currentStep];n||(n=new of(!0,i),this._pointsBuilderList[this._currentStep]=n),this.groupGL.add(n.rootNode),this._removeTransformInPoints(t.getData().getLayout("points")),n.setSizeScale(this._sizeScale),n.update(t,r,i,e.start,e.end),i.getZr().refresh(),this._currentStep++}},updateTransform:function(e,t,r){if(e.coordinateSystem.getRoamTransform){this._glViewHelper.updateTransform(e,r);var i=this._glViewHelper.getZoom(),n=Math.max((e.get("zoomScale")||0)*(i-1)+1,0);this._sizeScale=n,this._pointsBuilderList.forEach((function(e){e.setSizeScale(n)}))}},_removeTransformInPoints:function(e){if(e)for(var t=[],r=0;r<e.length;r+=2)t[0]=e[r],t[1]=e[r+1],this._glViewHelper.removeTransformInPoint(t),e[r]=t[0],e[r+1]=t[1]},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}});function op(e){e.registerChartView(ap),e.registerSeriesModel($f),e.registerLayout({seriesType:"scatterGL",reset:function(e){var t,r=e.coordinateSystem,i=e.getData();if(r){var n=r.dimensions.map((function(e){return i.mapDimension(e)})).slice(0,2),a=[];1===n.length?t=function(e){for(var t=new Float32Array(2*(e.end-e.start)),a=e.start;a<e.end;a++){var o=2*(a-e.start),s=i.get(n[0],a),l=r.dataToPoint(s);t[o]=l[0],t[o+1]=l[1]}i.setLayout("points",t)}:2===n.length&&(t=function(e){for(var t=new Float32Array(2*(e.end-e.start)),o=e.start;o<e.end;o++){var s=2*(o-e.start),l=i.get(n[0],o),u=i.get(n[1],o);a[0]=l,a[1]=u,a=r.dataToPoint(a),t[s]=a[0],t[s+1]=a[1]}i.setLayout("points",t)})}return{progress:t}}})}Object(l["X"])(op);var sp=r("7368"),lp=r("31d9"),up=function(e,t,r,i,n){for(var a=new sp["a"](i),o=0;o<e.length;o++)a.addNode(Un.firstNotNull(e[o].id,e[o].name,o),o);var s,u=[],h=[],c=0;for(o=0;o<t.length;o++){var d=t[o],f=d.source,p=d.target;a.addEdge(f,p,c)&&(h.push(d),u.push(Un.firstNotNull(d.id,f+" > "+p)),c++)}var m=l["A"].createDimensions(e,{coordDimensions:["value"]});s=new l["e"](m,r),s.initData(e);var g=new l["e"](["value"],r);return g.initData(h,u),n&&n(s,g),Object(lp["a"])({mainData:s,struct:a,structAttr:"graph",datas:{node:s,edge:g},datasAttr:{node:"data",edge:"edgeData"}}),a.update(),a},hp=l["h"].extend({type:"series.graphGL",visualStyleAccessPath:"itemStyle",hasSymbolVisual:!0,init:function(e){hp.superApply(this,"init",arguments),this.legendDataProvider=function(){return this._categoriesData},this._updateCategoriesData()},mergeOption:function(e){hp.superApply(this,"mergeOption",arguments),this._updateCategoriesData()},getFormattedLabel:function(e,t,r,i){var n=Ed.getFormattedLabel(this,e,t,r,i);if(null==n){var a=this.getData(),o=a.dimensions[a.dimensions.length-1];n=a.get(o,e)}return n},getInitialData:function(e,t){var r=e.edges||e.links||[],i=e.data||e.nodes||[],n=this;if(i&&r)return up(i,r,this,!0,a).data;function a(e,r){e.wrapMethod("getItemModel",(function(e){const t=n._categoriesModels,r=e.getShallow("category"),i=t[r];return i&&(i.parentModel=e.parentModel,e.parentModel=i),e}));const i=t.getModel([]).getModel;function a(e,t){const r=i.call(this,e,t);return r.resolveParentPath=o,r}function o(e){if(e&&("label"===e[0]||"label"===e[1])){const t=e.slice();return"label"===e[0]?t[0]="edgeLabel":"label"===e[1]&&(t[1]="edgeLabel"),t}return e}r.wrapMethod("getItemModel",(function(e){return e.resolveParentPath=o,e.getModel=a,e}))}},getGraph:function(){return this.getData().graph},getEdgeData:function(){return this.getGraph().edgeData},getCategoriesData:function(){return this._categoriesData},formatTooltip:function(e,t,r){if("edge"===r){var i=this.getData(),n=this.getDataParams(e,r),a=i.graph.getEdgeByIndex(e),o=i.getName(a.node1.dataIndex),s=i.getName(a.node2.dataIndex),u=[];return null!=o&&u.push(o),null!=s&&u.push(s),u=l["u"].encodeHTML(u.join(" > ")),n.value&&(u+=" : "+l["u"].encodeHTML(n.value)),u}return hp.superApply(this,"formatTooltip",arguments)},_updateCategoriesData:function(){var e=(this.option.categories||[]).map((function(e){return null!=e.value?e:Object.assign({value:0},e)})),t=new l["e"](["value"],this);t.initData(e),this._categoriesData=t,this._categoriesModels=t.mapArray((function(e){return t.getItemModel(e,!0)}))},setView:function(e){null!=e.zoom&&(this.option.zoom=e.zoom),null!=e.offset&&(this.option.offset=e.offset)},setNodePosition:function(e){for(var t=0;t<e.length/2;t++){var r=e[2*t],i=e[2*t+1],n=this.getData().getRawDataItem(t);n.x=r,n.y=i}},isAnimationEnabled:function(){return hp.superCall(this,"isAnimationEnabled")&&!("force"===this.get("layout")&&this.get("force.layoutAnimation"))},defaultOption:{zlevel:10,z:2,legendHoverLink:!0,layout:"forceAtlas2",forceAtlas2:{initLayout:null,GPU:!0,steps:1,maxSteps:1e3,repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,edgeWeightInfluence:1,edgeWeight:[1,4],nodeWeight:[1,4],preventOverlap:!1,gravityCenter:null},focusNodeAdjacency:!0,focusNodeAdjacencyOn:"mouseover",left:"center",top:"center",symbol:"circle",symbolSize:5,roam:!1,center:null,zoom:1,label:{show:!1,formatter:"{b}",position:"right",distance:5,textStyle:{fontSize:14}},itemStyle:{},lineStyle:{color:"#aaa",width:1,opacity:.5},emphasis:{label:{show:!0}},animation:!1}}),cp=hp,dp=rs.vec2,fp=[[0,0],[1,1]],pp=Tr.extend((function(){return{segmentScale:4,dynamic:!0,useNativeLine:!0,attributes:{position:new Tr.Attribute("position","float",2,"POSITION"),normal:new Tr.Attribute("normal","float",2),offset:new Tr.Attribute("offset","float",1),color:new Tr.Attribute("color","float",4,"COLOR")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0,this._itemVertexOffsets=[]},setVertexCount:function(e){var t=this.attributes;this.vertexCount!==e&&(t.position.init(e),t.color.init(e),this.useNativeLine||(t.offset.init(e),t.normal.init(e)),e>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(e){this.triangleCount!==e&&(this.indices=0===e?null:this.vertexCount>65535?new Uint32Array(3*e):new Uint16Array(3*e))},_getCubicCurveApproxStep:function(e,t,r,i){var n=dp.dist(e,t)+dp.dist(r,t)+dp.dist(i,r),a=1/(n+1)*this.segmentScale;return a},getCubicCurveVertexCount:function(e,t,r,i){var n=this._getCubicCurveApproxStep(e,t,r,i),a=Math.ceil(1/n);return this.useNativeLine?2*a:2*a+2},getCubicCurveTriangleCount:function(e,t,r,i){var n=this._getCubicCurveApproxStep(e,t,r,i),a=Math.ceil(1/n);return this.useNativeLine?0:2*a},getLineVertexCount:function(){return this.getPolylineVertexCount(fp)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(fp)},getPolylineVertexCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/2}return this.useNativeLine?2*(t-1):2*(t-1)+2},getPolylineTriangleCount:function(e){var t;if("number"===typeof e)t=e;else{var r="number"!==typeof e[0];t=r?e.length:e.length/2}return this.useNativeLine?0:2*(t-1)},addCubicCurve:function(e,t,r,i,n,a){null==a&&(a=1);var o=e[0],s=e[1],l=t[0],u=t[1],h=r[0],c=r[1],d=i[0],f=i[1],p=this._getCubicCurveApproxStep(e,t,r,i),m=p*p,g=m*p,_=3*p,v=3*m,y=6*m,x=6*g,T=o-2*l+h,b=s-2*u+c,w=3*(l-h)-o+d,E=3*(u-c)-s+f,S=o,M=s,A=(l-o)*_+T*v+w*g,N=(u-s)*_+b*v+E*g,C=T*y+w*x,P=b*y+E*x,L=w*x,O=E*x,D=0,R=0,I=Math.ceil(1/p),F=new Float32Array(3*(I+1)),B=(F=[],0);for(R=0;R<I+1;R++)F[B++]=S,F[B++]=M,S+=A,M+=N,A+=C,N+=P,C+=L,P+=O,D+=p,D>1&&(S=A>0?Math.min(S,d):Math.max(S,d),M=N>0?Math.min(M,f):Math.max(M,f));this.addPolyline(F,n,a)},addLine:function(e,t,r,i){this.addPolyline([e,t],r,i)},addPolyline:function(){var e=dp.create(),t=dp.create(),r=dp.create(),i=dp.create(),n=[],a=[],o=[];return function(s,l,u,h,c){if(s.length){var d="number"!==typeof s[0];if(null==c&&(c=d?s.length:s.length/2),!(c<2)){null==h&&(h=0),null==u&&(u=1),this._itemVertexOffsets.push(this._vertexOffset);for(var f,p=d?"number"!==typeof l[0]:l.length/4===c,m=this.attributes.position,g=this.attributes.color,_=this.attributes.offset,v=this.attributes.normal,y=this.indices,x=this._vertexOffset,T=0;T<c;T++){if(d)n=s[T+h],f=p?l[T+h]:l;else{var b=2*T+h;if(n=n||[],n[0]=s[b],n[1]=s[b+1],p){var w=4*T+h;f=f||[],f[0]=l[w],f[1]=l[w+1],f[2]=l[w+2],f[3]=l[w+3]}else f=l}if(this.useNativeLine)T>1&&(m.copy(x,x-1),g.copy(x,x-1),x++);else{var E;if(T<c-1){if(d)dp.copy(a,s[T+1]);else{b=2*(T+1)+h;a=a||[],a[0]=s[b],a[1]=s[b+1]}if(T>0){dp.sub(e,n,o),dp.sub(t,a,n),dp.normalize(e,e),dp.normalize(t,t),dp.add(i,e,t),dp.normalize(i,i);var S=u/2*Math.min(1/dp.dot(e,i),2);r[0]=-i[1],r[1]=i[0],E=S}else dp.sub(e,a,n),dp.normalize(e,e),r[0]=-e[1],r[1]=e[0],E=u/2}else dp.sub(e,n,o),dp.normalize(e,e),r[0]=-e[1],r[1]=e[0],E=u/2;v.set(x,r),v.set(x+1,r),_.set(x,E),_.set(x+1,-E),dp.copy(o,n),m.set(x,n),m.set(x+1,n),g.set(x,f),g.set(x+1,f),x+=2}if(this.useNativeLine)g.set(x,f),m.set(x,n),x++;else if(T>0){var M=3*this._faceOffset;y=this.indices;y[M]=x-4,y[M+1]=x-3,y[M+2]=x-2,y[M+3]=x-3,y[M+4]=x-1,y[M+5]=x-2,this._faceOffset+=2}}this._vertexOffset=x}}}}(),setItemColor:function(e,t){for(var r=this._itemVertexOffsets[e],i=e<this._itemVertexOffsets.length-1?this._itemVertexOffsets[e+1]:this._vertexOffset,n=r;n<i;n++)this.attributes.color.set(n,t);this.dirty("color")}});l["Y"].defaults(pp.prototype,es);var mp=pp,gp="@export ecgl.forceAtlas2.updateNodeRepulsion\n\n#define NODE_COUNT 0\n\nuniform sampler2D positionTex;\n\nuniform vec2 textureSize;\nuniform float gravity;\nuniform float scaling;\nuniform vec2 gravityCenter;\n\nuniform bool strongGravityMode;\nuniform bool preventOverlap;\n\nvarying vec2 v_Texcoord;\n\nvoid main() {\n\n vec4 n0 = texture2D(positionTex, v_Texcoord);\n\n vec2 force = vec2(0.0);\n for (int i = 0; i < NODE_COUNT; i++) {\n vec2 uv = vec2(\n mod(float(i), textureSize.x) / (textureSize.x - 1.0),\n floor(float(i) / textureSize.x) / (textureSize.y - 1.0)\n );\n vec4 n1 = texture2D(positionTex, uv);\n\n vec2 dir = n0.xy - n1.xy;\n float d2 = dot(dir, dir);\n\n if (d2 > 0.0) {\n float factor = 0.0;\n if (preventOverlap) {\n float d = sqrt(d2);\n d = d - n0.w - n1.w;\n if (d > 0.0) {\n factor = scaling * n0.z * n1.z / (d * d);\n }\n else if (d < 0.0) {\n factor = scaling * 100.0 * n0.z * n1.z;\n }\n }\n else {\n factor = scaling * n0.z * n1.z / d2;\n }\n force += dir * factor;\n }\n }\n\n vec2 dir = gravityCenter - n0.xy;\n float d = 1.0;\n if (!strongGravityMode) {\n d = length(dir);\n }\n\n force += dir * n0.z * gravity / (d + 1.0);\n\n gl_FragColor = vec4(force, 0.0, 1.0);\n}\n@end\n\n@export ecgl.forceAtlas2.updateEdgeAttraction.vertex\n\nattribute vec2 node1;\nattribute vec2 node2;\nattribute float weight;\n\nuniform sampler2D positionTex;\nuniform float edgeWeightInfluence;\nuniform bool preventOverlap;\nuniform bool linLogMode;\n\nuniform vec2 windowSize: WINDOW_SIZE;\n\nvarying vec2 v_Force;\n\nvoid main() {\n\n vec4 n0 = texture2D(positionTex, node1);\n vec4 n1 = texture2D(positionTex, node2);\n\n vec2 dir = n1.xy - n0.xy;\n float d = length(dir);\n float w;\n if (edgeWeightInfluence == 0.0) {\n w = 1.0;\n }\n else if (edgeWeightInfluence == 1.0) {\n w = weight;\n }\n else {\n w = pow(weight, edgeWeightInfluence);\n }\n vec2 offset = vec2(1.0 / windowSize.x, 1.0 / windowSize.y);\n vec2 scale = vec2((windowSize.x - 1.0) / windowSize.x, (windowSize.y - 1.0) / windowSize.y);\n vec2 pos = node1 * scale * 2.0 - 1.0;\n gl_Position = vec4(pos + offset, 0.0, 1.0);\n gl_PointSize = 1.0;\n\n float factor;\n if (preventOverlap) {\n d = d - n1.w - n0.w;\n }\n if (d <= 0.0) {\n v_Force = vec2(0.0);\n return;\n }\n\n if (linLogMode) {\n factor = w * log(d) / d;\n }\n else {\n factor = w;\n }\n v_Force = dir * factor;\n}\n@end\n\n@export ecgl.forceAtlas2.updateEdgeAttraction.fragment\n\nvarying vec2 v_Force;\n\nvoid main() {\n gl_FragColor = vec4(v_Force, 0.0, 0.0);\n}\n@end\n\n@export ecgl.forceAtlas2.calcWeightedSum.vertex\n\nattribute vec2 node;\n\nvarying vec2 v_NodeUv;\n\nvoid main() {\n\n v_NodeUv = node;\n gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n gl_PointSize = 1.0;\n}\n@end\n\n@export ecgl.forceAtlas2.calcWeightedSum.fragment\n\nvarying vec2 v_NodeUv;\n\nuniform sampler2D positionTex;\nuniform sampler2D forceTex;\nuniform sampler2D forcePrevTex;\n\nvoid main() {\n vec2 force = texture2D(forceTex, v_NodeUv).rg;\n vec2 forcePrev = texture2D(forcePrevTex, v_NodeUv).rg;\n\n float mass = texture2D(positionTex, v_NodeUv).z;\n float swing = length(force - forcePrev) * mass;\n float traction = length(force + forcePrev) * 0.5 * mass;\n\n gl_FragColor = vec4(swing, traction, 0.0, 0.0);\n}\n@end\n\n@export ecgl.forceAtlas2.calcGlobalSpeed\n\nuniform sampler2D globalSpeedPrevTex;\nuniform sampler2D weightedSumTex;\nuniform float jitterTolerence;\n\nvoid main() {\n vec2 weightedSum = texture2D(weightedSumTex, vec2(0.5)).xy;\n float prevGlobalSpeed = texture2D(globalSpeedPrevTex, vec2(0.5)).x;\n float globalSpeed = jitterTolerence * jitterTolerence\n * weightedSum.y / weightedSum.x;\n if (prevGlobalSpeed > 0.0) {\n globalSpeed = min(globalSpeed / prevGlobalSpeed, 1.5) * prevGlobalSpeed;\n }\n gl_FragColor = vec4(globalSpeed, 0.0, 0.0, 1.0);\n}\n@end\n\n@export ecgl.forceAtlas2.updatePosition\n\nuniform sampler2D forceTex;\nuniform sampler2D forcePrevTex;\nuniform sampler2D positionTex;\nuniform sampler2D globalSpeedTex;\n\nvarying vec2 v_Texcoord;\n\nvoid main() {\n vec2 force = texture2D(forceTex, v_Texcoord).xy;\n vec2 forcePrev = texture2D(forcePrevTex, v_Texcoord).xy;\n vec4 node = texture2D(positionTex, v_Texcoord);\n\n float globalSpeed = texture2D(globalSpeedTex, vec2(0.5)).r;\n float swing = length(force - forcePrev);\n float speed = 0.1 * globalSpeed / (0.1 + globalSpeed * sqrt(swing));\n\n float df = length(force);\n if (df > 0.0) {\n speed = min(df * speed, 10.0) / df;\n\n gl_FragColor = vec4(node.xy + speed * force, node.zw);\n }\n else {\n gl_FragColor = node;\n }\n}\n@end\n\n@export ecgl.forceAtlas2.edges.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec2 node;\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n\nuniform sampler2D positionTex;\n\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(\n texture2D(positionTex, node).xy, -10.0, 1.0\n );\n v_Color = a_Color;\n}\n@end\n\n@export ecgl.forceAtlas2.edges.fragment\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nvarying vec4 v_Color;\nvoid main() {\n gl_FragColor = color * v_Color;\n}\n@end";Ao.Shader.import(gp);var _p={repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,scaling:1,edgeWeightInfluence:1,jitterTolerence:.1,preventOverlap:!1,dissuadeHubs:!1,gravityCenter:null};function vp(e){var t={type:Ao.Texture.FLOAT,minFilter:Ao.Texture.NEAREST,magFilter:Ao.Texture.NEAREST};this._positionSourceTex=new Ao.Texture2D(t),this._positionSourceTex.flipY=!1,this._positionTex=new Ao.Texture2D(t),this._positionPrevTex=new Ao.Texture2D(t),this._forceTex=new Ao.Texture2D(t),this._forcePrevTex=new Ao.Texture2D(t),this._weightedSumTex=new Ao.Texture2D(t),this._weightedSumTex.width=this._weightedSumTex.height=1,this._globalSpeedTex=new Ao.Texture2D(t),this._globalSpeedPrevTex=new Ao.Texture2D(t),this._globalSpeedTex.width=this._globalSpeedTex.height=1,this._globalSpeedPrevTex.width=this._globalSpeedPrevTex.height=1,this._nodeRepulsionPass=new bn({fragment:Ao.Shader.source("ecgl.forceAtlas2.updateNodeRepulsion")}),this._positionPass=new bn({fragment:Ao.Shader.source("ecgl.forceAtlas2.updatePosition")}),this._globalSpeedPass=new bn({fragment:Ao.Shader.source("ecgl.forceAtlas2.calcGlobalSpeed")}),this._copyPass=new bn({fragment:Ao.Shader.source("clay.compositor.output")});var r=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ONE)};this._edgeForceMesh=new Ao.Mesh({geometry:new Ao.Geometry({attributes:{node1:new Ao.Geometry.Attribute("node1","float",2),node2:new Ao.Geometry.Attribute("node2","float",2),weight:new Ao.Geometry.Attribute("weight","float",1)},dynamic:!0,mainAttribute:"node1"}),material:new Ao.Material({transparent:!0,shader:Ao.createShader("ecgl.forceAtlas2.updateEdgeAttraction"),blend:r,depthMask:!1,depthText:!1}),mode:Ao.Mesh.POINTS}),this._weightedSumMesh=new Ao.Mesh({geometry:new Ao.Geometry({attributes:{node:new Ao.Geometry.Attribute("node","float",2)},dynamic:!0,mainAttribute:"node"}),material:new Ao.Material({transparent:!0,shader:Ao.createShader("ecgl.forceAtlas2.calcWeightedSum"),blend:r,depthMask:!1,depthText:!1}),mode:Ao.Mesh.POINTS}),this._framebuffer=new vi({depthBuffer:!1}),this._dummyCamera=new Ao.OrthographicCamera({left:-1,right:1,top:1,bottom:-1,near:0,far:100}),this._globalSpeed=0}vp.prototype.updateOption=function(e){for(var t in _p)this[t]=_p[t];var r=this._nodes.length;if(this.jitterTolerence=r>5e4?10:r>5e3?1:.1,this.scaling=r>100?2:10,e)for(var t in _p)null!=e[t]&&(this[t]=e[t]);if(this.repulsionByDegree)for(var i=this._positionSourceTex.pixels,n=0;n<this._nodes.length;n++)i[4*n+2]=(this._nodes[n].degree||0)+1},vp.prototype._updateGravityCenter=function(e){var t=this._nodes,r=this._edges;if(this.gravityCenter)this._gravityCenter=this.gravityCenter;else{for(var i=[1/0,1/0],n=[-1/0,-1/0],a=0;a<t.length;a++)i[0]=Math.min(t[a].x,i[0]),i[1]=Math.min(t[a].y,i[1]),n[0]=Math.max(t[a].x,n[0]),n[1]=Math.max(t[a].y,n[1]);this._gravityCenter=[.5*(i[0]+n[0]),.5*(i[1]+n[1])]}for(a=0;a<r.length;a++){var o=r[a].node1,s=r[a].node2;t[o].degree=(t[o].degree||0)+1,t[s].degree=(t[s].degree||0)+1}},vp.prototype.initData=function(e,t){this._nodes=e,this._edges=t,this._updateGravityCenter();var r=Math.ceil(Math.sqrt(e.length)),i=r,n=new Float32Array(r*i*4);this._resize(r,i);for(var a=0,o=0;o<e.length;o++){var s=e[o];n[a++]=s.x||0,n[a++]=s.y||0,n[a++]=s.mass||1,n[a++]=s.size||1}this._positionSourceTex.pixels=n;var l=this._edgeForceMesh.geometry,u=t.length;l.attributes.node1.init(2*u),l.attributes.node2.init(2*u),l.attributes.weight.init(2*u);var h=[];for(o=0;o<t.length;o++){var c=l.attributes,d=t[o].weight;null==d&&(d=1),c.node1.set(o,this.getNodeUV(t[o].node1,h)),c.node2.set(o,this.getNodeUV(t[o].node2,h)),c.weight.set(o,d),c.node1.set(o+u,this.getNodeUV(t[o].node2,h)),c.node2.set(o+u,this.getNodeUV(t[o].node1,h)),c.weight.set(o+u,d)}var f=this._weightedSumMesh.geometry;f.attributes.node.init(e.length);for(o=0;o<e.length;o++)f.attributes.node.set(o,this.getNodeUV(o,h));l.dirty(),f.dirty(),this._nodeRepulsionPass.material.define("fragment","NODE_COUNT",e.length),this._nodeRepulsionPass.material.setUniform("textureSize",[r,i]),this._inited=!1,this._frame=0},vp.prototype.getNodes=function(){return this._nodes},vp.prototype.getEdges=function(){return this._edges},vp.prototype.step=function(e){this._inited||(this._initFromSource(e),this._inited=!0),this._frame++,this._framebuffer.attach(this._forceTex),this._framebuffer.bind(e);var t=this._nodeRepulsionPass;t.setUniform("strongGravityMode",this.strongGravityMode),t.setUniform("gravity",this.gravity),t.setUniform("gravityCenter",this._gravityCenter),t.setUniform("scaling",this.scaling),t.setUniform("preventOverlap",this.preventOverlap),t.setUniform("positionTex",this._positionPrevTex),t.render(e);var r=this._edgeForceMesh;r.material.set("linLogMode",this.linLogMode),r.material.set("edgeWeightInfluence",this.edgeWeightInfluence),r.material.set("preventOverlap",this.preventOverlap),r.material.set("positionTex",this._positionPrevTex),e.gl.enable(e.gl.BLEND),e.renderPass([r],this._dummyCamera),this._framebuffer.attach(this._weightedSumTex),e.gl.clearColor(0,0,0,0),e.gl.clear(e.gl.COLOR_BUFFER_BIT),e.gl.enable(e.gl.BLEND);var i=this._weightedSumMesh;i.material.set("positionTex",this._positionPrevTex),i.material.set("forceTex",this._forceTex),i.material.set("forcePrevTex",this._forcePrevTex),e.renderPass([i],this._dummyCamera),this._framebuffer.attach(this._globalSpeedTex);var n=this._globalSpeedPass;n.setUniform("globalSpeedPrevTex",this._globalSpeedPrevTex),n.setUniform("weightedSumTex",this._weightedSumTex),n.setUniform("jitterTolerence",this.jitterTolerence),e.gl.disable(e.gl.BLEND),n.render(e);var a=this._positionPass;this._framebuffer.attach(this._positionTex),a.setUniform("globalSpeedTex",this._globalSpeedTex),a.setUniform("positionTex",this._positionPrevTex),a.setUniform("forceTex",this._forceTex),a.setUniform("forcePrevTex",this._forcePrevTex),a.render(e),this._framebuffer.unbind(e),this._swapTexture()},vp.prototype.update=function(e,t,r){null==t&&(t=1),t=Math.max(t,1);for(var i=0;i<t;i++)this.step(e);r&&r()},vp.prototype.getNodePositionTexture=function(){return this._inited?this._positionPrevTex:this._positionSourceTex},vp.prototype.getNodeUV=function(e,t){t=t||[];var r=this._positionTex.width,i=this._positionTex.height;return t[0]=e%r/(r-1),t[1]=Math.floor(e/r)/(i-1)||0,t},vp.prototype.getNodePosition=function(e,t){var r=this._positionArr,i=this._positionTex.width,n=this._positionTex.height,a=i*n;r&&r.length===4*a||(r=this._positionArr=new Float32Array(4*a)),this._framebuffer.bind(e),this._framebuffer.attach(this._positionPrevTex),e.gl.readPixels(0,0,i,n,e.gl.RGBA,e.gl.FLOAT,r),this._framebuffer.unbind(e),t||(t=new Float32Array(2*this._nodes.length));for(var o=0;o<this._nodes.length;o++)t[2*o]=r[4*o],t[2*o+1]=r[4*o+1];return t},vp.prototype.getTextureData=function(e,t){var r=this["_"+t+"Tex"],i=r.width,n=r.height;this._framebuffer.bind(e),this._framebuffer.attach(r);var a=new Float32Array(i*n*4);return e.gl.readPixels(0,0,i,n,e.gl.RGBA,e.gl.FLOAT,a),this._framebuffer.unbind(e),a},vp.prototype.getTextureSize=function(){return{width:this._positionTex.width,height:this._positionTex.height}},vp.prototype.isFinished=function(e){return this._frame>e},vp.prototype._swapTexture=function(){var e=this._positionPrevTex;this._positionPrevTex=this._positionTex,this._positionTex=e;e=this._forcePrevTex;this._forcePrevTex=this._forceTex,this._forceTex=e;e=this._globalSpeedPrevTex;this._globalSpeedPrevTex=this._globalSpeedTex,this._globalSpeedTex=e},vp.prototype._initFromSource=function(e){this._framebuffer.attach(this._positionPrevTex),this._framebuffer.bind(e),this._copyPass.setUniform("texture",this._positionSourceTex),this._copyPass.render(e),e.gl.clearColor(0,0,0,0),this._framebuffer.attach(this._forcePrevTex),e.gl.clear(e.gl.COLOR_BUFFER_BIT),this._framebuffer.attach(this._globalSpeedPrevTex),e.gl.clear(e.gl.COLOR_BUFFER_BIT),this._framebuffer.unbind(e)},vp.prototype._resize=function(e,t){["_positionSourceTex","_positionTex","_positionPrevTex","_forceTex","_forcePrevTex"].forEach((function(r){this[r].width=e,this[r].height=t,this[r].dirty()}),this)},vp.prototype.dispose=function(e){this._framebuffer.dispose(e),this._copyPass.dispose(e),this._nodeRepulsionPass.dispose(e),this._positionPass.dispose(e),this._globalSpeedPass.dispose(e),this._edgeForceMesh.geometry.dispose(e),this._weightedSumMesh.geometry.dispose(e),this._positionSourceTex.dispose(e),this._positionTex.dispose(e),this._positionPrevTex.dispose(e),this._forceTex.dispose(e),this._forcePrevTex.dispose(e),this._weightedSumTex.dispose(e),this._globalSpeedTex.dispose(e),this._globalSpeedPrevTex.dispose(e)};var yp=vp;function xp(){var e={create:function(){return new Float32Array(2)},dist:function(e,t){var r=t[0]-e[0],i=t[1]-e[1];return Math.sqrt(r*r+i*i)},len:function(e){var t=e[0],r=e[1];return Math.sqrt(t*t+r*r)},scaleAndAdd:function(e,t,r,i){return e[0]=t[0]+r[0]*i,e[1]=t[1]+r[1]*i,e},scale:function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e},add:function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e},sub:function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e},normalize:function(e,t){var r=t[0],i=t[1],n=r*r+i*i;return n>0&&(n=1/Math.sqrt(n),e[0]=t[0]*n,e[1]=t[1]*n),e},negate:function(e,t){return e[0]=-t[0],e[1]=-t[1],e},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e},set:function(e,t,r){return e[0]=t,e[1]=r,e}};function t(){this.subRegions=[],this.nSubRegions=0,this.node=null,this.mass=0,this.centerOfMass=null,this.bbox=new Float32Array(4),this.size=0}var r=t.prototype;function i(){this.position=new Float32Array(2),this.force=e.create(),this.forcePrev=e.create(),this.mass=1,this.inDegree=0,this.outDegree=0}function n(e,t){this.source=e,this.target=t,this.weight=1}function a(){this.autoSettings=!0,this.barnesHutOptimize=!0,this.barnesHutTheta=1.5,this.repulsionByDegree=!0,this.linLogMode=!1,this.strongGravityMode=!1,this.gravity=1,this.scaling=1,this.edgeWeightInfluence=1,this.jitterTolerence=.1,this.preventOverlap=!1,this.dissuadeHubs=!1,this.rootRegion=new t,this.rootRegion.centerOfMass=e.create(),this.nodes=[],this.edges=[],this.bbox=new Float32Array(4),this.gravityCenter=null,this._massArr=null,this._swingingArr=null,this._sizeArr=null,this._globalSpeed=0}r.beforeUpdate=function(){for(var e=0;e<this.nSubRegions;e++)this.subRegions[e].beforeUpdate();this.mass=0,this.centerOfMass&&(this.centerOfMass[0]=0,this.centerOfMass[1]=0),this.nSubRegions=0,this.node=null},r.afterUpdate=function(){this.subRegions.length=this.nSubRegions;for(var e=0;e<this.nSubRegions;e++)this.subRegions[e].afterUpdate()},r.addNode=function(e){if(0===this.nSubRegions){if(null==this.node)return void(this.node=e);this._addNodeToSubRegion(this.node),this.node=null}this._addNodeToSubRegion(e),this._updateCenterOfMass(e)},r.findSubRegion=function(e,t){for(var r=0;r<this.nSubRegions;r++){var i=this.subRegions[r];if(i.contain(e,t))return i}},r.contain=function(e,t){return this.bbox[0]<=e&&this.bbox[2]>=e&&this.bbox[1]<=t&&this.bbox[3]>=t},r.setBBox=function(e,t,r,i){this.bbox[0]=e,this.bbox[1]=t,this.bbox[2]=r,this.bbox[3]=i,this.size=(r-e+i-t)/2},r._newSubRegion=function(){var e=this.subRegions[this.nSubRegions];return e||(e=new t,this.subRegions[this.nSubRegions]=e),this.nSubRegions++,e},r._addNodeToSubRegion=function(e){var t=this.findSubRegion(e.position[0],e.position[1]),r=this.bbox;if(!t){var i=(r[0]+r[2])/2,n=(r[1]+r[3])/2,a=(r[2]-r[0])/2,o=(r[3]-r[1])/2,s=e.position[0]>=i?1:0,l=e.position[1]>=n?1:0;t=this._newSubRegion();t.setBBox(s*a+r[0],l*o+r[1],(s+1)*a+r[0],(l+1)*o+r[1])}t.addNode(e)},r._updateCenterOfMass=function(e){null==this.centerOfMass&&(this.centerOfMass=new Float32Array(2));var t=this.centerOfMass[0]*this.mass,r=this.centerOfMass[1]*this.mass;t+=e.position[0]*e.mass,r+=e.position[1]*e.mass,this.mass+=e.mass,this.centerOfMass[0]=t/this.mass,this.centerOfMass[1]=r/this.mass};var o=a.prototype;o.initNodes=function(e,t,r){var n=t.length;this.nodes.length=0;for(var a="undefined"!=typeof r,o=0;o<n;o++){var s=new i;s.position[0]=e[2*o],s.position[1]=e[2*o+1],s.mass=t[o],a&&(s.size=r[o]),this.nodes.push(s)}this._massArr=t,this._swingingArr=new Float32Array(n),a&&(this._sizeArr=r)},o.initEdges=function(e,t){var r=e.length/2;this.edges.length=0;for(var i=0;i<r;i++){var a=e[2*i],o=e[2*i+1],s=this.nodes[a],l=this.nodes[o];if(!s||!l)return void console.error("Node not exists, try initNodes before initEdges");s.outDegree++,l.inDegree++;var u=new n(s,l);t&&(u.weight=t[i]),this.edges.push(u)}},o.updateSettings=function(){if(this.repulsionByDegree)for(var e=0;e<this.nodes.length;e++){var t=this.nodes[e];t.mass=t.inDegree+t.outDegree+1}else for(e=0;e<this.nodes.length;e++){t=this.nodes[e];t.mass=this._massArr[e]}},o.update=function(){var t=this.nodes.length;if(this.updateSettings(),this.updateBBox(),this.barnesHutOptimize){this.rootRegion.setBBox(this.bbox[0],this.bbox[1],this.bbox[2],this.bbox[3]),this.rootRegion.beforeUpdate();for(var r=0;r<t;r++)this.rootRegion.addNode(this.nodes[r]);this.rootRegion.afterUpdate()}for(r=0;r<t;r++){var i=this.nodes[r];e.copy(i.forcePrev,i.force),e.set(i.force,0,0)}for(r=0;r<t;r++){var n=this.nodes[r];if(this.barnesHutOptimize)this.applyRegionToNodeRepulsion(this.rootRegion,n);else for(var a=r+1;a<t;a++){var o=this.nodes[a];this.applyNodeToNodeRepulsion(n,o,!1)}this.gravity>0&&(this.strongGravityMode?this.applyNodeStrongGravity(n):this.applyNodeGravity(n))}for(r=0;r<this.edges.length;r++)this.applyEdgeAttraction(this.edges[r]);var s=0,l=0,u=e.create();for(r=0;r<t;r++){i=this.nodes[r];var h=e.dist(i.force,i.forcePrev);s+=h*i.mass,e.add(u,i.force,i.forcePrev);var c=.5*e.len(u);l+=c*i.mass,this._swingingArr[r]=h}var d=this.jitterTolerence*this.jitterTolerence*l/s;this._globalSpeed>0&&(d=Math.min(d/this._globalSpeed,1.5)*this._globalSpeed),this._globalSpeed=d;for(r=0;r<t;r++){i=this.nodes[r],h=this._swingingArr[r];var f=.1*d/(1+d*Math.sqrt(h)),p=e.len(i.force);p>0&&(f=Math.min(p*f,10)/p,e.scaleAndAdd(i.position,i.position,i.force,f))}},o.applyRegionToNodeRepulsion=function(){var t=e.create();return function(r,i){if(r.node)this.applyNodeToNodeRepulsion(r.node,i,!0);else{e.sub(t,i.position,r.centerOfMass);var n=t[0]*t[0]+t[1]*t[1];if(n>this.barnesHutTheta*r.size*r.size){var a=this.scaling*i.mass*r.mass/n;e.scaleAndAdd(i.force,i.force,t,a)}else for(var o=0;o<r.nSubRegions;o++)this.applyRegionToNodeRepulsion(r.subRegions[o],i)}}}(),o.applyNodeToNodeRepulsion=function(){var t=e.create();return function(r,i,n){if(r!=i){e.sub(t,r.position,i.position);var a=t[0]*t[0]+t[1]*t[1];if(0!==a){var o;if(this.preventOverlap){var s=Math.sqrt(a);if(s=s-r.size-i.size,s>0)o=this.scaling*r.mass*i.mass/(s*s);else{if(!(s<0))return;o=100*this.scaling*r.mass*i.mass}}else o=this.scaling*r.mass*i.mass/a;e.scaleAndAdd(r.force,r.force,t,o),e.scaleAndAdd(i.force,i.force,t,-o)}}}}(),o.applyEdgeAttraction=function(){var t=e.create();return function(r){var i=r.source,n=r.target;e.sub(t,i.position,n.position);var a,o,s=e.len(t);a=0===this.edgeWeightInfluence?1:1===this.edgeWeightInfluence?r.weight:Math.pow(r.weight,this.edgeWeightInfluence),this.preventOverlap&&(s=s-i.size-n.size,s<=0)||(o=this.linLogMode?-a*Math.log(s+1)/(s+1):-a,e.scaleAndAdd(i.force,i.force,t,o),e.scaleAndAdd(n.force,n.force,t,-o))}}(),o.applyNodeGravity=function(){var t=e.create();return function(r){e.sub(t,this.gravityCenter,r.position);var i=e.len(t);e.scaleAndAdd(r.force,r.force,t,this.gravity*r.mass/(i+1))}}(),o.applyNodeStrongGravity=function(){var t=e.create();return function(r){e.sub(t,this.gravityCenter,r.position),e.scaleAndAdd(r.force,r.force,t,this.gravity*r.mass)}}(),o.updateBBox=function(){for(var e=1/0,t=1/0,r=-1/0,i=-1/0,n=0;n<this.nodes.length;n++){var a=this.nodes[n].position;e=Math.min(e,a[0]),t=Math.min(t,a[1]),r=Math.max(r,a[0]),i=Math.max(i,a[1])}this.bbox[0]=e,this.bbox[1]=t,this.bbox[2]=r,this.bbox[3]=i},o.getGlobalSpeed=function(){return this._globalSpeed};var s=null;self.onmessage=function(e){switch(e.data.cmd){case"init":s=new a,s.initNodes(e.data.nodesPosition,e.data.nodesMass,e.data.nodesSize),s.initEdges(e.data.edges,e.data.edgesWeight);break;case"updateConfig":if(s)for(var t in e.data.config)s[t]=e.data.config[t];break;case"update":var r=e.data.steps;if(s){for(var i=0;i<r;i++)s.update();var n=s.nodes.length,o=new Float32Array(2*n);for(i=0;i<n;i++){var l=s.nodes[i];o[2*i]=l.position[0],o[2*i+1]=l.position[1]}self.postMessage({buffer:o.buffer,globalSpeed:s.getGlobalSpeed()},[o.buffer])}else{var u=new Float32Array;self.postMessage({buffer:u.buffer,globalSpeed:s.getGlobalSpeed()},[u.buffer])}break}}}var Tp=xp,bp=Tp.toString();bp=bp.slice(bp.indexOf("{")+1,bp.lastIndexOf("}"));var wp={barnesHutOptimize:!0,barnesHutTheta:1.5,repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,scaling:1,edgeWeightInfluence:1,jitterTolerence:.1,preventOverlap:!1,dissuadeHubs:!1,gravityCenter:null},Ep=function(e){for(var t in wp)this[t]=wp[t];if(e)for(var t in e)this[t]=e[t];this._nodes=[],this._edges=[],this._disposed=!1,this._positionTex=new lr({type:$t.FLOAT,flipY:!1,minFilter:$t.NEAREST,magFilter:$t.NEAREST})};Ep.prototype.initData=function(e,t){var r=new Blob([bp]),i=window.URL.createObjectURL(r);this._worker=new Worker(i),this._worker.onmessage=this._$onupdate.bind(this),this._nodes=e,this._edges=t,this._frame=0;for(var n=e.length,a=t.length,o=new Float32Array(2*n),s=new Float32Array(n),l=new Float32Array(n),u=new Float32Array(2*a),h=new Float32Array(a),c=0;c<e.length;c++){var d=e[c];o[2*c]=d.x,o[2*c+1]=d.y,s[c]=null==d.mass?1:d.mass,l[c]=null==d.size?1:d.size}for(c=0;c<t.length;c++){var f=t[c],p=f.node1,m=f.node2;u[2*c]=p,u[2*c+1]=m,h[c]=null==f.weight?1:f.weight}var g=Math.ceil(Math.sqrt(e.length)),_=g,v=new Float32Array(g*_*4),y=this._positionTex;y.width=g,y.height=_,y.pixels=v,this._worker.postMessage({cmd:"init",nodesPosition:o,nodesMass:s,nodesSize:l,edges:u,edgesWeight:h}),this._globalSpeed=1/0},Ep.prototype.updateOption=function(e){var t={};for(var r in wp)t[r]=wp[r];var i=this._nodes,n=this._edges,a=i.length;if(t.jitterTolerence=a>5e4?10:a>5e3?1:.1,t.scaling=a>100?2:10,t.barnesHutOptimize=a>1e3,e)for(var r in wp)null!=e[r]&&(t[r]=e[r]);if(!t.gravityCenter){for(var o=[1/0,1/0],s=[-1/0,-1/0],l=0;l<i.length;l++)o[0]=Math.min(i[l].x,o[0]),o[1]=Math.min(i[l].y,o[1]),s[0]=Math.max(i[l].x,s[0]),s[1]=Math.max(i[l].y,s[1]);t.gravityCenter=[.5*(o[0]+s[0]),.5*(o[1]+s[1])]}for(l=0;l<n.length;l++){var u=n[l].node1,h=n[l].node2;i[u].degree=(i[u].degree||0)+1,i[h].degree=(i[h].degree||0)+1}this._worker&&this._worker.postMessage({cmd:"updateConfig",config:t})},Ep.prototype.update=function(e,t,r){null==t&&(t=1),t=Math.max(t,1),this._frame+=t,this._onupdate=r,this._worker&&this._worker.postMessage({cmd:"update",steps:Math.round(t)})},Ep.prototype._$onupdate=function(e){if(!this._disposed){var t=new Float32Array(e.data.buffer);this._globalSpeed=e.data.globalSpeed,this._positionArr=t,this._updateTexture(t),this._onupdate&&this._onupdate()}},Ep.prototype.getNodePositionTexture=function(){return this._positionTex},Ep.prototype.getNodeUV=function(e,t){t=t||[];var r=this._positionTex.width,i=this._positionTex.height;return t[0]=e%r/(r-1),t[1]=Math.floor(e/r)/(i-1),t},Ep.prototype.getNodes=function(){return this._nodes},Ep.prototype.getEdges=function(){return this._edges},Ep.prototype.isFinished=function(e){return this._frame>e},Ep.prototype.getNodePosition=function(e,t){if(t||(t=new Float32Array(2*this._nodes.length)),this._positionArr)for(var r=0;r<this._positionArr.length;r++)t[r]=this._positionArr[r];return t},Ep.prototype._updateTexture=function(e){for(var t=this._positionTex.pixels,r=0,i=0;i<e.length;)t[r++]=e[i++],t[r++]=e[i++],t[r++]=1,t[r++]=1;this._positionTex.dirty()},Ep.prototype.dispose=function(e){this._disposed=!0,this._worker=null};var Sp=Ep,Mp=S.extend((function(){return{zr:null,viewGL:null,minZoom:.2,maxZoom:5,_needsUpdate:!1,_dx:0,_dy:0,_zoom:1}}),(function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._update=this._update.bind(this)}),{init:function(){var e=this.zr;e.on("mousedown",this._mouseDownHandler),e.on("mousewheel",this._mouseWheelHandler),e.on("globalout",this._mouseUpHandler),e.animation.on("frame",this._update)},setTarget:function(e){this._target=e},setZoom:function(e){this._zoom=Math.max(Math.min(e,this.maxZoom),this.minZoom),this._needsUpdate=!0},setOffset:function(e){this._dx=e[0],this._dy=e[1],this._needsUpdate=!0},getZoom:function(){return this._zoom},getOffset:function(){return[this._dx,this._dy]},_update:function(){if(this._target&&this._needsUpdate){var e=this._target,t=this._zoom;e.position.x=this._dx,e.position.y=this._dy,e.scale.set(t,t,t),this.zr.refresh(),this._needsUpdate=!1,this.trigger("update")}},_mouseDownHandler:function(e){if(!e.target){var t=e.offsetX,r=e.offsetY;if(!this.viewGL||this.viewGL.containPoint(t,r)){this.zr.on("mousemove",this._mouseMoveHandler),this.zr.on("mouseup",this._mouseUpHandler);var i=this._convertPos(t,r);this._x=i.x,this._y=i.y}}},_convertPos:function(e,t){var r=this.viewGL.camera,i=this.viewGL.viewport;return{x:(e-i.x)/i.width*(r.right-r.left)+r.left,y:(t-i.y)/i.height*(r.bottom-r.top)+r.top}},_mouseMoveHandler:function(e){var t=this._convertPos(e.offsetX,e.offsetY);this._dx+=t.x-this._x,this._dy+=t.y-this._y,this._x=t.x,this._y=t.y,this._needsUpdate=!0},_mouseUpHandler:function(e){this.zr.off("mousemove",this._mouseMoveHandler),this.zr.off("mouseup",this._mouseUpHandler)},_mouseWheelHandler:function(e){e=e.event;var t=e.wheelDelta||-e.detail;if(0!==t){var r=e.offsetX,i=e.offsetY;if(!this.viewGL||this.viewGL.containPoint(r,i)){var n=t>0?1.1:.9,a=Math.max(Math.min(this._zoom*n,this.maxZoom),this.minZoom);n=a/this._zoom;var o=this._convertPos(r,i),s=(o.x-this._dx)*(n-1),l=(o.y-this._dy)*(n-1);this._dx-=s,this._dy-=l,this._zoom=a,this._needsUpdate=!0}}},dispose:function(){var e=this.zr;e.off("mousedown",this._mouseDownHandler),e.off("mousemove",this._mouseMoveHandler),e.off("mouseup",this._mouseUpHandler),e.off("mousewheel",this._mouseWheelHandler),e.off("globalout",this._mouseUpHandler),e.animation.off("frame",this._update)}}),Ap=Mp,Np="@export ecgl.lines2D.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec2 position: POSITION;\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n\n#ifdef POSITIONTEXTURE_ENABLED\nuniform sampler2D positionTexture;\n#endif\n\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);\n\n v_Color = a_Color;\n}\n\n@end\n\n@export ecgl.lines2D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\n\nvoid main()\n{\n gl_FragColor = color * v_Color;\n}\n@end\n\n\n@export ecgl.meshLines2D.vertex\n\nattribute vec2 position: POSITION;\nattribute vec2 normal;\nattribute float offset;\nattribute vec4 a_Color : COLOR;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec4 viewport : VIEWPORT;\n\nvarying vec4 v_Color;\nvarying float v_Miter;\n\nvoid main()\n{\n vec4 p2 = worldViewProjection * vec4(position + normal, -10.0, 1.0);\n gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);\n\n p2.xy /= p2.w;\n gl_Position.xy /= gl_Position.w;\n\n vec2 N = normalize(p2.xy - gl_Position.xy);\n gl_Position.xy += N * offset / viewport.zw * 2.0;\n\n gl_Position.xy *= gl_Position.w;\n\n v_Color = a_Color;\n}\n@end\n\n\n@export ecgl.meshLines2D.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvarying vec4 v_Color;\nvarying float v_Miter;\n\nvoid main()\n{\n gl_FragColor = color * v_Color;\n}\n\n@end",Cp=rs.vec2;Ao.Shader.import(Np);var Pp=1,Lp=l["b"].extend({type:"graphGL",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this.viewGL=new fu("orthographic"),this.viewGL.camera.left=this.viewGL.camera.right=0,this.viewGL.add(this.groupGL),this._pointsBuilder=new of(!0,t),this._forceEdgesMesh=new Ao.Mesh({material:new Ao.Material({shader:Ao.createShader("ecgl.forceAtlas2.edges"),transparent:!0,depthMask:!1,depthTest:!1}),$ignorePicking:!0,geometry:new Ao.Geometry({attributes:{node:new Ao.Geometry.Attribute("node","float",2),color:new Ao.Geometry.Attribute("color","float",4,"COLOR")},dynamic:!0,mainAttribute:"node"}),renderOrder:-1,mode:Ao.Mesh.LINES}),this._edgesMesh=new Ao.Mesh({material:new Ao.Material({shader:Ao.createShader("ecgl.meshLines2D"),transparent:!0,depthMask:!1,depthTest:!1}),$ignorePicking:!0,geometry:new mp({useNativeLine:!1,dynamic:!0}),renderOrder:-1,culling:!1}),this._layoutId=0,this._control=new Ap({zr:t.getZr(),viewGL:this.viewGL}),this._control.setTarget(this.groupGL),this._control.init(),this._clickHandler=this._clickHandler.bind(this)},render:function(e,t,r){this.groupGL.add(this._pointsBuilder.rootNode),this._model=e,this._api=r,this._initLayout(e,t,r),this._pointsBuilder.update(e,t,r),this._forceLayoutInstance instanceof yp||this.groupGL.remove(this._forceEdgesMesh),this._updateCamera(e,r),this._control.off("update"),this._control.on("update",(function(){r.dispatchAction({type:"graphGLRoam",seriesId:e.id,zoom:this._control.getZoom(),offset:this._control.getOffset()}),this._pointsBuilder.updateView(this.viewGL.camera)}),this),this._control.setZoom(Un.firstNotNull(e.get("zoom"),1)),this._control.setOffset(e.get("offset")||[0,0]);var i=this._pointsBuilder.getPointsMesh();if(i.off("mousemove",this._mousemoveHandler),i.off("mouseout",this._mouseOutHandler,this),r.getZr().off("click",this._clickHandler),this._pointsBuilder.highlightOnMouseover=!0,e.get("focusNodeAdjacency")){var n=e.get("focusNodeAdjacencyOn");"click"===n?r.getZr().on("click",this._clickHandler):"mouseover"===n&&(i.on("mousemove",this._mousemoveHandler,this),i.on("mouseout",this._mouseOutHandler,this),this._pointsBuilder.highlightOnMouseover=!1)}this._lastMouseOverDataIndex=-1},_clickHandler:function(e){if(!this._layouting){var t=this._pointsBuilder.getPointsMesh().dataIndex;t>=0?this._api.dispatchAction({type:"graphGLFocusNodeAdjacency",seriesId:this._model.id,dataIndex:t}):this._api.dispatchAction({type:"graphGLUnfocusNodeAdjacency",seriesId:this._model.id})}},_mousemoveHandler:function(e){if(!this._layouting){var t=this._pointsBuilder.getPointsMesh().dataIndex;t>=0?t!==this._lastMouseOverDataIndex&&this._api.dispatchAction({type:"graphGLFocusNodeAdjacency",seriesId:this._model.id,dataIndex:t}):this._mouseOutHandler(e),this._lastMouseOverDataIndex=t}},_mouseOutHandler:function(e){this._layouting||(this._api.dispatchAction({type:"graphGLUnfocusNodeAdjacency",seriesId:this._model.id}),this._lastMouseOverDataIndex=-1)},_updateForceEdgesGeometry:function(e,t){var r=this._forceEdgesMesh.geometry,i=t.getEdgeData(),n=0,a=this._forceLayoutInstance,o=2*i.count();r.attributes.node.init(o),r.attributes.color.init(o),i.each((function(t){var o=e[t];r.attributes.node.set(n,a.getNodeUV(o.node1)),r.attributes.node.set(n+1,a.getNodeUV(o.node2));var s=wh(i,o.dataIndex),l=Ao.parseColor(s);l[3]*=Un.firstNotNull(Eh(i,o.dataIndex),1),r.attributes.color.set(n,l),r.attributes.color.set(n+1,l),n+=2})),r.dirty()},_updateMeshLinesGeometry:function(){var e=this._model.getEdgeData(),t=this._edgesMesh.geometry,r=(e=this._model.getEdgeData(),this._model.getData().getLayout("points"));t.resetOffset(),t.setVertexCount(e.count()*t.getLineVertexCount()),t.setTriangleCount(e.count()*t.getLineTriangleCount());var i=[],n=[],a=["lineStyle","width"];this._originalEdgeColors=new Float32Array(4*e.count()),this._edgeIndicesMap=new Float32Array(e.count()),e.each((function(o){var s=e.graph.getEdgeByIndex(o),l=2*s.node1.dataIndex,u=2*s.node2.dataIndex;i[0]=r[l],i[1]=r[l+1],n[0]=r[u],n[1]=r[u+1];var h=wh(e,s.dataIndex),c=Ao.parseColor(h);c[3]*=Un.firstNotNull(Eh(e,s.dataIndex),1);var d=e.getItemModel(s.dataIndex),f=Un.firstNotNull(d.get(a),1)*this._api.getDevicePixelRatio();t.addLine(i,n,c,f);for(var p=0;p<4;p++)this._originalEdgeColors[4*s.dataIndex+p]=c[p];this._edgeIndicesMap[s.dataIndex]=o}),this),t.dirty()},_updateForceNodesGeometry:function(e){for(var t=this._pointsBuilder.getPointsMesh(),r=[],i=0;i<e.count();i++)this._forceLayoutInstance.getNodeUV(i,r),t.geometry.attributes.position.set(i,r);t.geometry.dirty("position")},_initLayout:function(e,t,r){var i=e.get("layout"),n=e.getGraph(),a=e.getBoxLayoutParams(),o=Object(Us["g"])(a,{width:r.getWidth(),height:r.getHeight()});"force"===i&&(i="forceAtlas2"),this.stopLayout(e,t,r,{beforeLayout:!0});var s=e.getData(),u=e.getData();if("forceAtlas2"===i){var h=e.getModel("forceAtlas2"),c=this._forceLayoutInstance,d=[],f=[],p=s.getDataExtent("value"),m=u.getDataExtent("value"),g=Un.firstNotNull(h.get("edgeWeight"),1),_=Un.firstNotNull(h.get("nodeWeight"),1);"number"===typeof g&&(g=[g,g]),"number"===typeof _&&(_=[_,_]);var v=0,y={},x=new Float32Array(2*s.count());if(n.eachNode((function(e){var t,r,i=e.dataIndex,n=s.get("value",i);if(s.hasItemOption){var a=s.getItemModel(i);t=a.get("x"),r=a.get("y")}null==t&&(t=o.x+Math.random()*o.width,r=o.y+Math.random()*o.height),x[2*v]=t,x[2*v+1]=r,y[e.id]=v++;var u=l["E"].linearMap(n,p,_);isNaN(u)&&(u=isNaN(_[0])?1:_[0]),d.push({x:t,y:r,mass:u,size:s.getItemVisual(i,"symbolSize")})})),s.setLayout("points",x),n.eachEdge((function(e){var t=e.dataIndex,r=s.get("value",t),i=l["E"].linearMap(r,m,g);isNaN(i)&&(i=isNaN(g[0])?1:g[0]),f.push({node1:y[e.node1.id],node2:y[e.node2.id],weight:i,dataIndex:t})})),!c){var T=h.get("GPU");this._forceLayoutInstance&&((!T||this._forceLayoutInstance instanceof yp)&&(T||this._forceLayoutInstance instanceof Sp)||(this._forceLayoutInstanceToDispose=this._forceLayoutInstance)),c=this._forceLayoutInstance=T?new yp:new Sp}c.initData(d,f),c.updateOption(h.option),this._updateForceEdgesGeometry(c.getEdges(),e),this._updatePositionTexture(),r.dispatchAction({type:"graphGLStartLayout",from:this.uid})}else{x=new Float32Array(2*s.count()),v=0;n.eachNode((function(e){var t,r,i=e.dataIndex;if(s.hasItemOption){var n=s.getItemModel(i);t=n.get("x"),r=n.get("y")}x[v++]=t,x[v++]=r})),s.setLayout("points",x),this._updateAfterLayout(e,t,r)}},_updatePositionTexture:function(){var e=this._forceLayoutInstance.getNodePositionTexture();this._pointsBuilder.setPositionTexture(e),this._forceEdgesMesh.material.set("positionTex",e)},startLayout:function(e,t,r,i){if(!i||null==i.from||i.from===this.uid){var n=this.viewGL,a=(r=this._api,this._forceLayoutInstance),o=this._model.getData(),s=this._model.getModel("forceAtlas2");if(a&&(this.groupGL.remove(this._edgesMesh),this.groupGL.add(this._forceEdgesMesh),this._forceLayoutInstance)){this._updateForceNodesGeometry(e.getData()),this._pointsBuilder.hideLabels();var l=this,u=this._layoutId=Pp++,h=s.getShallow("maxSteps"),c=s.getShallow("steps"),d=0,f=Math.max(2*c,20),p=function(t){if(t===l._layoutId)return a.isFinished(h)?(r.dispatchAction({type:"graphGLStopLayout",from:l.uid}),void r.dispatchAction({type:"graphGLFinishLayout",points:o.getLayout("points"),from:l.uid})):void a.update(n.layer.renderer,c,(function(){l._updatePositionTexture(),d+=c,d>=f&&(l._syncNodePosition(e),d=0),r.getZr().refresh(),No((function(){p(t)}))}))};No((function(){l._forceLayoutInstanceToDispose&&(l._forceLayoutInstanceToDispose.dispose(n.layer.renderer),l._forceLayoutInstanceToDispose=null),p(u)})),this._layouting=!0}}},stopLayout:function(e,t,r,i){i&&null!=i.from&&i.from!==this.uid||(this._layoutId=0,this.groupGL.remove(this._forceEdgesMesh),this.groupGL.add(this._edgesMesh),this._forceLayoutInstance&&this.viewGL.layer&&(i&&i.beforeLayout||(this._syncNodePosition(e),this._updateAfterLayout(e,t,r)),this._api.getZr().refresh(),this._layouting=!1))},_syncNodePosition:function(e){var t=this._forceLayoutInstance.getNodePosition(this.viewGL.layer.renderer);e.getData().setLayout("points",t),e.setNodePosition(t)},_updateAfterLayout:function(e,t,r){this._updateMeshLinesGeometry(),this._pointsBuilder.removePositionTexture(),this._pointsBuilder.updateLayout(e,t,r),this._pointsBuilder.updateView(this.viewGL.camera),this._pointsBuilder.updateLabels(),this._pointsBuilder.showLabels()},focusNodeAdjacency:function(e,t,r,i){var n=this._model.getData();this._downplayAll();var a=i.dataIndex,o=n.graph,s=[],l=o.getNodeByIndex(a);s.push(l),l.edges.forEach((function(e){e.dataIndex<0||(e.node1!==l&&s.push(e.node1),e.node2!==l&&s.push(e.node2))}),this),this._pointsBuilder.fadeOutAll(.05),this._fadeOutEdgesAll(.05),s.forEach((function(e){this._pointsBuilder.highlight(n,e.dataIndex)}),this),this._pointsBuilder.updateLabels(s.map((function(e){return e.dataIndex})));var u=[];l.edges.forEach((function(e){e.dataIndex>=0&&(this._highlightEdge(e.dataIndex),u.push(e))}),this),this._focusNodes=s,this._focusEdges=u},unfocusNodeAdjacency:function(e,t,r,i){this._downplayAll(),this._pointsBuilder.fadeInAll(),this._fadeInEdgesAll(),this._pointsBuilder.updateLabels()},_highlightEdge:function(e){var t=this._model.getEdgeData().getItemModel(e),r=Ao.parseColor(t.get("emphasis.lineStyle.color")||t.get("lineStyle.color")),i=Un.firstNotNull(t.get("emphasis.lineStyle.opacity"),t.get("lineStyle.opacity"),1);r[3]*=i,this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[e],r)},_downplayAll:function(){this._focusNodes&&this._focusNodes.forEach((function(e){this._pointsBuilder.downplay(this._model.getData(),e.dataIndex)}),this),this._focusEdges&&this._focusEdges.forEach((function(e){this._downplayEdge(e.dataIndex)}),this)},_downplayEdge:function(e){var t=this._getColor(e,[]);this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[e],t)},_setEdgeFade:function(){var e=[];return function(t,r){this._getColor(t,e),e[3]*=r,this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[t],e)}}(),_getColor:function(e,t){for(var r=0;r<4;r++)t[r]=this._originalEdgeColors[4*e+r];return t},_fadeOutEdgesAll:function(e){var t=this._model.getData().graph;t.eachEdge((function(t){this._setEdgeFade(t.dataIndex,e)}),this)},_fadeInEdgesAll:function(){this._fadeOutEdgesAll(1)},_updateCamera:function(e,t){this.viewGL.setViewport(0,0,t.getWidth(),t.getHeight(),t.getDevicePixelRatio());for(var r=this.viewGL.camera,i=e.getData(),n=i.getLayout("points"),a=Cp.create(1/0,1/0),o=Cp.create(-1/0,-1/0),s=[],l=0;l<n.length;)s[0]=n[l++],s[1]=n[l++],Cp.min(a,a,s),Cp.max(o,o,s);var u=(o[1]+a[1])/2,h=(o[0]+a[0])/2;if(!(h>r.left&&h<r.right&&u<r.bottom&&u>r.top)){var c=Math.max(o[0]-a[0],10),d=c/t.getWidth()*t.getHeight();c*=1.4,d*=1.4,a[0]-=.2*c,r.left=a[0],r.top=u-d/2,r.bottom=u+d/2,r.right=c+a[0],r.near=0,r.far=100}},dispose:function(){var e=this.viewGL.layer.renderer;this._forceLayoutInstance&&this._forceLayoutInstance.dispose(e),this.groupGL.removeAll(),this._layoutId=-1},remove:function(){this.groupGL.removeAll(),this._control.dispose()}});function Op(e){return e instanceof Array||(e=[e,e]),e}function Dp(e){function t(){}e.registerChartView(Lp),e.registerSeriesModel(cp),e.registerVisual((function(e){const t={};e.eachSeriesByType("graphGL",(function(e){var r=e.getCategoriesData(),i=e.getData(),n={};r.each((function(i){var a=r.getName(i);n["ec-"+a]=i;var o=r.getItemModel(i),s=o.getModel("itemStyle").getItemStyle();s.fill||(s.fill=e.getColorFromPalette(a,t)),r.setItemVisual(i,"style",s);var l=["symbol","symbolSize","symbolKeepAspect"];for(let e=0;e<l.length;e++){var u=o.getShallow(l[e],!0);null!=u&&r.setItemVisual(i,l[e],u)}})),r.count()&&i.each((function(e){var t=i.getItemModel(e);let a=t.getShallow("category");if(null!=a){"string"===typeof a&&(a=n["ec-"+a]);var o=r.getItemVisual(a,"style"),s=i.ensureUniqueItemVisual(e,"style");l["Y"].extend(s,o);var u=["symbol","symbolSize","symbolKeepAspect"];for(let t=0;t<u.length;t++)i.setItemVisual(e,u[t],r.getItemVisual(a,u[t]))}}))}))})),e.registerVisual((function(e){e.eachSeriesByType("graphGL",(function(e){var t=e.getGraph(),r=e.getEdgeData(),i=Op(e.get("edgeSymbol")),n=Op(e.get("edgeSymbolSize"));r.setVisual("drawType","stroke"),r.setVisual("fromSymbol",i&&i[0]),r.setVisual("toSymbol",i&&i[1]),r.setVisual("fromSymbolSize",n&&n[0]),r.setVisual("toSymbolSize",n&&n[1]),r.setVisual("style",e.getModel("lineStyle").getLineStyle()),r.each((function(e){var i=r.getItemModel(e),n=t.getEdgeByIndex(e),a=Op(i.getShallow("symbol",!0)),o=Op(i.getShallow("symbolSize",!0)),s=i.getModel("lineStyle").getLineStyle(),u=r.ensureUniqueItemVisual(e,"style");switch(l["Y"].extend(u,s),u.stroke){case"source":var h=n.node1.getVisual("style");u.stroke=h&&h.fill;break;case"target":h=n.node2.getVisual("style");u.stroke=h&&h.fill;break}a[0]&&n.setVisual("fromSymbol",a[0]),a[1]&&n.setVisual("toSymbol",a[1]),o[0]&&n.setVisual("fromSymbolSize",o[0]),o[1]&&n.setVisual("toSymbolSize",o[1])}))}))})),e.registerAction({type:"graphGLRoam",event:"graphglroam",update:"series.graphGL:roam"},(function(e,t){t.eachComponent({mainType:"series",query:e},(function(t){t.setView(e)}))})),e.registerAction({type:"graphGLStartLayout",event:"graphgllayoutstarted",update:"series.graphGL:startLayout"},t),e.registerAction({type:"graphGLStopLayout",event:"graphgllayoutstopped",update:"series.graphGL:stopLayout"},t),e.registerAction({type:"graphGLFocusNodeAdjacency",event:"graphGLFocusNodeAdjacency",update:"series.graphGL:focusNodeAdjacency"},t),e.registerAction({type:"graphGLUnfocusNodeAdjacency",event:"graphGLUnfocusNodeAdjacency",update:"series.graphGL:unfocusNodeAdjacency"},t)}Object(l["X"])(Dp);var Rp=l["h"].extend({type:"series.flowGL",dependencies:["geo","grid","bmap"],visualStyleAccessPath:"itemStyle",getInitialData:function(e,t){var r=l["v"](this.get("coordinateSystem"))||["x","y"];r.push("vx","vy");var i=l["A"].createDimensions(this.getSource(),{coordDimensions:r,encodeDefine:this.get("encode"),dimensionsDefine:this.get("dimensions")}),n=new l["e"](i,this);return n.initData(this.getSource()),n},defaultOption:{coordinateSystem:"cartesian2d",zlevel:10,supersampling:1,particleType:"point",particleDensity:128,particleSize:1,particleSpeed:1,particleTrail:2,colorTexture:null,gridWidth:"auto",gridHeight:"auto",itemStyle:{color:"#fff",opacity:.8}}}),Ip=Tr.extend((function(){return{dynamic:!0,attributes:{position:new Tr.Attribute("position","float",3,"POSITION")}}}),{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setLineCount:function(e){var t=this.attributes,r=4*e,i=2*e;this.vertexCount!==r&&t.position.init(r),this.triangleCount!==i&&(this.indices=0===i?null:this.vertexCount>65535?new Uint32Array(3*i):new Uint16Array(3*i))},addLine:function(e){var t=this._vertexOffset;this.attributes.position.set(t,[e[0],e[1],1]),this.attributes.position.set(t+1,[e[0],e[1],-1]),this.attributes.position.set(t+2,[e[0],e[1],2]),this.attributes.position.set(t+3,[e[0],e[1],-2]),this.setTriangleIndices(this._faceOffset++,[t,t+1,t+2]),this.setTriangleIndices(this._faceOffset++,[t+1,t+2,t+3]),this._vertexOffset+=4}}),Fp=Ip,Bp="@export ecgl.vfParticle.particle.fragment\n\nuniform sampler2D particleTexture;\nuniform sampler2D spawnTexture;\nuniform sampler2D velocityTexture;\n\nuniform float deltaTime;\nuniform float elapsedTime;\n\nuniform float speedScaling : 1.0;\n\nuniform vec2 textureSize;\nuniform vec4 region : [0, 0, 1, 1];\nuniform float firstFrameTime;\n\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\n vec4 p = texture2D(particleTexture, v_Texcoord);\n bool spawn = false;\n if (p.w <= 0.0) {\n p = texture2D(spawnTexture, fract(v_Texcoord + elapsedTime / 10.0));\n p.w -= firstFrameTime;\n spawn = true;\n }\n vec2 v = texture2D(velocityTexture, fract(p.xy * region.zw + region.xy)).xy;\n v = (v - 0.5) * 2.0;\n p.z = length(v);\n p.xy += v * deltaTime / 10.0 * speedScaling;\n p.w -= deltaTime;\n\n if (spawn || p.xy != fract(p.xy)) {\n p.z = 0.0;\n }\n p.xy = fract(p.xy);\n\n gl_FragColor = p;\n}\n@end\n\n@export ecgl.vfParticle.renderPoints.vertex\n\n#define PI 3.1415926\n\nattribute vec2 texcoord : TEXCOORD_0;\n\nuniform sampler2D particleTexture;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nuniform float size : 1.0;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\nvoid main()\n{\n vec4 p = texture2D(particleTexture, texcoord);\n\n if (p.w > 0.0 && p.z > 1e-5) {\n gl_Position = worldViewProjection * vec4(p.xy * 2.0 - 1.0, 0.0, 1.0);\n }\n else {\n gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);\n }\n\n v_Mag = p.z;\n v_Uv = p.xy;\n\n gl_PointSize = size;\n}\n\n@end\n\n@export ecgl.vfParticle.renderPoints.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform sampler2D gradientTexture;\nuniform sampler2D colorTexture;\nuniform sampler2D spriteTexture;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\nvoid main()\n{\n gl_FragColor = color;\n#ifdef SPRITETEXTURE_ENABLED\n gl_FragColor *= texture2D(spriteTexture, gl_PointCoord);\n if (color.a == 0.0) {\n discard;\n }\n#endif\n#ifdef GRADIENTTEXTURE_ENABLED\n gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));\n#endif\n#ifdef COLORTEXTURE_ENABLED\n gl_FragColor *= texture2D(colorTexture, v_Uv);\n#endif\n}\n\n@end\n\n@export ecgl.vfParticle.renderLines.vertex\n\n#define PI 3.1415926\n\nattribute vec3 position : POSITION;\n\nuniform sampler2D particleTexture;\nuniform sampler2D prevParticleTexture;\n\nuniform float size : 1.0;\nuniform vec4 vp: VIEWPORT;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\n@import clay.util.rand\n\nvoid main()\n{\n vec4 p = texture2D(particleTexture, position.xy);\n vec4 p2 = texture2D(prevParticleTexture, position.xy);\n\n p.xy = p.xy * 2.0 - 1.0;\n p2.xy = p2.xy * 2.0 - 1.0;\n\n if (p.w > 0.0 && p.z > 1e-5) {\n vec2 dir = normalize(p.xy - p2.xy);\n vec2 norm = vec2(dir.y / vp.z, -dir.x / vp.w) * sign(position.z) * size;\n if (abs(position.z) == 2.0) {\n gl_Position = vec4(p.xy + norm, 0.0, 1.0);\n v_Uv = p.xy;\n v_Mag = p.z;\n }\n else {\n gl_Position = vec4(p2.xy + norm, 0.0, 1.0);\n v_Mag = p2.z;\n v_Uv = p2.xy;\n }\n gl_Position = worldViewProjection * gl_Position;\n }\n else {\n gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);\n }\n}\n\n@end\n\n@export ecgl.vfParticle.renderLines.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform sampler2D gradientTexture;\nuniform sampler2D colorTexture;\n\nvarying float v_Mag;\nvarying vec2 v_Uv;\n\nvoid main()\n{\n gl_FragColor = color;\n #ifdef GRADIENTTEXTURE_ENABLED\n gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));\n#endif\n#ifdef COLORTEXTURE_ENABLED\n gl_FragColor *= texture2D(colorTexture, v_Uv);\n#endif\n}\n\n@end\n";function zp(e){var t=document.createElement("canvas");t.width=t.height=e;var r=t.getContext("2d");return r.fillStyle="#fff",r.arc(e/2,e/2,e/2,0,2*Math.PI),r.fill(),t}Ye["import"](Bp);var Up=function(){this.motionBlurFactor=.99,this.vectorFieldTexture=new lr({type:$t.FLOAT,flipY:!1}),this.particleLife=[5,20],this._particleType="point",this._particleSize=1,this.particleColor=[1,1,1,1],this.particleSpeedScaling=1,this._thisFrameTexture=null,this._particlePass=null,this._spawnTexture=null,this._particleTexture0=null,this._particleTexture1=null,this._particlePointsMesh=null,this._surfaceFrameBuffer=null,this._elapsedTime=0,this._scene=null,this._camera=null,this._lastFrameTexture=null,this._supersampling=1,this._downsampleTextures=[],this._width=512,this._height=512,this.init()};Up.prototype={constructor:Up,init:function(){var e={type:$t.FLOAT,minFilter:$t.NEAREST,magFilter:$t.NEAREST,useMipmap:!1};this._spawnTexture=new lr(e),this._particleTexture0=new lr(e),this._particleTexture1=new lr(e),this._frameBuffer=new vi({depthBuffer:!1}),this._particlePass=new bn({fragment:Ye.source("ecgl.vfParticle.particle.fragment")}),this._particlePass.setUniform("velocityTexture",this.vectorFieldTexture),this._particlePass.setUniform("spawnTexture",this._spawnTexture),this._downsamplePass=new bn({fragment:Ye.source("clay.compositor.downsample")});var t=new tr({renderOrder:10,material:new ne({shader:new Ye(Ye.source("ecgl.vfParticle.renderPoints.vertex"),Ye.source("ecgl.vfParticle.renderPoints.fragment"))}),mode:tr.POINTS,geometry:new Tr({dynamic:!0,mainAttribute:"texcoord0"})}),r=new tr({renderOrder:10,material:new ne({shader:new Ye(Ye.source("ecgl.vfParticle.renderLines.vertex"),Ye.source("ecgl.vfParticle.renderLines.fragment"))}),geometry:new Fp,culling:!1}),i=new tr({material:new ne({shader:new Ye(Ye.source("ecgl.color.vertex"),Ye.source("ecgl.color.fragment"))}),geometry:new wi});i.material.enableTexture("diffuseMap"),this._particlePointsMesh=t,this._particleLinesMesh=r,this._lastFrameFullQuadMesh=i,this._camera=new gn,this._thisFrameTexture=new lr,this._lastFrameTexture=new lr},setParticleDensity:function(e,t){for(var r=e*t,i=new Float32Array(4*r),n=0,a=this.particleLife,o=0;o<e;o++)for(var s=0;s<t;s++,n++){i[4*n]=Math.random(),i[4*n+1]=Math.random(),i[4*n+2]=Math.random();var l=(a[1]-a[0])*Math.random()+a[0];i[4*n+3]=l}"line"===this._particleType?this._setLineGeometry(e,t):this._setPointsGeometry(e,t),this._spawnTexture.width=e,this._spawnTexture.height=t,this._spawnTexture.pixels=i,this._particleTexture0.width=this._particleTexture1.width=e,this._particleTexture0.height=this._particleTexture1.height=t,this._particlePass.setUniform("textureSize",[e,t])},_setPointsGeometry:function(e,t){var r=e*t,i=this._particlePointsMesh.geometry,n=i.attributes;n.texcoord0.init(r);for(var a=0,o=0;o<e;o++)for(var s=0;s<t;s++,a++)n.texcoord0.value[2*a]=o/e,n.texcoord0.value[2*a+1]=s/t;i.dirty()},_setLineGeometry:function(e,t){var r=e*t,i=this._getParticleMesh().geometry;i.setLineCount(r),i.resetOffset();for(var n=0;n<e;n++)for(var a=0;a<t;a++)i.addLine([n/e,a/t]);i.dirty()},_getParticleMesh:function(){return"line"===this._particleType?this._particleLinesMesh:this._particlePointsMesh},update:function(e,t,r,i){var n=this._getParticleMesh(),a=this._frameBuffer,o=this._particlePass;i&&this._updateDownsampleTextures(e,t),n.material.set("size",this._particleSize*this._supersampling),n.material.set("color",this.particleColor),o.setUniform("speedScaling",this.particleSpeedScaling),a.attach(this._particleTexture1),o.setUniform("firstFrameTime",i?(this.particleLife[1]+this.particleLife[0])/2:0),o.setUniform("particleTexture",this._particleTexture0),o.setUniform("deltaTime",r),o.setUniform("elapsedTime",this._elapsedTime),o.render(e,a),n.material.set("particleTexture",this._particleTexture1),n.material.set("prevParticleTexture",this._particleTexture0),a.attach(this._thisFrameTexture),a.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT);var s=this._lastFrameFullQuadMesh;s.material.set("diffuseMap",this._lastFrameTexture),s.material.set("color",[1,1,1,this.motionBlurFactor]),this._camera.update(!0),e.renderPass([s,n],this._camera),a.unbind(e),this._downsample(e),this._swapTexture(),this._elapsedTime+=r},_downsample:function(e){var t=this._downsampleTextures;if(0!==t.length){var r=0,i=this._thisFrameTexture,n=t[r];while(n)this._frameBuffer.attach(n),this._downsamplePass.setUniform("texture",i),this._downsamplePass.setUniform("textureSize",[i.width,i.height]),this._downsamplePass.render(e,this._frameBuffer),i=n,n=t[++r]}},getSurfaceTexture:function(){var e=this._downsampleTextures;return e.length>0?e[e.length-1]:this._lastFrameTexture},setRegion:function(e){this._particlePass.setUniform("region",e)},resize:function(e,t){this._lastFrameTexture.width=e*this._supersampling,this._lastFrameTexture.height=t*this._supersampling,this._thisFrameTexture.width=e*this._supersampling,this._thisFrameTexture.height=t*this._supersampling,this._width=e,this._height=t},setParticleSize:function(e){var t=this._getParticleMesh();if(e<=2)return t.material.disableTexture("spriteTexture"),void(t.material.transparent=!1);this._spriteTexture||(this._spriteTexture=new lr),this._spriteTexture.image&&this._spriteTexture.image.width===e||(this._spriteTexture.image=zp(e),this._spriteTexture.dirty()),t.material.transparent=!0,t.material.enableTexture("spriteTexture"),t.material.set("spriteTexture",this._spriteTexture),this._particleSize=e},setGradientTexture:function(e){var t=this._getParticleMesh().material;t[e?"enableTexture":"disableTexture"]("gradientTexture"),t.setUniform("gradientTexture",e)},setColorTextureImage:function(e,t){var r=this._getParticleMesh().material;r.setTextureImage("colorTexture",e,t,{flipY:!0})},setParticleType:function(e){this._particleType=e},clearFrame:function(e){var t=this._frameBuffer;t.attach(this._lastFrameTexture),t.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT),t.unbind(e)},setSupersampling:function(e){this._supersampling=e,this.resize(this._width,this._height)},_updateDownsampleTextures:function(e,t){for(var r=this._downsampleTextures,i=Math.max(Math.floor(Math.log(this._supersampling/t.getDevicePixelRatio())/Math.log(2)),0),n=2,a=this._width*this._supersampling,o=this._height*this._supersampling,s=0;s<i;s++)r[s]=r[s]||new lr,r[s].width=a/n,r[s].height=o/n,n*=2;for(;s<r.length;s++)r[s].dispose(e);r.length=i},_swapTexture:function(){var e=this._particleTexture0;this._particleTexture0=this._particleTexture1,this._particleTexture1=e;e=this._thisFrameTexture;this._thisFrameTexture=this._lastFrameTexture,this._lastFrameTexture=e},dispose:function(e){e.disposeFrameBuffer(this._frameBuffer),e.disposeTexture(this.vectorFieldTexture),e.disposeTexture(this._spawnTexture),e.disposeTexture(this._particleTexture0),e.disposeTexture(this._particleTexture1),e.disposeTexture(this._thisFrameTexture),e.disposeTexture(this._lastFrameTexture),e.disposeGeometry(this._particleLinesMesh.geometry),e.disposeGeometry(this._particlePointsMesh.geometry),e.disposeGeometry(this._lastFrameFullQuadMesh.geometry),this._spriteTexture&&e.disposeTexture(this._spriteTexture),this._particlePass.dispose(e),this._downsamplePass.dispose(e),this._downsampleTextures.forEach((function(t){t.dispose(e)}))}};var Gp=Up,kp=l["b"].extend({type:"flowGL",__ecgl__:!0,init:function(e,t){this.viewGL=new fu("orthographic"),this.groupGL=new Ao.Node,this.viewGL.add(this.groupGL),this._particleSurface=new Gp;var r=new Ao.Mesh({geometry:new Ao.PlaneGeometry,material:new Ao.Material({shader:new Ao.Shader({vertex:Ao.Shader.source("ecgl.color.vertex"),fragment:Ao.Shader.source("ecgl.color.fragment")}),transparent:!0})});r.material.enableTexture("diffuseMap"),this.groupGL.add(r),this._planeMesh=r},render:function(e,t,r){var i=this._particleSurface;i.setParticleType(e.get("particleType")),i.setSupersampling(e.get("supersampling")),this._updateData(e,r),this._updateCamera(r.getWidth(),r.getHeight(),r.getDevicePixelRatio());var n=Un.firstNotNull(e.get("particleDensity"),128);i.setParticleDensity(n,n);var a=this._planeMesh,o=+new Date,s=this,l=!0;a.__percent=0,a.stopAnimation(),a.animate("",{loop:!0}).when(1e5,{__percent:1}).during((function(){var e=+new Date,t=Math.min(e-o,20);o+=t,s._renderer&&(i.update(s._renderer,r,t/1e3,l),a.material.set("diffuseMap",i.getSurfaceTexture())),l=!1})).start();var u=e.getModel("itemStyle"),h=Ao.parseColor(u.get("color"));h[3]*=Un.firstNotNull(u.get("opacity"),1),a.material.set("color",h),i.setColorTextureImage(e.get("colorTexture"),r),i.setParticleSize(e.get("particleSize")),i.particleSpeedScaling=e.get("particleSpeed"),i.motionBlurFactor=1-Math.pow(.1,e.get("particleTrail"))},updateTransform:function(e,t,r){this._updateData(e,r)},afterRender:function(e,t,r,i){var n=i.renderer;this._renderer=n},_updateData:function(e,t){var r=e.coordinateSystem,i=r.dimensions.map((function(t){return e.coordDimToDataDim(t)[0]})),n=e.getData(),a=n.getDataExtent(i[0]),o=n.getDataExtent(i[1]),s=e.get("gridWidth"),l=e.get("gridHeight");if(null==s||"auto"===s){var u=(a[1]-a[0])/(o[1]-o[0]);s=Math.round(Math.sqrt(u*n.count()))}null!=l&&"auto"!==l||(l=Math.ceil(n.count()/s));var h=this._particleSurface.vectorFieldTexture,c=h.pixels;if(c&&c.length===l*s*4)for(var d=0;d<c.length;d++)c[d]=0;else c=h.pixels=new Float32Array(s*l*4);var f=0,p=1/0,m=new Float32Array(2*n.count()),g=0,_=[[1/0,1/0],[-1/0,-1/0]];n.each([i[0],i[1],"vx","vy"],(function(e,t,i,n){var a=r.dataToPoint([e,t]);m[g++]=a[0],m[g++]=a[1],_[0][0]=Math.min(a[0],_[0][0]),_[0][1]=Math.min(a[1],_[0][1]),_[1][0]=Math.max(a[0],_[1][0]),_[1][1]=Math.max(a[1],_[1][1]);var o=Math.sqrt(i*i+n*n);f=Math.max(f,o),p=Math.min(p,o)})),n.each(["vx","vy"],(function(e,t,r){var i=Math.round((m[2*r]-_[0][0])/(_[1][0]-_[0][0])*(s-1)),n=l-1-Math.round((m[2*r+1]-_[0][1])/(_[1][1]-_[0][1])*(l-1)),a=4*(n*s+i);c[a]=e/f*.5+.5,c[a+1]=t/f*.5+.5,c[a+3]=1})),h.width=s,h.height=l,"bmap"===e.get("coordinateSystem")&&this._fillEmptyPixels(h),h.dirty(),this._updatePlanePosition(_[0],_[1],e,t),this._updateGradientTexture(n.getVisual("visualMeta"),[p,f])},_fillEmptyPixels:function(e){var t=e.pixels,r=e.width,i=e.height;function n(e,n,a){e=Math.max(Math.min(e,r-1),0),n=Math.max(Math.min(n,i-1),0);var o=4*(n*(r-1)+e);return 0!==t[o+3]&&(a[0]=t[o],a[1]=t[o+1],!0)}function a(e,t,r){r[0]=e[0]+t[0],r[1]=e[1]+t[1]}for(var o=[],s=[],l=[],u=[],h=[],c=0,d=0;d<i;d++)for(var f=0;f<r;f++){var p=4*(d*(r-1)+f);0===t[p+3]&&(c=o[0]=o[1]=0,n(f-1,d,s)&&(c++,a(s,o,o)),n(f+1,d,l)&&(c++,a(l,o,o)),n(f,d-1,u)&&(c++,a(u,o,o)),n(f,d+1,h)&&(c++,a(h,o,o)),o[0]/=c,o[1]/=c,t[p]=o[0],t[p+1]=o[1]),t[p+3]=1}},_updateGradientTexture:function(e,t){if(e&&e.length){this._gradientTexture=this._gradientTexture||new Ao.Texture2D({image:document.createElement("canvas")});var r=this._gradientTexture,i=r.image;i.width=200,i.height=1;var n=i.getContext("2d"),a=n.createLinearGradient(0,.5,i.width,.5);e[0].stops.forEach((function(e){var r;t[1]===t[0]?r=0:(r=e.value/t[1],r=Math.min(Math.max(r,0),1)),a.addColorStop(r,e.color)})),n.fillStyle=a,n.fillRect(0,0,i.width,i.height),r.dirty(),this._particleSurface.setGradientTexture(this._gradientTexture)}else this._particleSurface.setGradientTexture(null)},_updatePlanePosition:function(e,t,r,i){var n=this._limitInViewportAndFullFill(e,t,r,i);e=n.leftTop,t=n.rightBottom,this._particleSurface.setRegion(n.region),this._planeMesh.position.set((e[0]+t[0])/2,i.getHeight()-(e[1]+t[1])/2,0);var a=t[0]-e[0],o=t[1]-e[1];this._planeMesh.scale.set(a/2,o/2,1),this._particleSurface.resize(Math.max(Math.min(a,2048),1),Math.max(Math.min(o,2048),1)),this._renderer&&this._particleSurface.clearFrame(this._renderer)},_limitInViewportAndFullFill:function(e,t,r,i){var n=[Math.max(e[0],0),Math.max(e[1],0)],a=[Math.min(t[0],i.getWidth()),Math.min(t[1],i.getHeight())];if("bmap"===r.get("coordinateSystem")){var o=r.getData().getDataExtent(r.coordDimToDataDim("lng")[0]),s=Math.floor(o[1]-o[0])>=359;s&&(n[0]>0&&(n[0]=0),a[0]<i.getWidth()&&(a[0]=i.getWidth()))}var l=t[0]-e[0],u=t[1]-e[1],h=a[0]-n[0],c=a[1]-n[1],d=[(n[0]-e[0])/l,1-c/u-(n[1]-e[1])/u,h/l,c/u];return{leftTop:n,rightBottom:a,region:d}},_updateCamera:function(e,t,r){this.viewGL.setViewport(0,0,e,t,r);var i=this.viewGL.camera;i.left=i.bottom=0,i.top=t,i.right=e,i.near=0,i.far=100,i.position.z=10},remove:function(){this._planeMesh.stopAnimation(),this.groupGL.removeAll()},dispose:function(){this._renderer&&this._particleSurface.dispose(this._renderer),this.groupGL.removeAll()}});function Hp(e){e.registerChartView(kp),e.registerSeriesModel(Rp)}Object(l["X"])(Hp);var Vp=l["h"].extend({type:"series.linesGL",dependencies:["grid","geo"],visualStyleAccessPath:"lineStyle",visualDrawType:"stroke",streamEnabled:!0,init:function(e){var t=this._processFlatCoordsArray(e.data);this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset,t.flatCoords&&(e.data=new Float32Array(t.count)),Vp.superApply(this,"init",arguments)},mergeOption:function(e){var t=this._processFlatCoordsArray(e.data);this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset,t.flatCoords&&(e.data=new Float32Array(t.count)),Vp.superApply(this,"mergeOption",arguments)},appendData:function(e){var t=this._processFlatCoordsArray(e.data);t.flatCoords&&(this._flatCoords?(this._flatCoords=ka(this._flatCoords,t.flatCoords),this._flatCoordsOffset=ka(this._flatCoordsOffset,t.flatCoordsOffset)):(this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset),e.data=new Float32Array(t.count)),this.getRawData().appendData(e.data)},_getCoordsFromItemModel:function(e){var t=this.getData().getItemModel(e),r=t.option instanceof Array?t.option:t.getShallow("coords");return r},getLineCoordsCount:function(e){return this._flatCoordsOffset?this._flatCoordsOffset[2*e+1]:this._getCoordsFromItemModel(e).length},getLineCoords:function(e,t){if(this._flatCoordsOffset){for(var r=this._flatCoordsOffset[2*e],i=this._flatCoordsOffset[2*e+1],n=0;n<i;n++)t[n]=t[n]||[],t[n][0]=this._flatCoords[r+2*n],t[n][1]=this._flatCoords[r+2*n+1];return i}var a=this._getCoordsFromItemModel(e);for(n=0;n<a.length;n++)t[n]=t[n]||[],t[n][0]=a[n][0],t[n][1]=a[n][1];return a.length},_processFlatCoordsArray:function(e){var t=0;if(this._flatCoords&&(t=this._flatCoords.length),"number"===typeof e[0]){for(var r=e.length,i=new Uint32Array(r),n=new Float64Array(r),a=0,o=0,s=0,l=0;l<r;){s++;var u=e[l++];i[o++]=a+t,i[o++]=u;for(var h=0;h<u;h++){var c=e[l++],d=e[l++];n[a++]=c,n[a++]=d}}return{flatCoordsOffset:new Uint32Array(i.buffer,0,o),flatCoords:n,count:s}}return{flatCoordsOffset:null,flatCoords:null,count:e.length}},getInitialData:function(e,t){var r=new l["e"](["value"],this);return r.hasItemOption=!1,r.initData(e.data,[],(function(e,t,i,n){if(e instanceof Array)return NaN;r.hasItemOption=!0;var a=e.value;return null!=a?a instanceof Array?a[n]:a:void 0})),r},defaultOption:{coordinateSystem:"geo",zlevel:10,progressive:1e4,progressiveThreshold:5e4,blendMode:"source-over",lineStyle:{opacity:.8},postEffect:{enable:!1,colorCorrection:{exposure:0,brightness:0,contrast:1,saturation:1,enable:!0}}}}),Wp=Vp,jp=l["b"].extend({type:"linesGL",__ecgl__:!0,init:function(e,t){this.groupGL=new Ao.Node,this.viewGL=new fu("orthographic"),this.viewGL.add(this.groupGL),this._glViewHelper=new np(this.viewGL),this._nativeLinesShader=Ao.createShader("ecgl.lines3D"),this._meshLinesShader=Ao.createShader("ecgl.meshLines3D"),this._linesMeshes=[],this._currentStep=0},render:function(e,t,r){this.groupGL.removeAll(),this._glViewHelper.reset(e,r);var i=this._linesMeshes[0];i||(i=this._linesMeshes[0]=this._createLinesMesh(e)),this._linesMeshes.length=1,this.groupGL.add(i),this._updateLinesMesh(e,i,0,e.getData().count()),this.viewGL.setPostEffect(e.getModel("postEffect"),r)},incrementalPrepareRender:function(e,t,r){this.groupGL.removeAll(),this._glViewHelper.reset(e,r),this._currentStep=0,this.viewGL.setPostEffect(e.getModel("postEffect"),r)},incrementalRender:function(e,t,r,i){var n=this._linesMeshes[this._currentStep];n||(n=this._createLinesMesh(t),this._linesMeshes[this._currentStep]=n),this._updateLinesMesh(t,n,e.start,e.end),this.groupGL.add(n),i.getZr().refresh(),this._currentStep++},updateTransform:function(e,t,r){e.coordinateSystem.getRoamTransform&&this._glViewHelper.updateTransform(e,r)},_createLinesMesh:function(e){var t=new Ao.Mesh({$ignorePicking:!0,material:new Ao.Material({shader:Ao.createShader("ecgl.lines3D"),transparent:!0,depthMask:!1,depthTest:!1}),geometry:new mp({segmentScale:10,useNativeLine:!0,dynamic:!1}),mode:Ao.Mesh.LINES,culling:!1});return t},_updateLinesMesh:function(e,t,r,i){var n=e.getData();t.material.blend="lighter"===e.get("blendMode")?Ao.additiveBlend:null;var a=e.get("lineStyle.curveness")||0,o=e.get("polyline"),s=t.geometry,l=e.coordinateSystem,u=Un.firstNotNull(e.get("lineStyle.width"),1);u>1?(t.material.shader!==this._meshLinesShader&&t.material.attachShader(this._meshLinesShader),t.mode=Ao.Mesh.TRIANGLES):(t.material.shader!==this._nativeLinesShader&&t.material.attachShader(this._nativeLinesShader),t.mode=Ao.Mesh.LINES),r=r||0,i=i||n.count(),s.resetOffset();var h=0,c=0,d=[],f=[],p=[],m=[],g=[],_=.3,v=.7;function y(){f[0]=d[0]*v+m[0]*_-(d[1]-m[1])*a,f[1]=d[1]*v+m[1]*_-(m[0]-d[0])*a,p[0]=d[0]*_+m[0]*v-(d[1]-m[1])*a,p[1]=d[1]*_+m[1]*v-(m[0]-d[0])*a}if(o||0!==a)for(var x=r;x<i;x++)if(o){var T=e.getLineCoordsCount(x);h+=s.getPolylineVertexCount(T),c+=s.getPolylineTriangleCount(T)}else e.getLineCoords(x,g),this._glViewHelper.dataToPoint(l,g[0],d),this._glViewHelper.dataToPoint(l,g[1],m),y(),h+=s.getCubicCurveVertexCount(d,f,p,m),c+=s.getCubicCurveTriangleCount(d,f,p,m);else{var b=i-r;h+=b*s.getLineVertexCount(),c+=b*s.getLineVertexCount()}s.setVertexCount(h),s.setTriangleCount(c);var w=r,E=[];for(x=r;x<i;x++){Ao.parseColor(wh(n,w),E);var S=Un.firstNotNull(Eh(n,w),1);E[3]*=S;T=e.getLineCoords(x,g);for(var M=0;M<T;M++)this._glViewHelper.dataToPoint(l,g[M],g[M]);o?s.addPolyline(g,E,u,0,T):0!==a?(d=g[0],m=g[1],y(),s.addCubicCurve(d,f,p,m,E,u)):s.addPolyline(g,E,u,0,2),w++}},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}});function Xp(e){e.registerChartView(jp),e.registerSeriesModel(Wp)}Object(l["X"])(Xp);var qp={data:function(){return{id:Object(s["c"])(),chart:null,test:{width:"300px",height:"300px"}}},props:{options:{type:Object,required:!0},click:{type:Function,default:null},_override:{type:Object},series:{type:Array}},name:"chart",mounted:function(){var e=this;this.setChart(),window.addEventListener("resize",(function(){e.chart.resize()}))},methods:{setChart:function(){var e=this;console.log(this._override),this.$chart.registerTheme(o.theme.themeName,o.theme.theme);var t=this.$chart.init(document.getElementById(this.id),o.theme.themeName,{width:this._override.width?this._override.width:250,height:this._override.height?this._override.height:250});this.chart=t,t.clear(),this.options&&t.setOption(this.options,!0),t.off("click"),t.on("click",(function(t){e.click&&e.click(t)}))},updateSeries:function(){this.chart.setOption({series:[{data:this.series}]})}},watch:{options:function(){this.setChart()},series:function(){this.updateSeries()}}},Yp=qp,Zp=(r("b543"),r("2877")),Kp=Object(Zp["a"])(Yp,i,n,!1,null,"386ca09a",null);t["a"]=Kp.exports},b543:function(e,t,r){"use strict";r("e99a")},e99a:function(e,t,r){}}]);